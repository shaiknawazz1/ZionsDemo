#Code converted on 2023-04-27 14:43:57
import os
from pyspark.sql import *
from pyspark.sql.types import *
from pyspark.sql.functions import *
from pyspark import SparkContext
from pyspark.sql.session import SparkSession

sc = SparkContext('local')
spark = SparkSession(sc)

def convert_encoding(input_str, from_encoding="ISO-8859-1", to_encoding="UTF-8"):
	return input_str.encode(from_encoding).decode(to_encoding)

udf_convert_encoding = udf(convert_encoding, StringType())

def days_in_year(date_str):
    year = int(date_str[:4])
    if calendar.isleap(year):
        return 366
    else:
        return 365

udf_days_in_year = udf(days_in_year, IntegerType())


# Variable_declaration_comment
os.environ['SOURCE_DIR'] = '/nas_pp/test/dw/data/conv_253'
SOURCE_DIR = os.getenv('SOURCE_DIR')

os.environ['STG_DIR'] = '/nas_pp/test/dw/stg'
STG_DIR = os.getenv('STG_DIR')

os.environ['DS_DIR'] = '/nas_pp/test/dw/stg_ds'
DS_DIR = os.getenv('DS_DIR')

os.environ['REJECT_DIR'] = '/nas_pp/test/dw/rejects'
REJECT_DIR = os.getenv('REJECT_DIR')

os.environ['BANK_NUM'] = '100'
BANK_NUM = os.getenv('BANK_NUM')

os.environ['DATA_DATE'] = '20191006'
DATA_DATE = os.getenv('DATA_DATE')

os.environ['APPL_CD'] = 'BN'
APPL_CD = os.getenv('APPL_CD')

os.environ['DS_IPCPUT_OLD_TIMEOUT_BEHAVIOR'] = '1'
DS_IPCPUT_OLD_TIMEOUT_BEHAVIOR = os.getenv('DS_IPCPUT_OLD_TIMEOUT_BEHAVIOR')


# Processing node Credit_Fclty_ctam_in, type SOURCE
# COLUMN COUNT: 182
# Original node name CREDIT_FCLTY_CTAM_STG, link Credit_Fclty_ctam_in

Credit_Fclty_ctam_in = spark.read.csv(""+STG_DIR+"/bancs/credit_fclty_ctam_"+DATA_DATE+"_"+APPL_CD+".stg", sep=',', header='false')

# Processing node CRDT_DECISION_DESC, type SOURCE
# COLUMN COUNT: 3
# Original node name CREDT_LEAD_BUS_BANK_DECSN_CD_APPDETAILS, link CRDT_DECISION_DESC

CRDT_DECISION_DESC = spark.read.csv(""+DS_DIR+"/credt_lead/master_files/credt_lead_credit_fclty_bus_bankg_decsn_cd_desc_LD.ds", sep=',', header='false')

# Processing node ARSM_LEND, type SOURCE
# COLUMN COUNT: 13
# Original node name CREDIT_FCLTY_LEND_ARR_CD_DS, link ARSM_LEND

ARSM_LEND = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_arsm_lend_arr_cd_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node BANCS_INT_RATE, type SOURCE
# COLUMN COUNT: 5
# Original node name BANCS_INT_RATE_2, link BANCS_INT_RATE

BANCS_INT_RATE = spark.read.csv(""+DS_DIR+"/bancs/master_files/bancs_int_rate_"+APPL_CD+".ds", sep=',', header='false')

# Processing node FACM_PARENT, type SOURCE
# COLUMN COUNT: 12
# Original node name FCLTY_FACM_PARENT_SEQ, link FACM_PARENT

FACM_PARENT = spark.read.csv(""+STG_DIR+"/bancs/bancs_fclty_parent_legal_bind.stg", sep=',', header='false')

# Processing node ARSM_LEND_FLAG, type SOURCE
# COLUMN COUNT: 10
# Original node name CREDIT_FCLTY_LEND_ARR_FLAG_DS, link ARSM_LEND_FLAG

ARSM_LEND_FLAG = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_lend_arsm_shrd_cr_flag_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node evolve_laextract_ds_mjr_mod_dt_IN, type SOURCE
# COLUMN COUNT: 2
# Original node name EVOLV_LAEXTRACT_DS_input, link evolve_laextract_ds_mjr_mod_dt_IN

evolve_laextract_ds_mjr_mod_dt_IN = spark.read.csv(""+DS_DIR+"/bancs/master_files/evolv_laextract_"+APPL_CD+".ds", sep=',', header='false')

# Processing node BOIS_PARENT, type SOURCE
# COLUMN COUNT: 6
# Original node name CREDIT_FCLTY_BOIS_PARENT_DS, link BOIS_PARENT

BOIS_PARENT = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_BOIS_PARENT_"+APPL_CD+".ds", sep=',', header='false')

# Processing node acct, type SOURCE
# COLUMN COUNT: 3
# Original node name CREDIT_FCLTY_INTERMEDIATE_2_BANCS_DS_1, link acct

acct = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_intermediate_2_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node SALESFORCE_ID_IN, type SOURCE
# COLUMN COUNT: 2
# Original node name AGREE_APPL_NATL_KEY_DS, link SALESFORCE_ID_IN

SALESFORCE_ID_IN = spark.read.csv(""+DS_DIR+"/credt_lead/master_files/credt_lead_credit_fclty_salesforce_id_LD.ds", sep=',', header='false')

# Processing node ARSM_BANK_ROLE, type SOURCE
# COLUMN COUNT: 17
# Original node name CREDIT_FCLTY_ARSM_BANK_ROLE_DS, link ARSM_BANK_ROLE

ARSM_BANK_ROLE = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_arsm_bank_role_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node BOIS_MAST_LN_ACCT, type SOURCE
# COLUMN COUNT: 2
# Original node name BORM_LOAN_ACCT_DS, link BOIS_MAST_LN_ACCT

BOIS_MAST_LN_ACCT = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_borm_ln_acct_acctID_"+APPL_CD+".ds", sep=',', header='false')

# Processing node ARSM_ARRY_TYP, type SOURCE
# COLUMN COUNT: 12
# Original node name CREDIT_FCLTY_ARSM_ARRY_TYP, link ARSM_ARRY_TYP

ARSM_ARRY_TYP = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_arsm_array_typ_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node BOIS, type SOURCE
# COLUMN COUNT: 5
# Original node name BANCS_ACCT_FCLTY_REL_DS1, link BOIS

BOIS = spark.read.csv(""+DS_DIR+"/bancs/master_files/bancs_acct_fclty_rel_"+APPL_CD+".ds", sep=',', header='false')

# Processing node Fee_Wav, type SOURCE
# COLUMN COUNT: 8
# Original node name BANCS_FEE_WAV_DS, link Fee_Wav

Fee_Wav = spark.read.csv(""+DS_DIR+"/bancs/master_files/bancs_fee_wav_"+APPL_CD+".ds", sep=',', header='false')

# Processing node LNPURCHTYPDESC_IN, type SOURCE
# COLUMN COUNT: 3
# Original node name LNPURCHTYPDESC_DS_2, link LNPURCHTYPDESC_IN

LNPURCHTYPDESC_IN = spark.read.csv(""+DS_DIR+"/ecf/lnpurchtypdesc.ds", sep=',', header='false')

# Processing node FACM_LEGAL_BIND, type SOURCE
# COLUMN COUNT: 5
# Original node name FCLTY_FACM_LEGAL_BIND_HASH, link FACM_LEGAL_BIND

FACM_LEGAL_BIND = spark.read.csv(""+STG_DIR+"/bancs/bancs_fclty_parent_legal_bind_HASH_FILE.stg", sep=',', header='false')

# Processing node RENEWAL_PREV, type SOURCE
# COLUMN COUNT: 4
# Original node name RENEWAL_PREV_DS, link RENEWAL_PREV

RENEWAL_PREV = spark.read.csv(""+DS_DIR+"/bancs/bancs_renewal_month_ind_credit_fclty_prev_"+APPL_CD+".ds", sep=',', header='false')

# Processing node PORTFOLIO_CD_IN, type SOURCE
# COLUMN COUNT: 5
# Original node name CREDIT_LEAD_DS, link PORTFOLIO_CD_IN

PORTFOLIO_CD_IN = spark.read.csv(""+DS_DIR+"/credt_lead/master_files/credt_lead_credit_fclty_portfolio_mgmt_cd_DS_LD.ds", sep=',', header='false')

# Processing node CRA_LN_TYP_DESC, type SOURCE
# COLUMN COUNT: 2
# Original node name ECF_NEWCRALNTYP_DS, link CRA_LN_TYP_DESC

CRA_LN_TYP_DESC = spark.read.csv(""+DS_DIR+"/ecf/ecf_newcralntyp.ds", sep=',', header='false')

# Processing node ARSM_LEND_BANK_ROLE_OTHERS, type SOURCE
# COLUMN COUNT: 16
# Original node name CREDIT_FCLTY_LEND_BANK_ROLE_OTHERS_DS, link ARSM_LEND_BANK_ROLE_OTHERS

ARSM_LEND_BANK_ROLE_OTHERS = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_arsm_lend_bank_role_others_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node DSLink563, type SOURCE
# COLUMN COUNT: 14
# Original node name APPRO_CNSMR_PRODUCT, link DSLink563

DSLink563 = spark.read.csv(""+DS_DIR+"/appro_cnsmr/master_files/appro_cnsmr_products_AC.ds", sep=',', header='false')

# Processing node evolv_ext, type TRANSFORMATION
# COLUMN COUNT: 2
# Original node name xfer_evolv_extract, link evolv_ext

evolv_ext = evolve_laextract_ds_mjr_mod_dt_IN.select(
	evolve_laextract_ds_mjr_mod_dt_IN.CLIENTINSTRUMENTID.alias('CLIENTINSTRUMENTID'),
	(evolve_laextract_ds_mjr_mod_dt_IN.MAJORMODDATE .cast(date)).alias('MAJORMODDATE')
)

# Processing node ARSM_SHRD_CR_FLAG, type SOURCE
# COLUMN COUNT: 16
# Original node name CREDIT_FCLTY_ARSM_SHRD_CR_FLAG, link ARSM_SHRD_CR_FLAG

ARSM_SHRD_CR_FLAG = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_arsm_shrd_cr_flag_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node PRODUCT, type UNIQUE_ROW
# COLUMN COUNT: 14
# Original node name Remove_Duplicates_562, link PRODUCT

PRODUCT = DSLink563.dropDuplicates(['productid'])

# Processing node BANCS_BDGT_SUM_1, type SOURCE
# COLUMN COUNT: 6
# Original node name BANCS_BDGT_SUM_DS, link BANCS_BDGT_SUM_1

BANCS_BDGT_SUM_1 = spark.read.csv(""+DS_DIR+"/bancs/master_files/bancs_bdgt_sum_"+APPL_CD+".ds", sep=',', header='false')

# Processing node DSLink559, type SOURCE
# COLUMN COUNT: 17
# Original node name APPRO_CNSMR_TBLAPPDETSTIPS, link DSLink559

DSLink559 = spark.read.csv(""+DS_DIR+"/appro_cnsmr/master_files/appro_cnsmr_tblappdetstips_AC.ds", sep=',', header='false')

# Processing node LNPURCHTYPDESC_DS, type TRANSFORMATION
# COLUMN COUNT: 3
# Original node name Transformer_488, link LNPURCHTYPDESC_DS

LNPURCHTYPDESC_DS = LNPURCHTYPDESC_IN.select(
	(substring(trim(LNPURCHTYPDESC_IN.APPL_CD) , lit(1) , lit(3))).alias('APPL_CD'),
	(substring(trim(LNPURCHTYPDESC_IN.LN_PURCH_TYP_CD) , lit(1) , lit(1))).alias('LN_PURCH_TYP_CD'),
	(trim(LNPURCHTYPDESC_IN.LN_PURCH_TYP_DESC)).alias('LN_PURCH_TYP_DESC')
)

# Processing node BORM, type SOURCE
# COLUMN COUNT: 5
# Original node name BANCS_ACCT_FCLTY_REL_DS, link BORM

BORM = spark.read.csv(""+DS_DIR+"/bancs/master_files/bancs_acct_fclty_rel_"+APPL_CD+".ds", sep=',', header='false')

# Processing node GRAND, type SOURCE
# COLUMN COUNT: 5
# Original node name BANCS_FACM_GRAND_PARENT_DS, link GRAND

GRAND = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_facm_GRAND_PARENT_stg_"+APPL_CD+".ds", sep=',', header='false')

# Processing node ARSM_LEND_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT, type SOURCE
# COLUMN COUNT: 21
# Original node name CREDIT_FCLTY_LEND_BANK_ROLE_PART_PURCH_TOT_CMMT_AMTR, link ARSM_LEND_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT

ARSM_LEND_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_arsm_lend_bank_role_others_bancs_part_purch_tot_cmmt_amt_"+APPL_CD+".ds", sep=',', header='false')

# Processing node BRONZE_FROM_APPRO, type SOURCE
# COLUMN COUNT: 7
# Original node name APPRO_CNSMR_TBLAPPDETCLIENTDEFINEDVALUES_APPDTEAILS_DS, link BRONZE_FROM_APPRO

BRONZE_FROM_APPRO = spark.read.csv(""+DS_DIR+"/appro_cnsmr/master_files/jn_tblclientdefinedvalues_appdetails_AC.ds", sep=',', header='false')

# Processing node DS_IN, type SOURCE
# COLUMN COUNT: 183
# Original node name CREDIT_FCLTY_INTERMEDIATE_2_BANCS_DS, link DS_IN

DS_IN = spark.read.csv(""+DS_DIR+"/bancs/credit_fclty_intermediate_2_bancs_"+APPL_CD+".ds", sep=',', header='false')

# Processing node BORM_CONV4, type TRANSFORMATION
# COLUMN COUNT: 5
# Original node name XFM_LEGAL_BIND, link BORM_CONV4

BORM_CONV4 = FACM_LEGAL_BIND.select(
	FACM_LEGAL_BIND.ACCT_ID.alias('ACCT_ID_BORM_LEGAL'),
	FACM_LEGAL_BIND.facm_instn_nbr.alias('facm_instn_nbr_BORM_LEGAL'),
	FACM_LEGAL_BIND.facm_fclty_nbr.alias('facm_fclty_nbr_BORM_LEGAL'),
	FACM_LEGAL_BIND.LEGAL_BIND_DT.alias('LEGAL_BIND_DT_BORM'),
	FACM_LEGAL_BIND.facm_legal_bind.alias('facm_legal_bind')
)

# Processing node BOIS_CONV5, type TRANSFORMATION
# COLUMN COUNT: 5
# Original node name XFM_LEGAL_BIND, link BOIS_CONV5

BOIS_CONV5 = FACM_LEGAL_BIND.select(
	FACM_LEGAL_BIND.ACCT_ID.alias('ACCT_ID_BOIS_LEGAL'),
	FACM_LEGAL_BIND.facm_instn_nbr.alias('facm_instn_nbr_BOIS_LEGAL'),
	FACM_LEGAL_BIND.facm_fclty_nbr.alias('facm_fclty_nbr_BOIS_LEGAL'),
	FACM_LEGAL_BIND.LEGAL_BIND_DT.alias('LEGAL_BIND_DT_BOIS'),
	FACM_LEGAL_BIND.facm_legal_bind.alias('facm_legal_bind')
)

# Processing node DSLink545, type SOURCE
# COLUMN COUNT: 361
# Original node name APPRO_CNSMR_APPDETAILS, link DSLink545

DSLink545 = spark.read.csv(""+DS_DIR+"/appro_cnsmr/master_files/appro_cnsmr_appdetails_AC.ds", sep=',', header='false')

# Processing node LVL_Out, type SOURCE
# COLUMN COUNT: 4
# Original node name BANCS_ACCT_LVL_CMMT_INT_DS, link LVL_Out

LVL_Out = spark.read.csv(""+DS_DIR+"/bancs/master_files/bancs_acct_lvl_cmmt_int_"+APPL_CD+".ds", sep=',', header='false')

# Processing node CREDIT_DECSN_INFO, type SOURCE
# COLUMN COUNT: 3
# Original node name CREDT_LEAD_CREDIT_DECSN_INFO_APPDETAILS, link CREDIT_DECSN_INFO

CREDIT_DECSN_INFO = spark.read.csv(""+DS_DIR+"/credt_lead/master_files/credt_lead_credit_decsn_info_appdetails_LD.ds", sep=',', header='false')

# Processing node Credit_Fclty_facm_in, type SOURCE
# COLUMN COUNT: 182
# Original node name CREDIT_FCLTY_FACM_STG, link Credit_Fclty_facm_in

Credit_Fclty_facm_in = spark.read.csv(""+STG_DIR+"/bancs/credit_fclty_facm_"+DATA_DATE+"_"+APPL_CD+".stg", sep=',', header='false')

# Processing node LEND_ARRNG, type SOURCE
# COLUMN COUNT: 5
# Original node name ECF_LEND_ARRGMNTDESC_DS, link LEND_ARRNG

LEND_ARRNG = spark.read.csv(""+DS_DIR+"/ecf/lendarrgmntdesc.ds", sep=',', header='false')

# Processing node BORM_CONV2, type TRANSFORMATION
# COLUMN COUNT: 12
# Original node name XFM_PARENT, link BORM_CONV2

BORM_CONV2 = FACM_PARENT.select(
	FACM_PARENT.ACCT_ID.alias('ACCT_ID'),
	FACM_PARENT.facm_instn_nbr.alias('facm_instn_nbr_BORM'),
	FACM_PARENT.facm_fclty_nbr.alias('facm_fclty_nbr_BORM'),
	FACM_PARENT.AS_OF_DT.alias('AS_OF_DT'),
	FACM_PARENT.facm_legal_bind.alias('facm_legal_bind'),
	FACM_PARENT.facm_parent_facility_no.alias('facm_parent_facility_no_BORM'),
	FACM_PARENT.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	FACM_PARENT.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	FACM_PARENT.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	FACM_PARENT.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	FACM_PARENT.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC_facm'),
	FACM_PARENT.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank_facm')
)

# Processing node BOIS_CONV3, type TRANSFORMATION
# COLUMN COUNT: 12
# Original node name XFM_PARENT, link BOIS_CONV3

BOIS_CONV3 = FACM_PARENT.select(
	FACM_PARENT.ACCT_ID.alias('ACCT_ID'),
	FACM_PARENT.facm_instn_nbr.alias('facm_instn_nbr_BOIS'),
	FACM_PARENT.facm_fclty_nbr.alias('facm_fclty_nbr_BOIS'),
	FACM_PARENT.AS_OF_DT.alias('AS_OF_DT'),
	FACM_PARENT.facm_legal_bind.alias('facm_legal_bind'),
	FACM_PARENT.facm_parent_facility_no.alias('facm_parent_facility_no_BOIS'),
	FACM_PARENT.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	FACM_PARENT.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	FACM_PARENT.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	FACM_PARENT.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	FACM_PARENT.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC_facm_parent'),
	FACM_PARENT.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank_facm_parent')
)

# Processing node XFM_IN, type TRANSFORMATION
# COLUMN COUNT: 185
# Original node name Xfm_Conv, link XFM_IN

XFM_IN = DS_IN
XFM_IN = XFM_IN.withColumn("CoaleseBoisBorm", when((Len(trim(DS_IN.bois_mast_loan_acct)) > lit(0) ),(DS_IN.bois_mast_loan_acct )).otherwise(DS_IN.borm_ln_acct_nbr)).select(
	DS_IN.ACCT_ID.alias('ACCT_ID'),
	DS_IN.AS_OF_DT.alias('AS_OF_DT'),
	DS_IN.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	DS_IN.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	DS_IN.NATL_KEY.alias('NATL_KEY'),
	(when((regexp_replace((when(((DS_IN.FDIC_CD) IS NOT None , (DS_IN.FDIC_CD) ).otherwise((lit('')))) != lit('')), r'^[DS_IN.FDIC_CD]*', '')).otherwise((DS_IN.FDIC_CD_2 )).otherwise(lit('N')))).alias('FDIC_CD'),
	DS_IN.TDR_IND.alias('TDR_IND'),
	DS_IN.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	DS_IN.CUPA_ID.alias('CUPA_ID'),
	DS_IN.ACCT_ID_CUPA_CHECK.alias('ACCT_ID_CUPA_CHECK'),
	DS_IN.BKRPT_IND.alias('BKRPT_IND'),
	DS_IN.ORIG_LN_AMT_PREV.alias('ORIG_LN_AMT_PREV'),
	DS_IN.BKRPT_IND_PREV.alias('BKRPT_IND_PREV'),
	DS_IN.BKRPT_DT_PREV.alias('BKRPT_DT_PREV'),
	DS_IN.LIEN_PSTN.alias('LIEN_PSTN'),
	DS_IN.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	DS_IN.borm_instn_nbr.alias('borm_instn_nbr'),
	DS_IN.APPL_CD.alias('APPL_CD'),
	DS_IN.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	DS_IN.borm_apprv_date.alias('borm_apprv_date'),
	DS_IN.bois_mast_loan_acct.alias('bois_mast_loan_acct'),
	DS_IN.bois_child_loan_type.alias('bois_child_loan_type'),
	DS_IN.bois_ln_acct_nbr.alias('bois_ln_acct_nbr'),
	DS_IN.borm_cost_center_2_4.alias('borm_cost_center_2_4'),
	DS_IN.borm_adv_val.alias('borm_adv_val'),
	DS_IN.borm_int_repay_freq.alias('borm_int_repay_freq'),
	DS_IN.borm_repay_freq.alias('borm_repay_freq'),
	DS_IN.brlm_appro_id.alias('brlm_appro_id'),
	DS_IN.bois_non_accr_stat.alias('bois_non_accr_stat'),
	DS_IN.bois_non_accr_type.alias('bois_non_accr_type'),
	DS_IN.bois_last_npa_dt.alias('bois_last_npa_dt'),
	DS_IN.borm_app_amt.alias('borm_app_amt'),
	DS_IN.bois_promo_nbr.alias('bois_promo_nbr'),
	DS_IN.borm_prpse_cd_a.alias('borm_prpse_cd_a'),
	DS_IN.bois_tdr_stat.alias('bois_tdr_stat'),
	DS_IN.bois_tdr_eff_dt.alias('bois_tdr_eff_dt'),
	DS_IN.FA_LOB_ID.alias('FA_LOB_ID'),
	DS_IN.FA_LOB_EFF_DT.alias('FA_LOB_EFF_DT'),
	DS_IN.colm_coll_sub_typ.alias('colm_coll_sub_typ'),
	DS_IN.bkrm_stat_cd.alias('bkrm_stat_cd'),
	DS_IN.bois_fac_grade_id.alias('bois_fac_grade_id'),
	DS_IN.bois_loc_type.alias('bois_loc_type'),
	DS_IN.brlm_draw_pd_exp_date.alias('brlm_draw_pd_exp_date'),
	DS_IN.lien_lien_pos.alias('lien_lien_pos'),
	DS_IN.colm_stat_cd.alias('colm_stat_cd'),
	DS_IN.bkrm_bkrpt_ind.alias('bkrm_bkrpt_ind'),
	DS_IN.usbo_src_of_orig.alias('usbo_src_of_orig'),
	DS_IN.cpro_land_use.alias('cpro_land_use'),
	DS_IN.cpro_prim_dwell.alias('cpro_prim_dwell'),
	DS_IN.auth_sbl_ind.alias('auth_sbl_ind'),
	DS_IN.borm_spl_loan_cde.alias('borm_spl_loan_cde'),
	DS_IN.usbo_loan_orig_id.alias('usbo_loan_orig_id'),
	DS_IN.COLL_DESC_ECF.alias('COLL_DESC_ECF'),
	DS_IN.CREATE_ADDR_ECF.alias('CREATE_ADDR_ECF'),
	DS_IN.TBI_CATEGORY_ECF.alias('TBI_CATEGORY_ECF'),
	DS_IN.PPR_PROP_TYPE_ECF.alias('PPR_PROP_TYPE_ECF'),
	DS_IN.CRE_COLL_IND_ECF.alias('CRE_COLL_IND_ECF'),
	DS_IN.RE_COLL_IND_ECF.alias('RE_COLL_IND_ECF'),
	DS_IN.LONG_DESC_ECF.alias('LONG_DESC_ECF'),
	DS_IN.FRY14_PROP_SIZE_ECF.alias('FRY14_PROP_SIZE_ECF'),
	DS_IN.LIEN_POSITION_ECF.alias('LIEN_POSITION_ECF'),
	(when((trim((when(((DS_IN.FDIC_IND_ECF) IS NOT None , (DS_IN.FDIC_IND_ECF) )).otherwise(((lit('')))) != lit(''))))).otherwise((DS_IN.FDIC_IND_ECF )).otherwise(lit('N'))).alias('FDIC_IND_ECF'),
	DS_IN.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD_INT_ECF'),
	DS_IN.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC_INT_ECF'),
	DS_IN.PROD_CD_ECF.alias('PROD_CD_ECF'),
	DS_IN.PROD_DESC_ECF.alias('PROD_DESC_ECF'),
	DS_IN.PROD_GRP_CD_ECF.alias('PROD_GRP_CD_ECF'),
	DS_IN.PROD_LINE_CD_ECF.alias('PROD_LINE_CD_ECF'),
	DS_IN.PROD_LINE_DESC_ECF.alias('PROD_LINE_DESC_ECF'),
	DS_IN.BUS_OR_IND_CD_ECF.alias('BUS_OR_IND_CD_ECF'),
	DS_IN.RCC_LINE_NBR_ECF.alias('RCC_LINE_NBR_ECF'),
	DS_IN.OWNR_OCCPD_IND_ECF.alias('OWNR_OCCPD_IND_ECF'),
	DS_IN.MOODY_CD_ECF.alias('MOODY_CD_ECF'),
	DS_IN.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD_ECF'),
	DS_IN.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC_ECF'),
	DS_IN.FRY14_PRPSE_CD_ECF.alias('FRY14_PRPSE_CD_ECF'),
	DS_IN.FRY14_PRPSE_CD_DESC_ECF.alias('FRY14_PRPSE_CD_DESC_ECF'),
	DS_IN.COLL_CD_ECF.alias('COLL_CD_ECF'),
	DS_IN.COLL_DESC_COLL_ECF.alias('COLL_DESC_COLL_ECF'),
	DS_IN.SUPERVISORY_LTV_PCT_ECF.alias('SUPERVISORY_LTV_PCT_ECF'),
	DS_IN.SUPERVISORY_LTV_CAT_DESC_ECF.alias('SUPERVISORY_LTV_CAT_DESC_ECF'),
	DS_IN.CREATE_ADDR_COLL_ECF.alias('CREATE_ADDR_COLL_ECF'),
	DS_IN.TBI_CATEGORY_COLL_ECF.alias('TBI_CATEGORY_COLL_ECF'),
	DS_IN.PPR_PROP_TYPE_COLL_ECF.alias('PPR_PROP_TYPE_COLL_ECF'),
	DS_IN.CRE_COLL_IND_COLL_ECF.alias('CRE_COLL_IND_COLL_ECF'),
	DS_IN.RE_COLL_IND_COLL_ECF.alias('RE_COLL_IND_COLL_ECF'),
	DS_IN.LONG_DESC_COLL_ECF.alias('LONG_DESC_COLL_ECF'),
	DS_IN.INT_PMT_FREQ_CD_PRIN_ECF.alias('INT_PMT_FREQ_CD_PRIN_ECF'),
	DS_IN.INT_PMT_FREQ_DESC_PRIN_ECF.alias('INT_PMT_FREQ_DESC_PRIN_ECF'),
	DS_IN.BKRPT_STAT_CODE_ECF.alias('BKRPT_STAT_CODE_ECF'),
	DS_IN.BKRPT_STAT_CODE_DESC_ECF.alias('BKRPT_STAT_CODE_DESC_ECF'),
	DS_IN.BKRPT_TYP_CODE_ECF.alias('BKRPT_TYP_CODE_ECF'),
	DS_IN.BKRPT_TYP_CODE_DESC_ECF.alias('BKRPT_TYP_CODE_DESC_ECF'),
	DS_IN.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	DS_IN.REG_BANK_SHR_EXP_AMT.alias('REG_BANK_SHR_EXP_AMT'),
	DS_IN.CF_CUR_LN_AMT.alias('CF_CUR_LN_AMT'),
	DS_IN.LN_ORIG_SYS_CODE_ECF_OUT1.alias('LN_ORIG_SYS_CODE_ECF_OUT1'),
	DS_IN.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CODE_DESC_ECF_OUT2'),
	DS_IN.bois_first_repay_dt.alias('bois_first_repay_dt'),
	DS_IN.brlm_repay_meth.alias('brlm_repay_meth'),
	DS_IN.borm_int_chng_freq.alias('borm_int_chng_freq'),
	DS_IN.bois_fix_int_term.alias('bois_fix_int_term'),
	DS_IN.Integer_borm_int_chng_freq.alias('Integer_borm_int_chng_freq'),
	DS_IN.Integer_bois_fix_int_term.alias('Integer_bois_fix_int_term'),
	DS_IN.auth_frb_flb_plg_iel.alias('auth_frb_flb_plg_iel'),
	DS_IN.auth_frb_flhb_plg.alias('auth_frb_flhb_plg'),
	DS_IN.bois_cap_rate_value.alias('bois_cap_rate_value'),
	DS_IN.bois_col_rt_value.alias('bois_col_rt_value'),
	DS_IN.INT_RATE_TYP.alias('INT_RATE_TYP'),
	DS_IN.rtmx_reset_freq.alias('rtmx_reset_freq'),
	DS_IN.usbo_conus_cr_counsl.alias('usbo_conus_cr_counsl'),
	DS_IN.bois_mast_loan_acct_lkp.alias('bois_mast_loan_acct_lkp'),
	DS_IN.borm_stat_cd.alias('borm_stat_cd'),
	DS_IN.bois_periodic_cap.alias('bois_periodic_cap'),
	DS_IN.colm_coll_sub_typ_Coll_cd.alias('colm_coll_sub_typ_Coll_cd'),
	DS_IN.RESTORED_TO_ACCRUAL_DT.alias('RESTORED_TO_ACCRUAL_DT'),
	DS_IN.bois_pre_pen_basis.alias('bois_pre_pen_basis'),
	DS_IN.borm_applic_issue_date.alias('borm_applic_issue_date'),
	DS_IN.aral_instn_nbr.alias('aral_instn_nbr'),
	DS_IN.aral_arrange_nbr.alias('aral_arrange_nbr'),
	DS_IN.arsm_instn_nbr.alias('arsm_instn_nbr'),
	DS_IN.arsm_bank_role.alias('arsm_bank_role'),
	DS_IN.arsm_arr_type.alias('arsm_arr_type'),
	DS_IN.arsm_shared_cr_flag.alias('arsm_shared_cr_flag'),
	DS_IN.arsm_share_per.alias('arsm_share_per'),
	DS_IN.arsm_total_limit_amt.alias('arsm_total_limit_amt'),
	DS_IN.arml_cnt_party_nbr.alias('arml_cnt_party_nbr'),
	DS_IN.arml_mem_bank_role.alias('arml_mem_bank_role'),
	DS_IN.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC'),
	DS_IN.cusm_cur_name.alias('cusm_cur_name'),
	DS_IN.borm_pdcc_val.alias('borm_pdcc_val'),
	DS_IN.bois_ex_flag_2.alias('bois_ex_flag_2'),
	DS_IN.FORECLS_IND.alias('FORECLS_IND'),
	DS_IN.acfr_fclty_nbr_borm.alias('acfr_fclty_nbr_borm'),
	DS_IN.acfr_fclty_nbr_bois.alias('acfr_fclty_nbr_bois'),
	DS_IN.lend_arrangement_cd.alias('lend_arrangement_cd'),
	DS_IN.lend_arrangement_desc.alias('lend_arrangement_desc'),
	DS_IN.cgca_sub_pgm_no.alias('cgca_sub_pgm_no'),
	DS_IN.LN_PROG_CD.alias('LN_PROG_CD'),
	DS_IN.LN_PROG_DESC.alias('LN_PROG_DESC'),
	DS_IN.acfr_acct_nbr.alias('acfr_acct_nbr'),
	DS_IN.SUM_BORM_APP_AMT.alias('SUM_BORM_APP_AMT'),
	DS_IN.cgca_govnt_pgm_no.alias('cgca_govnt_pgm_no'),
	DS_IN.cgca_sch_ref_prefix.alias('cgca_sch_ref_prefix'),
	DS_IN.cgca_ln_acct_nbr.alias('cgca_ln_acct_nbr'),
	(substring(DS_IN.SRC_ACCT_NBR , lit(16))).alias('SRC_ACCT_NBR_JOIN_16'),
	DS_IN.bois_regw_reportable.alias('bois_regw_reportable'),
	DS_IN.arsm_arr_status.alias('arsm_arr_status'),
	DS_IN.TAX_EXEMPT_FLAG.alias('TAX_EXEMPT_FLAG'),
	DS_IN.uscu_affiliate_code.alias('uscu_affiliate_code'),
	DS_IN.int_rate_ze_variable_rate_cd.alias('int_rate_ze_variable_rate_cd'),
	DS_IN.int_rate_ze_col_rate.alias('int_rate_ze_col_rate'),
	DS_IN.int_rate_ze_cap_rate.alias('int_rate_ze_cap_rate'),
	DS_IN.int_rate_ze_reset_freq.alias('int_rate_ze_reset_freq'),
	DS_IN.arsm_am_agent_bnk.alias('arsm_am_agent_bnk'),
	DS_IN.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank'),
	DS_IN.usbo_loan_manag_group.alias('usbo_loan_manag_group'),
	DS_IN.borm_lonp_mul_bk_ledger_code_coalesce.alias('borm_lonp_mul_bk_ledger_code_coalesce'),
	DS_IN.borm_cas_stat_code.alias('borm_cas_stat_code'),
	DS_IN.borm_acct_typ.alias('borm_acct_typ'),
	DS_IN.borm_prod_cat.alias('borm_prod_cat'),
	DS_IN.bois_pre_pen_method.alias('bois_pre_pen_method'),
	(trim(CoaleseBoisBorm)).alias('coalese_bois_mast_loan_acct_ln_acct_nbr'),
	(trim(DS_IN.borm_ln_acct_nbr)).alias('borm_ln_acct_nbr_join_acfr'),
	DS_IN.ACCTGRPCD.alias('ACCTGRPCD'),
	DS_IN.bois_frb_plg_inel.alias('bois_frb_plg_inel'),
	DS_IN.bois_frb_fhlb_plg.alias('bois_frb_fhlb_plg'),
	DS_IN.bkrm_notification_dt.alias('bkrm_notification_dt'),
	DS_IN.bois_maturity_date.alias('bois_maturity_date'),
	DS_IN.usbo_collect_respons.alias('usbo_collect_respons'),
	DS_IN.usbo_purchased_code.alias('usbo_purchased_code'),
	DS_IN.usbo_purch_dt.alias('usbo_purch_dt'),
	DS_IN.bois_pred_loan_no.alias('bois_pred_loan_no'),
	DS_IN.borm_hfis_flag.alias('borm_hfis_flag'),
	DS_IN.brlm_bor_base_amt.alias('brlm_bor_base_amt'),
	DS_IN.brlm_effect_lim.alias('brlm_effect_lim'),
	DS_IN.bkrm_filed_dt.alias('bkrm_filed_dt'),
	DS_IN.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	DS_IN.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	DS_IN.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	DS_IN.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	DS_IN.arsm_bank_role_abn_parent.alias('arsm_bank_role_abn_parent'),
	DS_IN.arsm_arr_type_abn_parent.alias('arsm_arr_type_abn_parent'),
	DS_IN.arsm_arr_status_abn_parent.alias('arsm_arr_status_abn_parent'),
	DS_IN.arsm_am_agent_bnk_abn_parent.alias('arsm_am_agent_bnk_abn_parent')
)

# Processing node APPRO_ONE, type REPLICATE
# COLUMN COUNT: 7
# Original node name Copy_512, link APPRO_ONE

APPRO_ONE = BRONZE_FROM_APPRO.select(
	BRONZE_FROM_APPRO.ln_orig_nbr,
	BRONZE_FROM_APPRO.ln_orig_nbr2,
	BRONZE_FROM_APPRO.credit_decsn_override_auth_lvl_name,
	BRONZE_FROM_APPRO.CDFieldID,
	BRONZE_FROM_APPRO.Value,
	BRONZE_FROM_APPRO.empl_nbr,
	BRONZE_FROM_APPRO.misc10c1
)

# Processing node APPRO_TWO, type REPLICATE
# COLUMN COUNT: 7
# Original node name Copy_512, link APPRO_TWO

APPRO_TWO = BRONZE_FROM_APPRO.select(
	BRONZE_FROM_APPRO.ln_orig_nbr,
	BRONZE_FROM_APPRO.ln_orig_nbr2,
	BRONZE_FROM_APPRO.credit_decsn_override_auth_lvl_name,
	BRONZE_FROM_APPRO.CDFieldID,
	BRONZE_FROM_APPRO.Value,
	BRONZE_FROM_APPRO.empl_nbr,
	BRONZE_FROM_APPRO.misc10c1
)

# Processing node BORM_CONV6, type TRANSFORMATION
# COLUMN COUNT: 5
# Original node name XFM_GRAND, link BORM_CONV6

BORM_CONV6 = GRAND.select(
	GRAND.ACCT_ID.alias('ACCT_ID'),
	GRAND.facm_instn_nbr.alias('facm_instn_nbr'),
	GRAND.facm_fclty_nbr.alias('facm_fclty_nbr'),
	GRAND.AS_OF_DT.alias('AS_OF_DT'),
	GRAND.facm_legal_bind.alias('facm_legal_bind')
)

# Processing node BOIS_CONV7, type TRANSFORMATION
# COLUMN COUNT: 5
# Original node name XFM_GRAND, link BOIS_CONV7

BOIS_CONV7 = GRAND.select(
	GRAND.ACCT_ID.alias('ACCT_ID'),
	GRAND.facm_instn_nbr.alias('facm_instn_nbr'),
	GRAND.facm_fclty_nbr.alias('facm_fclty_nbr'),
	GRAND.AS_OF_DT.alias('AS_OF_DT'),
	GRAND.facm_legal_bind.alias('facm_legal_bind')
)

# Processing node PORTFOLIO_CD, type UNIQUE_ROW
# COLUMN COUNT: 5
# Original node name Rdp_usbo_loan_orig_id, link PORTFOLIO_CD

PORTFOLIO_CD = PORTFOLIO_CD_IN.dropDuplicates(['usbo_loan_orig_id'])

# Processing node LKP_OUT_1, type MERGE
# COLUMN COUNT: 215
# Original node name Lkp, link LKP_OUT_1

LKP_OUT_1 = XFM_IN.join(LVL_Out, [LVL_Out.acom_loc_acct_nbr == XFM_IN.SRC_ACCT_NBR_JOIN_16], 'LEFT_OUTER').join(Fee_Wav, [Fee_Wav.csec_acct_nbr == XFM_IN.SRC_ACCT_NBR_JOIN_16], 'LEFT_OUTER').join(ARSM_BANK_ROLE, [ARSM_BANK_ROLE.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_BANK_ROLE.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').join(ARSM_SHRD_CR_FLAG, [ARSM_SHRD_CR_FLAG.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_SHRD_CR_FLAG.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').join(ARSM_ARRY_TYP, [ARSM_ARRY_TYP.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_ARRY_TYP.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').join(ARSM_lengthD, [ARSM_lengthD.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_lengthD.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').join(ARSM_lengthD_FLAG, [ARSM_lengthD_FLAG.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_lengthD_FLAG.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').join(ARSM_lengthD_BANK_ROLE_OTHERS, [ARSM_lengthD_BANK_ROLE_OTHERS.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_lengthD_BANK_ROLE_OTHERS.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').join(BORM, [BORM.acfr_acct_nbr == XFM_IN.borm_ln_acct_nbr_join_acfr], 'LEFT_OUTER').join(BOIS, [BOIS.acfr_acct_nbr == XFM_IN.coalese_bois_mast_loan_acct_ln_acct_nbr], 'LEFT_OUTER').join(ARSM_lengthD_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT, [ARSM_lengthD_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT.AS_OF_DT == XFM_IN.AS_OF_DT, ARSM_lengthD_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT.ACCT_ID == XFM_IN.ACCT_ID], 'LEFT_OUTER').select(
	XFM_IN.ACCT_ID.alias('ACCT_ID'),
	XFM_IN.AS_OF_DT.alias('AS_OF_DT'),
	XFM_IN.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	XFM_IN.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	XFM_IN.NATL_KEY.alias('NATL_KEY'),
	XFM_IN.FDIC_CD.alias('FDIC_CD'),
	XFM_IN.TDR_IND.alias('TDR_IND'),
	XFM_IN.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	XFM_IN.CUPA_ID.alias('CUPA_ID'),
	XFM_IN.ACCT_ID_CUPA_CHECK.alias('ACCT_ID_CUPA_CHECK'),
	XFM_IN.BKRPT_IND.alias('BKRPT_IND'),
	XFM_IN.ORIG_LN_AMT_PREV.alias('ORIG_LN_AMT_PREV'),
	XFM_IN.BKRPT_IND_PREV.alias('BKRPT_IND_PREV'),
	XFM_IN.BKRPT_DT_PREV.alias('BKRPT_DT_PREV'),
	XFM_IN.LIEN_PSTN.alias('LIEN_PSTN'),
	XFM_IN.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	XFM_IN.borm_instn_nbr.alias('borm_instn_nbr'),
	XFM_IN.APPL_CD.alias('APPL_CD'),
	XFM_IN.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	XFM_IN.borm_apprv_date.alias('borm_apprv_date'),
	XFM_IN.bois_mast_loan_acct.alias('bois_mast_loan_acct'),
	XFM_IN.bois_child_loan_type.alias('bois_child_loan_type'),
	XFM_IN.bois_ln_acct_nbr.alias('bois_ln_acct_nbr'),
	XFM_IN.borm_cost_center_2_4.alias('borm_cost_center_2_4'),
	XFM_IN.borm_adv_val.alias('borm_adv_val'),
	XFM_IN.borm_int_repay_freq.alias('borm_int_repay_freq'),
	XFM_IN.borm_repay_freq.alias('borm_repay_freq'),
	XFM_IN.brlm_appro_id.alias('brlm_appro_id'),
	XFM_IN.bois_non_accr_stat.alias('bois_non_accr_stat'),
	XFM_IN.bois_non_accr_type.alias('bois_non_accr_type'),
	XFM_IN.bois_last_npa_dt.alias('bois_last_npa_dt'),
	XFM_IN.borm_app_amt.alias('borm_app_amt'),
	XFM_IN.bois_promo_nbr.alias('bois_promo_nbr'),
	XFM_IN.borm_prpse_cd_a.alias('borm_prpse_cd_a'),
	XFM_IN.bois_tdr_stat.alias('bois_tdr_stat'),
	XFM_IN.bois_tdr_eff_dt.alias('bois_tdr_eff_dt'),
	XFM_IN.FA_LOB_ID.alias('FA_LOB_ID'),
	XFM_IN.FA_LOB_EFF_DT.alias('FA_LOB_EFF_DT'),
	XFM_IN.colm_coll_sub_typ.alias('colm_coll_sub_typ'),
	XFM_IN.bkrm_stat_cd.alias('bkrm_stat_cd'),
	XFM_IN.bois_fac_grade_id.alias('bois_fac_grade_id'),
	XFM_IN.bois_loc_type.alias('bois_loc_type'),
	XFM_IN.brlm_draw_pd_exp_date.alias('brlm_draw_pd_exp_date'),
	XFM_IN.lien_lien_pos.alias('lien_lien_pos'),
	XFM_IN.colm_stat_cd.alias('colm_stat_cd'),
	XFM_IN.bkrm_bkrpt_ind.alias('bkrm_bkrpt_ind'),
	XFM_IN.usbo_src_of_orig.alias('usbo_src_of_orig'),
	XFM_IN.cpro_land_use.alias('cpro_land_use'),
	XFM_IN.cpro_prim_dwell.alias('cpro_prim_dwell'),
	XFM_IN.auth_sbl_ind.alias('auth_sbl_ind'),
	XFM_IN.borm_spl_loan_cde.alias('borm_spl_loan_cde'),
	XFM_IN.usbo_loan_orig_id.alias('usbo_loan_orig_id'),
	XFM_IN.COLL_DESC_ECF.alias('COLL_DESC_ECF'),
	XFM_IN.CREATE_ADDR_ECF.alias('CREATE_ADDR_ECF'),
	XFM_IN.TBI_CATEGORY_ECF.alias('TBI_CATEGORY_ECF'),
	XFM_IN.PPR_PROP_TYPE_ECF.alias('PPR_PROP_TYPE_ECF'),
	XFM_IN.CRE_COLL_IND_ECF.alias('CRE_COLL_IND_ECF'),
	XFM_IN.RE_COLL_IND_ECF.alias('RE_COLL_IND_ECF'),
	XFM_IN.LONG_DESC_ECF.alias('LONG_DESC_ECF'),
	XFM_IN.FRY14_PROP_SIZE_ECF.alias('FRY14_PROP_SIZE_ECF'),
	XFM_IN.LIEN_POSITION_ECF.alias('LIEN_POSITION_ECF'),
	XFM_IN.FDIC_IND_ECF.alias('FDIC_IND_ECF'),
	XFM_IN.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD_INT_ECF'),
	XFM_IN.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC_INT_ECF'),
	XFM_IN.PROD_CD_ECF.alias('PROD_CD_ECF'),
	XFM_IN.PROD_DESC_ECF.alias('PROD_DESC_ECF'),
	XFM_IN.PROD_GRP_CD_ECF.alias('PROD_GRP_CD_ECF'),
	XFM_IN.PROD_LINE_CD_ECF.alias('PROD_LINE_CD_ECF'),
	XFM_IN.PROD_LINE_DESC_ECF.alias('PROD_LINE_DESC_ECF'),
	XFM_IN.BUS_OR_IND_CD_ECF.alias('BUS_OR_IND_CD_ECF'),
	XFM_IN.RCC_LINE_NBR_ECF.alias('RCC_LINE_NBR_ECF'),
	XFM_IN.OWNR_OCCPD_IND_ECF.alias('OWNR_OCCPD_IND_ECF'),
	XFM_IN.MOODY_CD_ECF.alias('MOODY_CD_ECF'),
	XFM_IN.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD_ECF'),
	XFM_IN.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC_ECF'),
	XFM_IN.FRY14_PRPSE_CD_ECF.alias('FRY14_PRPSE_CD_ECF'),
	XFM_IN.FRY14_PRPSE_CD_DESC_ECF.alias('FRY14_PRPSE_CD_DESC_ECF'),
	XFM_IN.COLL_CD_ECF.alias('COLL_CD_ECF'),
	XFM_IN.COLL_DESC_COLL_ECF.alias('COLL_DESC_COLL_ECF'),
	XFM_IN.SUPERVISORY_LTV_PCT_ECF.alias('SUPERVISORY_LTV_PCT_ECF'),
	XFM_IN.SUPERVISORY_LTV_CAT_DESC_ECF.alias('SUPERVISORY_LTV_CAT_DESC_ECF'),
	XFM_IN.CREATE_ADDR_COLL_ECF.alias('CREATE_ADDR_COLL_ECF'),
	XFM_IN.TBI_CATEGORY_COLL_ECF.alias('TBI_CATEGORY_COLL_ECF'),
	XFM_IN.PPR_PROP_TYPE_COLL_ECF.alias('PPR_PROP_TYPE_COLL_ECF'),
	XFM_IN.CRE_COLL_IND_COLL_ECF.alias('CRE_COLL_IND_COLL_ECF'),
	XFM_IN.RE_COLL_IND_COLL_ECF.alias('RE_COLL_IND_COLL_ECF'),
	XFM_IN.LONG_DESC_COLL_ECF.alias('LONG_DESC_COLL_ECF'),
	XFM_IN.INT_PMT_FREQ_CD_PRIN_ECF.alias('INT_PMT_FREQ_CD_PRIN_ECF'),
	XFM_IN.INT_PMT_FREQ_DESC_PRIN_ECF.alias('INT_PMT_FREQ_DESC_PRIN_ECF'),
	XFM_IN.BKRPT_STAT_CODE_ECF.alias('BKRPT_STAT_CODE_ECF'),
	XFM_IN.BKRPT_STAT_CODE_DESC_ECF.alias('BKRPT_STAT_CODE_DESC_ECF'),
	XFM_IN.BKRPT_TYP_CODE_ECF.alias('BKRPT_TYP_CODE_ECF'),
	XFM_IN.BKRPT_TYP_CODE_DESC_ECF.alias('BKRPT_TYP_CODE_DESC_ECF'),
	XFM_IN.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	XFM_IN.REG_BANK_SHR_EXP_AMT.alias('REG_BANK_SHR_EXP_AMT'),
	XFM_IN.CF_CUR_LN_AMT.alias('CF_CUR_LN_AMT'),
	XFM_IN.LN_ORIG_SYS_CODE_ECF_OUT1.alias('LN_ORIG_SYS_CODE_ECF_OUT1'),
	XFM_IN.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CODE_DESC_ECF_OUT2'),
	XFM_IN.bois_first_repay_dt.alias('bois_first_repay_dt'),
	XFM_IN.brlm_repay_meth.alias('brlm_repay_meth'),
	XFM_IN.borm_int_chng_freq.alias('borm_int_chng_freq'),
	XFM_IN.bois_fix_int_term.alias('bois_fix_int_term'),
	XFM_IN.Integer_borm_int_chng_freq.alias('Integer_borm_int_chng_freq'),
	XFM_IN.Integer_bois_fix_int_term.alias('Integer_bois_fix_int_term'),
	XFM_IN.auth_frb_flb_plg_iel.alias('auth_frb_flb_plg_iel'),
	XFM_IN.auth_frb_flhb_plg.alias('auth_frb_flhb_plg'),
	XFM_IN.bois_cap_rate_value.alias('bois_cap_rate_value'),
	XFM_IN.bois_col_rt_value.alias('bois_col_rt_value'),
	XFM_IN.INT_RATE_TYP.alias('INT_RATE_TYP'),
	XFM_IN.rtmx_reset_freq.alias('rtmx_reset_freq'),
	XFM_IN.usbo_conus_cr_counsl.alias('usbo_conus_cr_counsl'),
	XFM_IN.bois_mast_loan_acct_lkp.alias('bois_mast_loan_acct_lkp'),
	XFM_IN.borm_stat_cd.alias('borm_stat_cd'),
	XFM_IN.bois_periodic_cap.alias('bois_periodic_cap'),
	XFM_IN.colm_coll_sub_typ_Coll_cd.alias('colm_coll_sub_typ_Coll_cd'),
	XFM_IN.RESTORED_TO_ACCRUAL_DT.alias('RESTORED_TO_ACCRUAL_DT'),
	XFM_IN.bois_pre_pen_basis.alias('bois_pre_pen_basis'),
	XFM_IN.borm_applic_issue_date.alias('borm_applic_issue_date'),
	XFM_IN.aral_instn_nbr.alias('aral_instn_nbr'),
	XFM_IN.aral_arrange_nbr.alias('aral_arrange_nbr'),
	XFM_IN.arsm_instn_nbr.alias('arsm_instn_nbr'),
	XFM_IN.arsm_bank_role.alias('arsm_bank_role'),
	XFM_IN.arsm_arr_type.alias('arsm_arr_type'),
	XFM_IN.arsm_shared_cr_flag.alias('arsm_shared_cr_flag'),
	XFM_IN.arsm_share_per.alias('arsm_share_per'),
	XFM_IN.arsm_total_limit_amt.alias('arsm_total_limit_amt'),
	XFM_IN.arml_cnt_party_nbr.alias('arml_cnt_party_nbr'),
	XFM_IN.arml_mem_bank_role.alias('arml_mem_bank_role'),
	XFM_IN.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC'),
	XFM_IN.cusm_cur_name.alias('cusm_cur_name'),
	XFM_IN.borm_pdcc_val.alias('borm_pdcc_val'),
	XFM_IN.bois_ex_flag_2.alias('bois_ex_flag_2'),
	XFM_IN.FORECLS_IND.alias('FORECLS_IND'),
	XFM_IN.acfr_fclty_nbr_borm.alias('acfr_fclty_nbr_borm'),
	XFM_IN.acfr_fclty_nbr_bois.alias('acfr_fclty_nbr_bois'),
	XFM_IN.lend_arrangement_cd.alias('lend_arrangement_cd'),
	XFM_IN.lend_arrangement_desc.alias('lend_arrangement_desc'),
	XFM_IN.cgca_sub_pgm_no.alias('cgca_sub_pgm_no'),
	XFM_IN.LN_PROG_CD.alias('LN_PROG_CD'),
	XFM_IN.LN_PROG_DESC.alias('LN_PROG_DESC'),
	XFM_IN.acfr_acct_nbr.alias('acfr_acct_nbr'),
	XFM_IN.SUM_BORM_APP_AMT.alias('SUM_BORM_APP_AMT'),
	XFM_IN.cgca_govnt_pgm_no.alias('cgca_govnt_pgm_no'),
	XFM_IN.cgca_sch_ref_prefix.alias('cgca_sch_ref_prefix'),
	XFM_IN.cgca_ln_acct_nbr.alias('cgca_ln_acct_nbr'),
	LVL_Out.acom_abs_unused_rate.alias('acom_abs_unused_rate'),
	Fee_Wav.csec_fee_nbr.alias('csec_fee_nbr'),
	Fee_Wav.csec_prd_fee_fst_chr_dt.alias('csec_prd_fee_fst_chr_dt'),
	XFM_IN.bois_regw_reportable.alias('bois_regw_reportable'),
	XFM_IN.arsm_arr_status.alias('arsm_arr_status'),
	XFM_IN.TAX_EXEMPT_FLAG.alias('TAX_EXEMPT_FLAG'),
	XFM_IN.uscu_affiliate_code.alias('uscu_affiliate_code'),
	XFM_IN.int_rate_ze_variable_rate_cd.alias('int_rate_ze_variable_rate_cd'),
	XFM_IN.int_rate_ze_col_rate.alias('int_rate_ze_col_rate'),
	XFM_IN.int_rate_ze_cap_rate.alias('int_rate_ze_cap_rate'),
	XFM_IN.int_rate_ze_reset_freq.alias('int_rate_ze_reset_freq'),
	XFM_IN.arsm_am_agent_bnk.alias('arsm_am_agent_bnk'),
	XFM_IN.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank'),
	ARSM_BANK_ROLE.arsm_bank_role.alias('arsm_bank_role_multiple_arr'),
	ARSM_BANK_ROLE.arsm_share_per.alias('arsm_share_per_bank_role_multiple_arr'),
	ARSM_BANK_ROLE.arsm_arr_type.alias('arsm_bank_role_arry_typ_multiple_arr'),
	ARSM_BANK_ROLE.arsm_shared_cr_flag.alias('arsm_bank_role_shared_cr_flag_multiple_arr'),
	ARSM_SHRD_CR_FLAG.arsm_shared_cr_flag.alias('arsm_shared_cr_flag_multiple_arr'),
	ARSM_ARRY_TYP.arsm_arr_type.alias('arsm_arr_type_multiple_arr'),
	ARSM_ARRY_TYP.arsm_bank_role.alias('arsm_arr_typ_bank_role_multiple_arr'),
	ARSM_ARRY_TYP.arsm_shared_cr_flag.alias('arsm_arr_typ_shared_cr_flag_multiple_arr'),
	ARSM_lengthD_FLAG.arsm_shared_cr_flag.alias('arsm_shared_cr_flag_multiple_arr_lend'),
	ARSM_lengthD.arsm_bank_role.alias('arsm_bank_role_multiple_arr_lend'),
	ARSM_lengthD.arsm_arr_type.alias('arsm_arr_type_multiple_arr_lend'),
	ARSM_lengthD.arsm_shared_cr_flag.alias('arsm_shared_cr_flag_multiple_arr_lend_final'),
	XFM_IN.usbo_loan_manag_group.alias('usbo_loan_manag_group'),
	XFM_IN.borm_lonp_mul_bk_ledger_code_coalesce.alias('borm_lonp_mul_bk_ledger_code_coalesce'),
	XFM_IN.borm_cas_stat_code.alias('borm_cas_stat_code'),
	XFM_IN.borm_acct_typ.alias('borm_acct_typ'),
	XFM_IN.borm_prod_cat.alias('borm_prod_cat'),
	ARSM_BANK_ROLE.aral_arr_prod_code.alias('aral_arr_prod_code_bank_role_multiple_arr'),
	ARSM_lengthD.aral_arr_prod_code.alias('aral_arr_prod_code_bank_role_lend'),
	ARSM_lengthD_BANK_ROLE_OTHERS.arsm_bank_role.alias('arsm_bank_role_multiple_arr_others'),
	ARSM_lengthD_BANK_ROLE_OTHERS.arsm_share_per.alias('arsm_share_per_multiple_arr_others'),
	ARSM_lengthD_BANK_ROLE_OTHERS.arsm_total_limit_amt.alias('arsm_total_limit_amt_multiple_arr_others'),
	XFM_IN.bois_pre_pen_method.alias('bois_pre_pen_method'),
	ARSM_lengthD_BANK_ROLE_OTHERS.arml_mem_bank_role.alias('arml_mem_bank_role_multiple_arr_others'),
	ARSM_lengthD_BANK_ROLE_OTHERS.cusm_cur_name.alias('cusm_cur_name_multiple_arr_others'),
	ARSM_lengthD_BANK_ROLE_OTHERS.arml_cnt_party_nbr.alias('arml_cnt_party_nbr_multiple_arr_others'),
	BORM.acfr_instn_nbr.alias('acfr_instn_nbr_BORM'),
	BORM.acfr_acct_nbr.alias('acfr_acct_nbr_BORM'),
	BOIS.acfr_instn_nbr.alias('acfr_instn_nbr_BOIS'),
	BOIS.acfr_acct_nbr.alias('acfr_acct_nbr_BOIS'),
	BORM.acfr_fclty_nbr.alias('acfr_fclty_nbr_join_borm'),
	BOIS.acfr_fclty_nbr.alias('acfr_fclty_nbr_join_bois'),
	XFM_IN.coalese_bois_mast_loan_acct_ln_acct_nbr.alias('coalese_bois_mast_loan_acct_ln_acct_nbr'),
	XFM_IN.ACCTGRPCD.alias('ACCTGRPCD'),
	XFM_IN.bois_frb_plg_inel.alias('bois_frb_plg_inel'),
	XFM_IN.bois_frb_fhlb_plg.alias('bois_frb_fhlb_plg'),
	XFM_IN.bkrm_notification_dt.alias('bkrm_notification_dt'),
	XFM_IN.bois_maturity_date.alias('bois_maturity_date'),
	XFM_IN.usbo_collect_respons.alias('usbo_collect_respons'),
	XFM_IN.usbo_purchased_code.alias('usbo_purchased_code'),
	XFM_IN.usbo_purch_dt.alias('usbo_purch_dt'),
	XFM_IN.bois_pred_loan_no.alias('bois_pred_loan_no'),
	ARSM_lengthD_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT.arsm_bank_role.alias('arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt'),
	ARSM_lengthD_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT.arsm_share_per.alias('arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt'),
	ARSM_lengthD_BANK_ROLE_OTHERS_PART_PURCH_TOT_CMMT_AMT.arsm_total_limit_amt.alias('arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt'),
	XFM_IN.borm_hfis_flag.alias('borm_hfis_flag'),
	XFM_IN.brlm_bor_base_amt.alias('brlm_bor_base_amt'),
	XFM_IN.brlm_effect_lim.alias('brlm_effect_lim'),
	XFM_IN.bkrm_filed_dt.alias('bkrm_filed_dt'),
	XFM_IN.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	XFM_IN.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	XFM_IN.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	XFM_IN.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	XFM_IN.arsm_bank_role_abn_parent.alias('arsm_bank_role_abn_parent'),
	XFM_IN.arsm_arr_type_abn_parent.alias('arsm_arr_type_abn_parent'),
	XFM_IN.arsm_arr_status_abn_parent.alias('arsm_arr_status_abn_parent'),
	XFM_IN.arsm_am_agent_bnk_abn_parent.alias('arsm_am_agent_bnk_abn_parent')
)

# Processing node APPDETSTIPS, type UNIQUE_ROW
# COLUMN COUNT: 17
# Original node name Remove_Duplicates_558, link APPDETSTIPS

APPDETSTIPS = DSLink559.dropDuplicates(['appid', 'appdetailid'])

# Processing node BANCS_BDGT_SUM, type UNIQUE_ROW
# COLUMN COUNT: 6
# Original node name Rdp, link BANCS_BDGT_SUM

BANCS_BDGT_SUM = BANCS_BDGT_SUM_1.dropDuplicates(['bgsm_instn_nbr', 'bgsm_ln_acct_nbr'])

# Processing node DSLink529, type TRANSFORMATION
# COLUMN COUNT: 4
# Original node name Transformer_527, link DSLink529

DSLink529 = DSLink545.select(
	DSLink545.appid.alias('appid'),
	DSLink545.appdetailid.alias('appdetailid'),
	DSLink545.productid.alias('productid'),
	(DSLink545.appid + lit(' ') + DSLink545.appdetailid).alias('app_sys_acct_nbr')
)

# Processing node LKP_OUT1, type MERGE
# COLUMN COUNT: 237
# Original node name LKP_FACM, link LKP_OUT1

LKP_OUT1 = LKP_OUT_1.join(BOIS_CONV3, [BOIS_CONV3.facm_instn_nbr_BOIS == LKP_OUT_1.acfr_instn_nbr_BOIS, BOIS_CONV3.facm_fclty_nbr_BOIS == LKP_OUT_1.acfr_fclty_nbr_join_bois], 'LEFT_OUTER').join(BORM_CONV2, [BORM_CONV2.facm_instn_nbr_BORM == LKP_OUT_1.acfr_instn_nbr_BORM, BORM_CONV2.facm_fclty_nbr_BORM == LKP_OUT_1.acfr_fclty_nbr_join_borm], 'LEFT_OUTER').select(
	LKP_OUT_1.ACCT_ID.alias('ACCT_ID'),
	LKP_OUT_1.AS_OF_DT.alias('AS_OF_DT'),
	LKP_OUT_1.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	LKP_OUT_1.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	LKP_OUT_1.NATL_KEY.alias('NATL_KEY'),
	LKP_OUT_1.FDIC_CD.alias('FDIC_CD'),
	LKP_OUT_1.TDR_IND.alias('TDR_IND'),
	LKP_OUT_1.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	LKP_OUT_1.CUPA_ID.alias('CUPA_ID'),
	LKP_OUT_1.ACCT_ID_CUPA_CHECK.alias('ACCT_ID_CUPA_CHECK'),
	LKP_OUT_1.BKRPT_IND.alias('BKRPT_IND'),
	LKP_OUT_1.ORIG_LN_AMT_PREV.alias('ORIG_LN_AMT_PREV'),
	LKP_OUT_1.BKRPT_IND_PREV.alias('BKRPT_IND_PREV'),
	LKP_OUT_1.BKRPT_DT_PREV.alias('BKRPT_DT_PREV'),
	LKP_OUT_1.LIEN_PSTN.alias('LIEN_PSTN'),
	LKP_OUT_1.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	LKP_OUT_1.borm_instn_nbr.alias('borm_instn_nbr'),
	LKP_OUT_1.APPL_CD.alias('APPL_CD'),
	LKP_OUT_1.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	LKP_OUT_1.borm_apprv_date.alias('borm_apprv_date'),
	LKP_OUT_1.bois_mast_loan_acct.alias('bois_mast_loan_acct'),
	LKP_OUT_1.bois_child_loan_type.alias('bois_child_loan_type'),
	LKP_OUT_1.bois_ln_acct_nbr.alias('bois_ln_acct_nbr'),
	LKP_OUT_1.borm_cost_center_2_4.alias('borm_cost_center_2_4'),
	LKP_OUT_1.borm_adv_val.alias('borm_adv_val'),
	LKP_OUT_1.borm_int_repay_freq.alias('borm_int_repay_freq'),
	LKP_OUT_1.borm_repay_freq.alias('borm_repay_freq'),
	LKP_OUT_1.brlm_appro_id.alias('brlm_appro_id'),
	LKP_OUT_1.bois_non_accr_stat.alias('bois_non_accr_stat'),
	LKP_OUT_1.bois_non_accr_type.alias('bois_non_accr_type'),
	LKP_OUT_1.bois_last_npa_dt.alias('bois_last_npa_dt'),
	LKP_OUT_1.borm_app_amt.alias('borm_app_amt'),
	LKP_OUT_1.bois_promo_nbr.alias('bois_promo_nbr'),
	LKP_OUT_1.borm_prpse_cd_a.alias('borm_prpse_cd_a'),
	LKP_OUT_1.bois_tdr_stat.alias('bois_tdr_stat'),
	LKP_OUT_1.bois_tdr_eff_dt.alias('bois_tdr_eff_dt'),
	LKP_OUT_1.FA_LOB_ID.alias('FA_LOB_ID'),
	LKP_OUT_1.FA_LOB_EFF_DT.alias('FA_LOB_EFF_DT'),
	LKP_OUT_1.colm_coll_sub_typ.alias('colm_coll_sub_typ'),
	LKP_OUT_1.bkrm_stat_cd.alias('bkrm_stat_cd'),
	LKP_OUT_1.bois_fac_grade_id.alias('bois_fac_grade_id'),
	LKP_OUT_1.bois_loc_type.alias('bois_loc_type'),
	LKP_OUT_1.brlm_draw_pd_exp_date.alias('brlm_draw_pd_exp_date'),
	LKP_OUT_1.lien_lien_pos.alias('lien_lien_pos'),
	LKP_OUT_1.colm_stat_cd.alias('colm_stat_cd'),
	LKP_OUT_1.bkrm_bkrpt_ind.alias('bkrm_bkrpt_ind'),
	LKP_OUT_1.usbo_src_of_orig.alias('usbo_src_of_orig'),
	LKP_OUT_1.cpro_land_use.alias('cpro_land_use'),
	LKP_OUT_1.cpro_prim_dwell.alias('cpro_prim_dwell'),
	LKP_OUT_1.auth_sbl_ind.alias('auth_sbl_ind'),
	LKP_OUT_1.borm_spl_loan_cde.alias('borm_spl_loan_cde'),
	LKP_OUT_1.usbo_loan_orig_id.alias('usbo_loan_orig_id'),
	LKP_OUT_1.COLL_DESC_ECF.alias('COLL_DESC_ECF'),
	LKP_OUT_1.CREATE_ADDR_ECF.alias('CREATE_ADDR_ECF'),
	LKP_OUT_1.TBI_CATEGORY_ECF.alias('TBI_CATEGORY_ECF'),
	LKP_OUT_1.PPR_PROP_TYPE_ECF.alias('PPR_PROP_TYPE_ECF'),
	LKP_OUT_1.CRE_COLL_IND_ECF.alias('CRE_COLL_IND_ECF'),
	LKP_OUT_1.RE_COLL_IND_ECF.alias('RE_COLL_IND_ECF'),
	LKP_OUT_1.LONG_DESC_ECF.alias('LONG_DESC_ECF'),
	LKP_OUT_1.FRY14_PROP_SIZE_ECF.alias('FRY14_PROP_SIZE_ECF'),
	LKP_OUT_1.LIEN_POSITION_ECF.alias('LIEN_POSITION_ECF'),
	LKP_OUT_1.FDIC_IND_ECF.alias('FDIC_IND_ECF'),
	LKP_OUT_1.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD_INT_ECF'),
	LKP_OUT_1.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC_INT_ECF'),
	LKP_OUT_1.PROD_CD_ECF.alias('PROD_CD_ECF'),
	LKP_OUT_1.PROD_DESC_ECF.alias('PROD_DESC_ECF'),
	LKP_OUT_1.PROD_GRP_CD_ECF.alias('PROD_GRP_CD_ECF'),
	LKP_OUT_1.PROD_LINE_CD_ECF.alias('PROD_LINE_CD_ECF'),
	LKP_OUT_1.PROD_LINE_DESC_ECF.alias('PROD_LINE_DESC_ECF'),
	LKP_OUT_1.BUS_OR_IND_CD_ECF.alias('BUS_OR_IND_CD_ECF'),
	LKP_OUT_1.RCC_LINE_NBR_ECF.alias('RCC_LINE_NBR_ECF'),
	LKP_OUT_1.OWNR_OCCPD_IND_ECF.alias('OWNR_OCCPD_IND_ECF'),
	LKP_OUT_1.MOODY_CD_ECF.alias('MOODY_CD_ECF'),
	LKP_OUT_1.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD_ECF'),
	LKP_OUT_1.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC_ECF'),
	LKP_OUT_1.FRY14_PRPSE_CD_ECF.alias('FRY14_PRPSE_CD_ECF'),
	LKP_OUT_1.FRY14_PRPSE_CD_DESC_ECF.alias('FRY14_PRPSE_CD_DESC_ECF'),
	LKP_OUT_1.COLL_CD_ECF.alias('COLL_CD_ECF'),
	LKP_OUT_1.COLL_DESC_COLL_ECF.alias('COLL_DESC_COLL_ECF'),
	LKP_OUT_1.SUPERVISORY_LTV_PCT_ECF.alias('SUPERVISORY_LTV_PCT_ECF'),
	LKP_OUT_1.SUPERVISORY_LTV_CAT_DESC_ECF.alias('SUPERVISORY_LTV_CAT_DESC_ECF'),
	LKP_OUT_1.CREATE_ADDR_COLL_ECF.alias('CREATE_ADDR_COLL_ECF'),
	LKP_OUT_1.TBI_CATEGORY_COLL_ECF.alias('TBI_CATEGORY_COLL_ECF'),
	LKP_OUT_1.PPR_PROP_TYPE_COLL_ECF.alias('PPR_PROP_TYPE_COLL_ECF'),
	LKP_OUT_1.CRE_COLL_IND_COLL_ECF.alias('CRE_COLL_IND_COLL_ECF'),
	LKP_OUT_1.RE_COLL_IND_COLL_ECF.alias('RE_COLL_IND_COLL_ECF'),
	LKP_OUT_1.LONG_DESC_COLL_ECF.alias('LONG_DESC_COLL_ECF'),
	LKP_OUT_1.INT_PMT_FREQ_CD_PRIN_ECF.alias('INT_PMT_FREQ_CD_PRIN_ECF'),
	LKP_OUT_1.INT_PMT_FREQ_DESC_PRIN_ECF.alias('INT_PMT_FREQ_DESC_PRIN_ECF'),
	LKP_OUT_1.BKRPT_STAT_CODE_ECF.alias('BKRPT_STAT_CODE_ECF'),
	LKP_OUT_1.BKRPT_STAT_CODE_DESC_ECF.alias('BKRPT_STAT_CODE_DESC_ECF'),
	LKP_OUT_1.BKRPT_TYP_CODE_ECF.alias('BKRPT_TYP_CODE_ECF'),
	LKP_OUT_1.BKRPT_TYP_CODE_DESC_ECF.alias('BKRPT_TYP_CODE_DESC_ECF'),
	LKP_OUT_1.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	LKP_OUT_1.REG_BANK_SHR_EXP_AMT.alias('REG_BANK_SHR_EXP_AMT'),
	LKP_OUT_1.CF_CUR_LN_AMT.alias('CF_CUR_LN_AMT'),
	LKP_OUT_1.LN_ORIG_SYS_CODE_ECF_OUT1.alias('LN_ORIG_SYS_CODE_ECF_OUT1'),
	LKP_OUT_1.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CODE_DESC_ECF_OUT2'),
	LKP_OUT_1.bois_first_repay_dt.alias('bois_first_repay_dt'),
	LKP_OUT_1.brlm_repay_meth.alias('brlm_repay_meth'),
	LKP_OUT_1.borm_int_chng_freq.alias('borm_int_chng_freq'),
	LKP_OUT_1.bois_fix_int_term.alias('bois_fix_int_term'),
	LKP_OUT_1.Integer_borm_int_chng_freq.alias('Integer_borm_int_chng_freq'),
	LKP_OUT_1.Integer_bois_fix_int_term.alias('Integer_bois_fix_int_term'),
	LKP_OUT_1.auth_frb_flb_plg_iel.alias('auth_frb_flb_plg_iel'),
	LKP_OUT_1.auth_frb_flhb_plg.alias('auth_frb_flhb_plg'),
	LKP_OUT_1.bois_cap_rate_value.alias('bois_cap_rate_value'),
	LKP_OUT_1.bois_col_rt_value.alias('bois_col_rt_value'),
	LKP_OUT_1.INT_RATE_TYP.alias('INT_RATE_TYP'),
	LKP_OUT_1.rtmx_reset_freq.alias('rtmx_reset_freq'),
	LKP_OUT_1.usbo_conus_cr_counsl.alias('usbo_conus_cr_counsl'),
	LKP_OUT_1.bois_mast_loan_acct_lkp.alias('bois_mast_loan_acct_lkp'),
	LKP_OUT_1.borm_stat_cd.alias('borm_stat_cd'),
	LKP_OUT_1.bois_periodic_cap.alias('bois_periodic_cap'),
	LKP_OUT_1.colm_coll_sub_typ_Coll_cd.alias('colm_coll_sub_typ_Coll_cd'),
	LKP_OUT_1.RESTORED_TO_ACCRUAL_DT.alias('RESTORED_TO_ACCRUAL_DT'),
	LKP_OUT_1.bois_pre_pen_basis.alias('bois_pre_pen_basis'),
	LKP_OUT_1.borm_applic_issue_date.alias('borm_applic_issue_date'),
	LKP_OUT_1.aral_instn_nbr.alias('aral_instn_nbr'),
	LKP_OUT_1.aral_arrange_nbr.alias('aral_arrange_nbr'),
	LKP_OUT_1.arsm_instn_nbr.alias('arsm_instn_nbr'),
	LKP_OUT_1.arsm_bank_role.alias('arsm_bank_role'),
	LKP_OUT_1.arsm_arr_type.alias('arsm_arr_type'),
	LKP_OUT_1.arsm_shared_cr_flag.alias('arsm_shared_cr_flag'),
	LKP_OUT_1.arsm_share_per.alias('arsm_share_per'),
	LKP_OUT_1.arsm_total_limit_amt.alias('arsm_total_limit_amt'),
	LKP_OUT_1.arml_cnt_party_nbr.alias('arml_cnt_party_nbr'),
	LKP_OUT_1.arml_mem_bank_role.alias('arml_mem_bank_role'),
	LKP_OUT_1.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC'),
	LKP_OUT_1.cusm_cur_name.alias('cusm_cur_name'),
	LKP_OUT_1.borm_pdcc_val.alias('borm_pdcc_val'),
	LKP_OUT_1.bois_ex_flag_2.alias('bois_ex_flag_2'),
	LKP_OUT_1.FORECLS_IND.alias('FORECLS_IND'),
	LKP_OUT_1.acfr_fclty_nbr_borm.alias('acfr_fclty_nbr_borm'),
	LKP_OUT_1.acfr_fclty_nbr_bois.alias('acfr_fclty_nbr_bois'),
	LKP_OUT_1.lend_arrangement_cd.alias('lend_arrangement_cd'),
	LKP_OUT_1.lend_arrangement_desc.alias('lend_arrangement_desc'),
	LKP_OUT_1.cgca_sub_pgm_no.alias('cgca_sub_pgm_no'),
	LKP_OUT_1.LN_PROG_CD.alias('LN_PROG_CD'),
	LKP_OUT_1.LN_PROG_DESC.alias('LN_PROG_DESC'),
	LKP_OUT_1.acfr_acct_nbr.alias('acfr_acct_nbr'),
	LKP_OUT_1.SUM_BORM_APP_AMT.alias('SUM_BORM_APP_AMT'),
	LKP_OUT_1.cgca_govnt_pgm_no.alias('cgca_govnt_pgm_no'),
	LKP_OUT_1.cgca_sch_ref_prefix.alias('cgca_sch_ref_prefix'),
	LKP_OUT_1.cgca_ln_acct_nbr.alias('cgca_ln_acct_nbr'),
	LKP_OUT_1.acom_abs_unused_rate.alias('acom_abs_unused_rate'),
	LKP_OUT_1.csec_fee_nbr.alias('csec_fee_nbr'),
	LKP_OUT_1.csec_prd_fee_fst_chr_dt.alias('csec_prd_fee_fst_chr_dt'),
	LKP_OUT_1.bois_regw_reportable.alias('bois_regw_reportable'),
	LKP_OUT_1.arsm_arr_status.alias('arsm_arr_status'),
	LKP_OUT_1.TAX_EXEMPT_FLAG.alias('TAX_EXEMPT_FLAG'),
	LKP_OUT_1.uscu_affiliate_code.alias('uscu_affiliate_code'),
	LKP_OUT_1.int_rate_ze_variable_rate_cd.alias('int_rate_ze_variable_rate_cd'),
	LKP_OUT_1.int_rate_ze_col_rate.alias('int_rate_ze_col_rate'),
	LKP_OUT_1.int_rate_ze_cap_rate.alias('int_rate_ze_cap_rate'),
	LKP_OUT_1.int_rate_ze_reset_freq.alias('int_rate_ze_reset_freq'),
	LKP_OUT_1.arsm_am_agent_bnk.alias('arsm_am_agent_bnk'),
	LKP_OUT_1.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank'),
	LKP_OUT_1.arsm_bank_role_multiple_arr.alias('arsm_bank_role_multiple_arr'),
	LKP_OUT_1.arsm_share_per_bank_role_multiple_arr.alias('arsm_share_per_bank_role_multiple_arr'),
	LKP_OUT_1.arsm_bank_role_arry_typ_multiple_arr.alias('arsm_bank_role_arry_typ_multiple_arr'),
	LKP_OUT_1.arsm_bank_role_shared_cr_flag_multiple_arr.alias('arsm_bank_role_shared_cr_flag_multiple_arr'),
	LKP_OUT_1.arsm_shared_cr_flag_multiple_arr.alias('arsm_shared_cr_flag_multiple_arr'),
	LKP_OUT_1.arsm_arr_type_multiple_arr.alias('arsm_arr_type_multiple_arr'),
	LKP_OUT_1.arsm_arr_typ_bank_role_multiple_arr.alias('arsm_arr_typ_bank_role_multiple_arr'),
	LKP_OUT_1.arsm_arr_typ_shared_cr_flag_multiple_arr.alias('arsm_arr_typ_shared_cr_flag_multiple_arr'),
	LKP_OUT_1.arsm_shared_cr_flag_multiple_arr_lend.alias('arsm_shared_cr_flag_multiple_arr_lend'),
	LKP_OUT_1.arsm_bank_role_multiple_arr_lend.alias('arsm_bank_role_multiple_arr_lend'),
	LKP_OUT_1.arsm_arr_type_multiple_arr_lend.alias('arsm_arr_type_multiple_arr_lend'),
	LKP_OUT_1.arsm_shared_cr_flag_multiple_arr_lend_final.alias('arsm_shared_cr_flag_multiple_arr_lend_final'),
	LKP_OUT_1.usbo_loan_manag_group.alias('usbo_loan_manag_group'),
	LKP_OUT_1.borm_lonp_mul_bk_ledger_code_coalesce.alias('borm_lonp_mul_bk_ledger_code_coalesce'),
	LKP_OUT_1.borm_cas_stat_code.alias('borm_cas_stat_code'),
	LKP_OUT_1.borm_acct_typ.alias('borm_acct_typ'),
	LKP_OUT_1.borm_prod_cat.alias('borm_prod_cat'),
	LKP_OUT_1.aral_arr_prod_code_bank_role_multiple_arr.alias('aral_arr_prod_code_bank_role_multiple_arr'),
	LKP_OUT_1.aral_arr_prod_code_bank_role_lend.alias('aral_arr_prod_code_bank_role_lend'),
	LKP_OUT_1.arsm_bank_role_multiple_arr_others.alias('arsm_bank_role_multiple_arr_others'),
	LKP_OUT_1.arsm_share_per_multiple_arr_others.alias('arsm_share_per_multiple_arr_others'),
	LKP_OUT_1.arsm_total_limit_amt_multiple_arr_others.alias('arsm_total_limit_amt_multiple_arr_others'),
	LKP_OUT_1.bois_pre_pen_method.alias('bois_pre_pen_method'),
	LKP_OUT_1.arml_mem_bank_role_multiple_arr_others.alias('arml_mem_bank_role_multiple_arr_others'),
	LKP_OUT_1.cusm_cur_name_multiple_arr_others.alias('cusm_cur_name_multiple_arr_others'),
	LKP_OUT_1.arml_cnt_party_nbr_multiple_arr_others.alias('arml_cnt_party_nbr_multiple_arr_others'),
	BORM.ACCT_ID.alias('ACCT_ID_BORM'),
	BORM.facm_instn_nbr_BORM.alias('facm_instn_nbr_BORM'),
	BORM.facm_fclty_nbr_BORM.alias('facm_fclty_nbr_BORM'),
	BORM.facm_legal_bind.alias('facm_legal_bind_BORM'),
	BOIS.ACCT_ID.alias('ACCT_ID_BOIS'),
	BOIS.facm_instn_nbr_BOIS.alias('facm_instn_nbr_BOIS'),
	BOIS.facm_fclty_nbr_BOIS.alias('facm_fclty_nbr_BOIS'),
	BOIS.facm_legal_bind.alias('facm_legal_bind_BOIS'),
	LKP_OUT_1.acfr_instn_nbr_BORM.alias('acfr_instn_nbr_BORM'),
	LKP_OUT_1.acfr_acct_nbr_BORM.alias('acfr_acct_nbr_BORM'),
	LKP_OUT_1.acfr_instn_nbr_BOIS.alias('acfr_instn_nbr_BOIS'),
	LKP_OUT_1.acfr_acct_nbr_BOIS.alias('acfr_acct_nbr_BOIS'),
	LKP_OUT_1.acfr_fclty_nbr_join_borm.alias('acfr_fclty_nbr_join_borm'),
	LKP_OUT_1.acfr_fclty_nbr_join_bois.alias('acfr_fclty_nbr_join_bois'),
	LKP_OUT_1.coalese_bois_mast_loan_acct_ln_acct_nbr.alias('coalese_bois_mast_loan_acct_ln_acct_nbr'),
	BOIS.facm_parent_facility_no_BOIS.alias('facm_parent_facility_no_BOIS'),
	BORM.facm_parent_facility_no_BORM.alias('facm_parent_facility_no_BORM'),
	LKP_OUT_1.ACCTGRPCD.alias('ACCTGRPCD'),
	LKP_OUT_1.bois_frb_plg_inel.alias('bois_frb_plg_inel'),
	LKP_OUT_1.bois_frb_fhlb_plg.alias('bois_frb_fhlb_plg'),
	LKP_OUT_1.bkrm_notification_dt.alias('bkrm_notification_dt'),
	LKP_OUT_1.bois_maturity_date.alias('bois_maturity_date'),
	LKP_OUT_1.usbo_collect_respons.alias('usbo_collect_respons'),
	LKP_OUT_1.usbo_purchased_code.alias('usbo_purchased_code'),
	LKP_OUT_1.usbo_purch_dt.alias('usbo_purch_dt'),
	LKP_OUT_1.bois_pred_loan_no.alias('bois_pred_loan_no'),
	LKP_OUT_1.arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT_1.arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT_1.arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT_1.borm_hfis_flag.alias('borm_hfis_flag'),
	LKP_OUT_1.brlm_bor_base_amt.alias('brlm_bor_base_amt'),
	LKP_OUT_1.brlm_effect_lim.alias('brlm_effect_lim'),
	LKP_OUT_1.bkrm_filed_dt.alias('bkrm_filed_dt'),
	LKP_OUT_1.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	LKP_OUT_1.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	LKP_OUT_1.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	LKP_OUT_1.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	LKP_OUT_1.arsm_bank_role_abn_parent.alias('arsm_bank_role_abn_parent'),
	LKP_OUT_1.arsm_arr_type_abn_parent.alias('arsm_arr_type_abn_parent'),
	LKP_OUT_1.arsm_arr_status_abn_parent.alias('arsm_arr_status_abn_parent'),
	LKP_OUT_1.arsm_am_agent_bnk_abn_parent.alias('arsm_am_agent_bnk_abn_parent'),
	BOIS.arsm_bank_role_abn.alias('arsm_bank_role_abn_facm_parent'),
	BOIS.arsm_arr_type_abn.alias('arsm_arr_type_abn_facm_parent'),
	BOIS.arsm_arr_status_abn.alias('arsm_arr_status_abn_facm_parent'),
	BOIS.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn_facm_parent'),
	BOIS.ECF_SRC_BANK_NBR_DESC_facm_parent.alias('ECF_SRC_BANK_NBR_DESC_facm_parent'),
	BOIS.cusm_cur_name_agnt_bank_facm_parent.alias('cusm_cur_name_agnt_bank_facm_parent'),
	BORM.arsm_bank_role_abn.alias('arsm_bank_role_abn_facm'),
	BORM.arsm_arr_type_abn.alias('arsm_arr_type_abn_facm'),
	BORM.arsm_arr_status_abn.alias('arsm_arr_status_abn_facm'),
	BORM.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn_facm'),
	BORM.ECF_SRC_BANK_NBR_DESC_facm.alias('ECF_SRC_BANK_NBR_DESC_facm'),
	BORM.cusm_cur_name_agnt_bank_facm.alias('cusm_cur_name_agnt_bank_facm')
)

# Processing node LKP_OUT_CONV2, type MERGE
# COLUMN COUNT: 244
# Original node name LKP_GRAND_PARENT, link LKP_OUT_CONV2

LKP_OUT_CONV2 = LKP_OUT1.join(BORM_CONV6, [BORM_CONV6.facm_fclty_nbr == LKP_OUT1.facm_parent_facility_no_BORM, BORM_CONV6.facm_instn_nbr == LKP_OUT1.facm_instn_nbr_BORM], 'LEFT_OUTER').join(BOIS_CONV7, [BOIS_CONV7.facm_fclty_nbr == LKP_OUT1.facm_parent_facility_no_BOIS, BOIS_CONV7.facm_instn_nbr == LKP_OUT1.facm_instn_nbr_BOIS], 'LEFT_OUTER').join(BOIS_PARENT, [BOIS_PARENT.ACCT_ID == LKP_OUT1.ACCT_ID, BOIS_PARENT.AS_OF_DT == LKP_OUT1.AS_OF_DT], 'LEFT_OUTER').select(
	LKP_OUT1.ACCT_ID.alias('ACCT_ID'),
	LKP_OUT1.AS_OF_DT.alias('AS_OF_DT'),
	LKP_OUT1.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	LKP_OUT1.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	LKP_OUT1.NATL_KEY.alias('NATL_KEY'),
	LKP_OUT1.FDIC_CD.alias('FDIC_CD'),
	LKP_OUT1.TDR_IND.alias('TDR_IND'),
	LKP_OUT1.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	LKP_OUT1.CUPA_ID.alias('CUPA_ID'),
	LKP_OUT1.ACCT_ID_CUPA_CHECK.alias('ACCT_ID_CUPA_CHECK'),
	LKP_OUT1.BKRPT_IND.alias('BKRPT_IND'),
	LKP_OUT1.ORIG_LN_AMT_PREV.alias('ORIG_LN_AMT_PREV'),
	LKP_OUT1.BKRPT_IND_PREV.alias('BKRPT_IND_PREV'),
	LKP_OUT1.BKRPT_DT_PREV.alias('BKRPT_DT_PREV'),
	LKP_OUT1.LIEN_PSTN.alias('LIEN_PSTN'),
	LKP_OUT1.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	LKP_OUT1.borm_instn_nbr.alias('borm_instn_nbr'),
	LKP_OUT1.APPL_CD.alias('APPL_CD'),
	LKP_OUT1.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	LKP_OUT1.borm_apprv_date.alias('borm_apprv_date'),
	LKP_OUT1.bois_mast_loan_acct.alias('bois_mast_loan_acct'),
	LKP_OUT1.bois_child_loan_type.alias('bois_child_loan_type'),
	LKP_OUT1.bois_ln_acct_nbr.alias('bois_ln_acct_nbr'),
	LKP_OUT1.borm_cost_center_2_4.alias('borm_cost_center_2_4'),
	LKP_OUT1.borm_adv_val.alias('borm_adv_val'),
	LKP_OUT1.borm_int_repay_freq.alias('borm_int_repay_freq'),
	LKP_OUT1.borm_repay_freq.alias('borm_repay_freq'),
	LKP_OUT1.brlm_appro_id.alias('brlm_appro_id'),
	LKP_OUT1.bois_non_accr_stat.alias('bois_non_accr_stat'),
	LKP_OUT1.bois_non_accr_type.alias('bois_non_accr_type'),
	LKP_OUT1.bois_last_npa_dt.alias('bois_last_npa_dt'),
	LKP_OUT1.borm_app_amt.alias('borm_app_amt'),
	LKP_OUT1.bois_promo_nbr.alias('bois_promo_nbr'),
	LKP_OUT1.borm_prpse_cd_a.alias('borm_prpse_cd_a'),
	LKP_OUT1.bois_tdr_stat.alias('bois_tdr_stat'),
	LKP_OUT1.bois_tdr_eff_dt.alias('bois_tdr_eff_dt'),
	LKP_OUT1.FA_LOB_ID.alias('FA_LOB_ID'),
	LKP_OUT1.FA_LOB_EFF_DT.alias('FA_LOB_EFF_DT'),
	LKP_OUT1.colm_coll_sub_typ.alias('colm_coll_sub_typ'),
	LKP_OUT1.bkrm_stat_cd.alias('bkrm_stat_cd'),
	LKP_OUT1.bois_fac_grade_id.alias('bois_fac_grade_id'),
	LKP_OUT1.bois_loc_type.alias('bois_loc_type'),
	LKP_OUT1.brlm_draw_pd_exp_date.alias('brlm_draw_pd_exp_date'),
	LKP_OUT1.lien_lien_pos.alias('lien_lien_pos'),
	LKP_OUT1.colm_stat_cd.alias('colm_stat_cd'),
	LKP_OUT1.bkrm_bkrpt_ind.alias('bkrm_bkrpt_ind'),
	LKP_OUT1.usbo_src_of_orig.alias('usbo_src_of_orig'),
	LKP_OUT1.cpro_land_use.alias('cpro_land_use'),
	LKP_OUT1.cpro_prim_dwell.alias('cpro_prim_dwell'),
	LKP_OUT1.auth_sbl_ind.alias('auth_sbl_ind'),
	LKP_OUT1.borm_spl_loan_cde.alias('borm_spl_loan_cde'),
	LKP_OUT1.usbo_loan_orig_id.alias('usbo_loan_orig_id'),
	LKP_OUT1.COLL_DESC_ECF.alias('COLL_DESC_ECF'),
	LKP_OUT1.CREATE_ADDR_ECF.alias('CREATE_ADDR_ECF'),
	LKP_OUT1.TBI_CATEGORY_ECF.alias('TBI_CATEGORY_ECF'),
	LKP_OUT1.PPR_PROP_TYPE_ECF.alias('PPR_PROP_TYPE_ECF'),
	LKP_OUT1.CRE_COLL_IND_ECF.alias('CRE_COLL_IND_ECF'),
	LKP_OUT1.RE_COLL_IND_ECF.alias('RE_COLL_IND_ECF'),
	LKP_OUT1.LONG_DESC_ECF.alias('LONG_DESC_ECF'),
	LKP_OUT1.FRY14_PROP_SIZE_ECF.alias('FRY14_PROP_SIZE_ECF'),
	LKP_OUT1.LIEN_POSITION_ECF.alias('LIEN_POSITION_ECF'),
	LKP_OUT1.FDIC_IND_ECF.alias('FDIC_IND_ECF'),
	LKP_OUT1.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD_INT_ECF'),
	LKP_OUT1.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC_INT_ECF'),
	LKP_OUT1.PROD_CD_ECF.alias('PROD_CD_ECF'),
	LKP_OUT1.PROD_DESC_ECF.alias('PROD_DESC_ECF'),
	LKP_OUT1.PROD_GRP_CD_ECF.alias('PROD_GRP_CD_ECF'),
	LKP_OUT1.PROD_LINE_CD_ECF.alias('PROD_LINE_CD_ECF'),
	LKP_OUT1.PROD_LINE_DESC_ECF.alias('PROD_LINE_DESC_ECF'),
	LKP_OUT1.BUS_OR_IND_CD_ECF.alias('BUS_OR_IND_CD_ECF'),
	LKP_OUT1.RCC_LINE_NBR_ECF.alias('RCC_LINE_NBR_ECF'),
	LKP_OUT1.OWNR_OCCPD_IND_ECF.alias('OWNR_OCCPD_IND_ECF'),
	LKP_OUT1.MOODY_CD_ECF.alias('MOODY_CD_ECF'),
	LKP_OUT1.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD_ECF'),
	LKP_OUT1.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC_ECF'),
	LKP_OUT1.FRY14_PRPSE_CD_ECF.alias('FRY14_PRPSE_CD_ECF'),
	LKP_OUT1.FRY14_PRPSE_CD_DESC_ECF.alias('FRY14_PRPSE_CD_DESC_ECF'),
	LKP_OUT1.COLL_CD_ECF.alias('COLL_CD_ECF'),
	LKP_OUT1.COLL_DESC_COLL_ECF.alias('COLL_DESC_COLL_ECF'),
	LKP_OUT1.SUPERVISORY_LTV_PCT_ECF.alias('SUPERVISORY_LTV_PCT_ECF'),
	LKP_OUT1.SUPERVISORY_LTV_CAT_DESC_ECF.alias('SUPERVISORY_LTV_CAT_DESC_ECF'),
	LKP_OUT1.CREATE_ADDR_COLL_ECF.alias('CREATE_ADDR_COLL_ECF'),
	LKP_OUT1.TBI_CATEGORY_COLL_ECF.alias('TBI_CATEGORY_COLL_ECF'),
	LKP_OUT1.PPR_PROP_TYPE_COLL_ECF.alias('PPR_PROP_TYPE_COLL_ECF'),
	LKP_OUT1.CRE_COLL_IND_COLL_ECF.alias('CRE_COLL_IND_COLL_ECF'),
	LKP_OUT1.RE_COLL_IND_COLL_ECF.alias('RE_COLL_IND_COLL_ECF'),
	LKP_OUT1.LONG_DESC_COLL_ECF.alias('LONG_DESC_COLL_ECF'),
	LKP_OUT1.INT_PMT_FREQ_CD_PRIN_ECF.alias('INT_PMT_FREQ_CD_PRIN_ECF'),
	LKP_OUT1.INT_PMT_FREQ_DESC_PRIN_ECF.alias('INT_PMT_FREQ_DESC_PRIN_ECF'),
	LKP_OUT1.BKRPT_STAT_CODE_ECF.alias('BKRPT_STAT_CODE_ECF'),
	LKP_OUT1.BKRPT_STAT_CODE_DESC_ECF.alias('BKRPT_STAT_CODE_DESC_ECF'),
	LKP_OUT1.BKRPT_TYP_CODE_ECF.alias('BKRPT_TYP_CODE_ECF'),
	LKP_OUT1.BKRPT_TYP_CODE_DESC_ECF.alias('BKRPT_TYP_CODE_DESC_ECF'),
	LKP_OUT1.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	LKP_OUT1.REG_BANK_SHR_EXP_AMT.alias('REG_BANK_SHR_EXP_AMT'),
	LKP_OUT1.CF_CUR_LN_AMT.alias('CF_CUR_LN_AMT'),
	LKP_OUT1.LN_ORIG_SYS_CODE_ECF_OUT1.alias('LN_ORIG_SYS_CODE_ECF_OUT1'),
	LKP_OUT1.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CODE_DESC_ECF_OUT2'),
	LKP_OUT1.bois_first_repay_dt.alias('bois_first_repay_dt'),
	LKP_OUT1.brlm_repay_meth.alias('brlm_repay_meth'),
	LKP_OUT1.borm_int_chng_freq.alias('borm_int_chng_freq'),
	LKP_OUT1.bois_fix_int_term.alias('bois_fix_int_term'),
	LKP_OUT1.Integer_borm_int_chng_freq.alias('Integer_borm_int_chng_freq'),
	LKP_OUT1.Integer_bois_fix_int_term.alias('Integer_bois_fix_int_term'),
	LKP_OUT1.auth_frb_flb_plg_iel.alias('auth_frb_flb_plg_iel'),
	LKP_OUT1.auth_frb_flhb_plg.alias('auth_frb_flhb_plg'),
	LKP_OUT1.bois_cap_rate_value.alias('bois_cap_rate_value'),
	LKP_OUT1.bois_col_rt_value.alias('bois_col_rt_value'),
	LKP_OUT1.INT_RATE_TYP.alias('INT_RATE_TYP'),
	LKP_OUT1.rtmx_reset_freq.alias('rtmx_reset_freq'),
	LKP_OUT1.usbo_conus_cr_counsl.alias('usbo_conus_cr_counsl'),
	LKP_OUT1.bois_mast_loan_acct_lkp.alias('bois_mast_loan_acct_lkp'),
	LKP_OUT1.borm_stat_cd.alias('borm_stat_cd'),
	LKP_OUT1.bois_periodic_cap.alias('bois_periodic_cap'),
	LKP_OUT1.colm_coll_sub_typ_Coll_cd.alias('colm_coll_sub_typ_Coll_cd'),
	LKP_OUT1.RESTORED_TO_ACCRUAL_DT.alias('RESTORED_TO_ACCRUAL_DT'),
	LKP_OUT1.bois_pre_pen_basis.alias('bois_pre_pen_basis'),
	LKP_OUT1.borm_applic_issue_date.alias('borm_applic_issue_date'),
	LKP_OUT1.aral_instn_nbr.alias('aral_instn_nbr'),
	LKP_OUT1.aral_arrange_nbr.alias('aral_arrange_nbr'),
	LKP_OUT1.arsm_instn_nbr.alias('arsm_instn_nbr'),
	LKP_OUT1.arsm_bank_role.alias('arsm_bank_role'),
	LKP_OUT1.arsm_arr_type.alias('arsm_arr_type'),
	LKP_OUT1.arsm_shared_cr_flag.alias('arsm_shared_cr_flag'),
	LKP_OUT1.arsm_share_per.alias('arsm_share_per'),
	LKP_OUT1.arsm_total_limit_amt.alias('arsm_total_limit_amt'),
	LKP_OUT1.arml_cnt_party_nbr.alias('arml_cnt_party_nbr'),
	LKP_OUT1.arml_mem_bank_role.alias('arml_mem_bank_role'),
	LKP_OUT1.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC'),
	LKP_OUT1.cusm_cur_name.alias('cusm_cur_name'),
	LKP_OUT1.borm_pdcc_val.alias('borm_pdcc_val'),
	LKP_OUT1.bois_ex_flag_2.alias('bois_ex_flag_2'),
	LKP_OUT1.FORECLS_IND.alias('FORECLS_IND'),
	LKP_OUT1.acfr_fclty_nbr_borm.alias('acfr_fclty_nbr_borm'),
	LKP_OUT1.acfr_fclty_nbr_bois.alias('acfr_fclty_nbr_bois'),
	LKP_OUT1.lend_arrangement_cd.alias('lend_arrangement_cd'),
	LKP_OUT1.lend_arrangement_desc.alias('lend_arrangement_desc'),
	LKP_OUT1.cgca_sub_pgm_no.alias('cgca_sub_pgm_no'),
	LKP_OUT1.LN_PROG_CD.alias('LN_PROG_CD'),
	LKP_OUT1.LN_PROG_DESC.alias('LN_PROG_DESC'),
	LKP_OUT1.acfr_acct_nbr.alias('acfr_acct_nbr'),
	LKP_OUT1.SUM_BORM_APP_AMT.alias('SUM_BORM_APP_AMT'),
	LKP_OUT1.cgca_govnt_pgm_no.alias('cgca_govnt_pgm_no'),
	LKP_OUT1.cgca_sch_ref_prefix.alias('cgca_sch_ref_prefix'),
	LKP_OUT1.cgca_ln_acct_nbr.alias('cgca_ln_acct_nbr'),
	LKP_OUT1.acom_abs_unused_rate.alias('acom_abs_unused_rate'),
	LKP_OUT1.csec_fee_nbr.alias('csec_fee_nbr'),
	LKP_OUT1.csec_prd_fee_fst_chr_dt.alias('csec_prd_fee_fst_chr_dt'),
	LKP_OUT1.bois_regw_reportable.alias('bois_regw_reportable'),
	LKP_OUT1.arsm_arr_status.alias('arsm_arr_status'),
	LKP_OUT1.TAX_EXEMPT_FLAG.alias('TAX_EXEMPT_FLAG'),
	LKP_OUT1.uscu_affiliate_code.alias('uscu_affiliate_code'),
	LKP_OUT1.int_rate_ze_variable_rate_cd.alias('int_rate_ze_variable_rate_cd'),
	LKP_OUT1.int_rate_ze_col_rate.alias('int_rate_ze_col_rate'),
	LKP_OUT1.int_rate_ze_cap_rate.alias('int_rate_ze_cap_rate'),
	LKP_OUT1.int_rate_ze_reset_freq.alias('int_rate_ze_reset_freq'),
	LKP_OUT1.arsm_am_agent_bnk.alias('arsm_am_agent_bnk'),
	LKP_OUT1.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank'),
	LKP_OUT1.arsm_bank_role_multiple_arr.alias('arsm_bank_role_multiple_arr'),
	LKP_OUT1.arsm_share_per_bank_role_multiple_arr.alias('arsm_share_per_bank_role_multiple_arr'),
	LKP_OUT1.arsm_bank_role_arry_typ_multiple_arr.alias('arsm_bank_role_arry_typ_multiple_arr'),
	LKP_OUT1.arsm_bank_role_shared_cr_flag_multiple_arr.alias('arsm_bank_role_shared_cr_flag_multiple_arr'),
	LKP_OUT1.arsm_shared_cr_flag_multiple_arr.alias('arsm_shared_cr_flag_multiple_arr'),
	LKP_OUT1.arsm_arr_type_multiple_arr.alias('arsm_arr_type_multiple_arr'),
	LKP_OUT1.arsm_arr_typ_bank_role_multiple_arr.alias('arsm_arr_typ_bank_role_multiple_arr'),
	LKP_OUT1.arsm_arr_typ_shared_cr_flag_multiple_arr.alias('arsm_arr_typ_shared_cr_flag_multiple_arr'),
	LKP_OUT1.arsm_shared_cr_flag_multiple_arr_lend.alias('arsm_shared_cr_flag_multiple_arr_lend'),
	LKP_OUT1.arsm_bank_role_multiple_arr_lend.alias('arsm_bank_role_multiple_arr_lend'),
	LKP_OUT1.arsm_arr_type_multiple_arr_lend.alias('arsm_arr_type_multiple_arr_lend'),
	LKP_OUT1.arsm_shared_cr_flag_multiple_arr_lend_final.alias('arsm_shared_cr_flag_multiple_arr_lend_final'),
	LKP_OUT1.usbo_loan_manag_group.alias('usbo_loan_manag_group'),
	LKP_OUT1.borm_lonp_mul_bk_ledger_code_coalesce.alias('borm_lonp_mul_bk_ledger_code_coalesce'),
	LKP_OUT1.borm_cas_stat_code.alias('borm_cas_stat_code'),
	LKP_OUT1.borm_acct_typ.alias('borm_acct_typ'),
	LKP_OUT1.borm_prod_cat.alias('borm_prod_cat'),
	LKP_OUT1.aral_arr_prod_code_bank_role_multiple_arr.alias('aral_arr_prod_code_bank_role_multiple_arr'),
	LKP_OUT1.aral_arr_prod_code_bank_role_lend.alias('aral_arr_prod_code_bank_role_lend'),
	LKP_OUT1.arsm_bank_role_multiple_arr_others.alias('arsm_bank_role_multiple_arr_others'),
	LKP_OUT1.arsm_share_per_multiple_arr_others.alias('arsm_share_per_multiple_arr_others'),
	LKP_OUT1.arsm_total_limit_amt_multiple_arr_others.alias('arsm_total_limit_amt_multiple_arr_others'),
	LKP_OUT1.bois_pre_pen_method.alias('bois_pre_pen_method'),
	LKP_OUT1.arml_mem_bank_role_multiple_arr_others.alias('arml_mem_bank_role_multiple_arr_others'),
	LKP_OUT1.cusm_cur_name_multiple_arr_others.alias('cusm_cur_name_multiple_arr_others'),
	LKP_OUT1.arml_cnt_party_nbr_multiple_arr_others.alias('arml_cnt_party_nbr_multiple_arr_others'),
	LKP_OUT1.ACCT_ID_BORM.alias('ACCT_ID_BORM'),
	LKP_OUT1.facm_instn_nbr_BORM.alias('facm_instn_nbr_BORM'),
	LKP_OUT1.facm_fclty_nbr_BORM.alias('facm_fclty_nbr_BORM'),
	LKP_OUT1.facm_legal_bind_BORM.alias('facm_legal_bind_BORM'),
	LKP_OUT1.ACCT_ID_BOIS.alias('ACCT_ID_BOIS'),
	LKP_OUT1.facm_instn_nbr_BOIS.alias('facm_instn_nbr_BOIS'),
	LKP_OUT1.facm_fclty_nbr_BOIS.alias('facm_fclty_nbr_BOIS'),
	LKP_OUT1.facm_legal_bind_BOIS.alias('facm_legal_bind_BOIS'),
	LKP_OUT1.acfr_instn_nbr_BORM.alias('acfr_instn_nbr_BORM'),
	LKP_OUT1.acfr_acct_nbr_BORM.alias('acfr_acct_nbr_BORM'),
	LKP_OUT1.acfr_instn_nbr_BOIS.alias('acfr_instn_nbr_BOIS'),
	LKP_OUT1.acfr_acct_nbr_BOIS.alias('acfr_acct_nbr_BOIS'),
	LKP_OUT1.acfr_fclty_nbr_join_borm.alias('acfr_fclty_nbr_join_borm'),
	LKP_OUT1.acfr_fclty_nbr_join_bois.alias('acfr_fclty_nbr_join_bois'),
	LKP_OUT1.coalese_bois_mast_loan_acct_ln_acct_nbr.alias('coalese_bois_mast_loan_acct_ln_acct_nbr'),
	BORM.facm_instn_nbr.alias('facm_instn_nbr_GRAND_PARENT_BORM'),
	BORM.facm_fclty_nbr.alias('facm_fclty_nbr_GRAND_PARENT_BORM'),
	BOIS.facm_instn_nbr.alias('facm_instn_nbr_GRAND_PARENT_BOIS'),
	BOIS.facm_fclty_nbr.alias('facm_fclty_nbr_GRAND_PARENT_BOIS'),
	BORM.ACCT_ID.alias('ACCT_ID_GRAND_PARENT_BORM'),
	BOIS.ACCT_ID.alias('ACCT_ID_GRAND_PARENT_BOIS'),
	BORM.facm_legal_bind.alias('facm_legal_bind_GRAND_PARENT_BORM'),
	BOIS.facm_legal_bind.alias('facm_legal_bind__GRAND_PARENT_BOIS'),
	BOIS_PARENT.usbo_loan_orig_id_ln_orig.alias('usbo_loan_orig_id_ln_orig'),
	LKP_OUT1.ACCTGRPCD.alias('ACCTGRPCD'),
	LKP_OUT1.bois_frb_plg_inel.alias('bois_frb_plg_inel'),
	LKP_OUT1.bois_frb_fhlb_plg.alias('bois_frb_fhlb_plg'),
	LKP_OUT1.bkrm_notification_dt.alias('bkrm_notification_dt'),
	LKP_OUT1.bois_maturity_date.alias('bois_maturity_date'),
	LKP_OUT1.usbo_collect_respons.alias('usbo_collect_respons'),
	LKP_OUT1.usbo_purchased_code.alias('usbo_purchased_code'),
	LKP_OUT1.usbo_purch_dt.alias('usbo_purch_dt'),
	LKP_OUT1.bois_pred_loan_no.alias('bois_pred_loan_no'),
	LKP_OUT1.arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT1.arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT1.arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT1.borm_hfis_flag.alias('borm_hfis_flag'),
	LKP_OUT1.brlm_bor_base_amt.alias('brlm_bor_base_amt'),
	LKP_OUT1.brlm_effect_lim.alias('brlm_effect_lim'),
	LKP_OUT1.bkrm_filed_dt.alias('bkrm_filed_dt'),
	LKP_OUT1.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	LKP_OUT1.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	LKP_OUT1.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	LKP_OUT1.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	LKP_OUT1.arsm_bank_role_abn_parent.alias('arsm_bank_role_abn_parent'),
	LKP_OUT1.arsm_arr_type_abn_parent.alias('arsm_arr_type_abn_parent'),
	LKP_OUT1.arsm_arr_status_abn_parent.alias('arsm_arr_status_abn_parent'),
	LKP_OUT1.arsm_am_agent_bnk_abn_parent.alias('arsm_am_agent_bnk_abn_parent'),
	LKP_OUT1.arsm_bank_role_abn_facm_parent.alias('arsm_bank_role_abn_facm_parent'),
	LKP_OUT1.arsm_arr_type_abn_facm_parent.alias('arsm_arr_type_abn_facm_parent'),
	LKP_OUT1.arsm_arr_status_abn_facm_parent.alias('arsm_arr_status_abn_facm_parent'),
	LKP_OUT1.arsm_am_agent_bnk_abn_facm_parent.alias('arsm_am_agent_bnk_abn_facm_parent'),
	LKP_OUT1.ECF_SRC_BANK_NBR_DESC_facm_parent.alias('ECF_SRC_BANK_NBR_DESC_facm_parent'),
	LKP_OUT1.cusm_cur_name_agnt_bank_facm_parent.alias('cusm_cur_name_agnt_bank_facm_parent'),
	LKP_OUT1.arsm_bank_role_abn_facm.alias('arsm_bank_role_abn_facm'),
	LKP_OUT1.arsm_arr_type_abn_facm.alias('arsm_arr_type_abn_facm'),
	LKP_OUT1.arsm_arr_status_abn_facm.alias('arsm_arr_status_abn_facm'),
	LKP_OUT1.arsm_am_agent_bnk_abn_facm.alias('arsm_am_agent_bnk_abn_facm'),
	LKP_OUT1.ECF_SRC_BANK_NBR_DESC_facm.alias('ECF_SRC_BANK_NBR_DESC_facm'),
	LKP_OUT1.cusm_cur_name_agnt_bank_facm.alias('cusm_cur_name_agnt_bank_facm')
)

# Processing node Xfm_lend_out, type TRANSFORMATION
# COLUMN COUNT: 235
# Original node name Xfm_LEND, link Xfm_lend_out

Xfm_lend_out = LKP_OUT_CONV2.select(
	LKP_OUT.ACCT_ID.alias('ACCT_ID'),
	LKP_OUT.AS_OF_DT.alias('AS_OF_DT'),
	LKP_OUT.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	LKP_OUT.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	LKP_OUT.NATL_KEY.alias('NATL_KEY'),
	LKP_OUT.FDIC_CD.alias('FDIC_CD'),
	LKP_OUT.TDR_IND.alias('TDR_IND'),
	LKP_OUT.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	LKP_OUT.CUPA_ID.alias('CUPA_ID'),
	LKP_OUT.ACCT_ID_CUPA_CHECK.alias('ACCT_ID_CUPA_CHECK'),
	LKP_OUT.BKRPT_IND.alias('BKRPT_IND'),
	LKP_OUT.ORIG_LN_AMT_PREV.alias('ORIG_LN_AMT_PREV'),
	LKP_OUT.BKRPT_IND_PREV.alias('BKRPT_IND_PREV'),
	LKP_OUT.BKRPT_DT_PREV.alias('BKRPT_DT_PREV'),
	LKP_OUT.LIEN_PSTN.alias('LIEN_PSTN'),
	LKP_OUT.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	LKP_OUT.borm_instn_nbr.alias('borm_instn_nbr'),
	LKP_OUT.APPL_CD.alias('APPL_CD'),
	LKP_OUT.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	LKP_OUT.borm_apprv_date.alias('borm_apprv_date'),
	LKP_OUT.bois_mast_loan_acct.alias('bois_mast_loan_acct'),
	LKP_OUT.bois_child_loan_type.alias('bois_child_loan_type'),
	LKP_OUT.bois_ln_acct_nbr.alias('bois_ln_acct_nbr'),
	LKP_OUT.borm_cost_center_2_4.alias('borm_cost_center_2_4'),
	LKP_OUT.borm_adv_val.alias('borm_adv_val'),
	LKP_OUT.borm_int_repay_freq.alias('borm_int_repay_freq'),
	LKP_OUT.borm_repay_freq.alias('borm_repay_freq'),
	LKP_OUT.brlm_appro_id.alias('brlm_appro_id'),
	LKP_OUT.bois_non_accr_stat.alias('bois_non_accr_stat'),
	LKP_OUT.bois_non_accr_type.alias('bois_non_accr_type'),
	LKP_OUT.bois_last_npa_dt.alias('bois_last_npa_dt'),
	LKP_OUT.borm_app_amt.alias('borm_app_amt'),
	LKP_OUT.bois_promo_nbr.alias('bois_promo_nbr'),
	LKP_OUT.borm_prpse_cd_a.alias('borm_prpse_cd_a'),
	LKP_OUT.bois_tdr_stat.alias('bois_tdr_stat'),
	LKP_OUT.bois_tdr_eff_dt.alias('bois_tdr_eff_dt'),
	LKP_OUT.FA_LOB_ID.alias('FA_LOB_ID'),
	LKP_OUT.FA_LOB_EFF_DT.alias('FA_LOB_EFF_DT'),
	LKP_OUT.colm_coll_sub_typ.alias('colm_coll_sub_typ'),
	LKP_OUT.bkrm_stat_cd.alias('bkrm_stat_cd'),
	LKP_OUT.bois_fac_grade_id.alias('bois_fac_grade_id'),
	LKP_OUT.bois_loc_type.alias('bois_loc_type'),
	LKP_OUT.brlm_draw_pd_exp_date.alias('brlm_draw_pd_exp_date'),
	LKP_OUT.lien_lien_pos.alias('lien_lien_pos'),
	LKP_OUT.colm_stat_cd.alias('colm_stat_cd'),
	LKP_OUT.bkrm_bkrpt_ind.alias('bkrm_bkrpt_ind'),
	LKP_OUT.usbo_src_of_orig.alias('usbo_src_of_orig'),
	LKP_OUT.cpro_land_use.alias('cpro_land_use'),
	LKP_OUT.cpro_prim_dwell.alias('cpro_prim_dwell'),
	LKP_OUT.auth_sbl_ind.alias('auth_sbl_ind'),
	LKP_OUT.borm_spl_loan_cde.alias('borm_spl_loan_cde'),
	LKP_OUT.usbo_loan_orig_id.alias('usbo_loan_orig_id'),
	LKP_OUT.COLL_DESC_ECF.alias('COLL_DESC_ECF'),
	LKP_OUT.CREATE_ADDR_ECF.alias('CREATE_ADDR_ECF'),
	LKP_OUT.TBI_CATEGORY_ECF.alias('TBI_CATEGORY_ECF'),
	LKP_OUT.PPR_PROP_TYPE_ECF.alias('PPR_PROP_TYPE_ECF'),
	LKP_OUT.CRE_COLL_IND_ECF.alias('CRE_COLL_IND_ECF'),
	LKP_OUT.RE_COLL_IND_ECF.alias('RE_COLL_IND_ECF'),
	LKP_OUT.LONG_DESC_ECF.alias('LONG_DESC_ECF'),
	LKP_OUT.FRY14_PROP_SIZE_ECF.alias('FRY14_PROP_SIZE_ECF'),
	LKP_OUT.LIEN_POSITION_ECF.alias('LIEN_POSITION_ECF'),
	LKP_OUT.FDIC_IND_ECF.alias('FDIC_IND_ECF'),
	LKP_OUT.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD_INT_ECF'),
	LKP_OUT.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC_INT_ECF'),
	LKP_OUT.PROD_CD_ECF.alias('PROD_CD_ECF'),
	LKP_OUT.PROD_DESC_ECF.alias('PROD_DESC_ECF'),
	LKP_OUT.PROD_GRP_CD_ECF.alias('PROD_GRP_CD_ECF'),
	LKP_OUT.PROD_LINE_CD_ECF.alias('PROD_LINE_CD_ECF'),
	LKP_OUT.PROD_LINE_DESC_ECF.alias('PROD_LINE_DESC_ECF'),
	LKP_OUT.BUS_OR_IND_CD_ECF.alias('BUS_OR_IND_CD_ECF'),
	LKP_OUT.RCC_LINE_NBR_ECF.alias('RCC_LINE_NBR_ECF'),
	LKP_OUT.OWNR_OCCPD_IND_ECF.alias('OWNR_OCCPD_IND_ECF'),
	LKP_OUT.MOODY_CD_ECF.alias('MOODY_CD_ECF'),
	LKP_OUT.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD_ECF'),
	LKP_OUT.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC_ECF'),
	LKP_OUT.FRY14_PRPSE_CD_ECF.alias('FRY14_PRPSE_CD_ECF'),
	LKP_OUT.FRY14_PRPSE_CD_DESC_ECF.alias('FRY14_PRPSE_CD_DESC_ECF'),
	LKP_OUT.COLL_CD_ECF.alias('COLL_CD_ECF'),
	LKP_OUT.COLL_DESC_COLL_ECF.alias('COLL_DESC_COLL_ECF'),
	LKP_OUT.SUPERVISORY_LTV_PCT_ECF.alias('SUPERVISORY_LTV_PCT_ECF'),
	LKP_OUT.SUPERVISORY_LTV_CAT_DESC_ECF.alias('SUPERVISORY_LTV_CAT_DESC_ECF'),
	LKP_OUT.CREATE_ADDR_COLL_ECF.alias('CREATE_ADDR_COLL_ECF'),
	LKP_OUT.TBI_CATEGORY_COLL_ECF.alias('TBI_CATEGORY_COLL_ECF'),
	LKP_OUT.PPR_PROP_TYPE_COLL_ECF.alias('PPR_PROP_TYPE_COLL_ECF'),
	LKP_OUT.CRE_COLL_IND_COLL_ECF.alias('CRE_COLL_IND_COLL_ECF'),
	LKP_OUT.RE_COLL_IND_COLL_ECF.alias('RE_COLL_IND_COLL_ECF'),
	LKP_OUT.LONG_DESC_COLL_ECF.alias('LONG_DESC_COLL_ECF'),
	LKP_OUT.INT_PMT_FREQ_CD_PRIN_ECF.alias('INT_PMT_FREQ_CD_PRIN_ECF'),
	LKP_OUT.INT_PMT_FREQ_DESC_PRIN_ECF.alias('INT_PMT_FREQ_DESC_PRIN_ECF'),
	LKP_OUT.BKRPT_STAT_CODE_ECF.alias('BKRPT_STAT_CODE_ECF'),
	LKP_OUT.BKRPT_STAT_CODE_DESC_ECF.alias('BKRPT_STAT_CODE_DESC_ECF'),
	LKP_OUT.BKRPT_TYP_CODE_ECF.alias('BKRPT_TYP_CODE_ECF'),
	LKP_OUT.BKRPT_TYP_CODE_DESC_ECF.alias('BKRPT_TYP_CODE_DESC_ECF'),
	LKP_OUT.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	LKP_OUT.REG_BANK_SHR_EXP_AMT.alias('REG_BANK_SHR_EXP_AMT'),
	LKP_OUT.CF_CUR_LN_AMT.alias('CF_CUR_LN_AMT'),
	LKP_OUT.LN_ORIG_SYS_CODE_ECF_OUT1.alias('LN_ORIG_SYS_CODE_ECF_OUT1'),
	LKP_OUT.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CODE_DESC_ECF_OUT2'),
	LKP_OUT.bois_first_repay_dt.alias('bois_first_repay_dt'),
	LKP_OUT.brlm_repay_meth.alias('brlm_repay_meth'),
	LKP_OUT.borm_int_chng_freq.alias('borm_int_chng_freq'),
	LKP_OUT.bois_fix_int_term.alias('bois_fix_int_term'),
	LKP_OUT.Integer_borm_int_chng_freq.alias('Integer_borm_int_chng_freq'),
	LKP_OUT.Integer_bois_fix_int_term.alias('Integer_bois_fix_int_term'),
	LKP_OUT.auth_frb_flb_plg_iel.alias('auth_frb_flb_plg_iel'),
	LKP_OUT.auth_frb_flhb_plg.alias('auth_frb_flhb_plg'),
	LKP_OUT.bois_cap_rate_value.alias('bois_cap_rate_value'),
	LKP_OUT.bois_col_rt_value.alias('bois_col_rt_value'),
	LKP_OUT.INT_RATE_TYP.alias('INT_RATE_TYP'),
	LKP_OUT.rtmx_reset_freq.alias('rtmx_reset_freq'),
	LKP_OUT.usbo_conus_cr_counsl.alias('usbo_conus_cr_counsl'),
	LKP_OUT.bois_mast_loan_acct_lkp.alias('bois_mast_loan_acct_lkp'),
	LKP_OUT.borm_stat_cd.alias('borm_stat_cd'),
	LKP_OUT.bois_periodic_cap.alias('bois_periodic_cap'),
	LKP_OUT.colm_coll_sub_typ_Coll_cd.alias('colm_coll_sub_typ_Coll_cd'),
	LKP_OUT.RESTORED_TO_ACCRUAL_DT.alias('RESTORED_TO_ACCRUAL_DT'),
	LKP_OUT.bois_pre_pen_basis.alias('bois_pre_pen_basis'),
	LKP_OUT.borm_applic_issue_date.alias('borm_applic_issue_date'),
	LKP_OUT.aral_instn_nbr.alias('aral_instn_nbr'),
	LKP_OUT.aral_arrange_nbr.alias('aral_arrange_nbr'),
	LKP_OUT.arsm_instn_nbr.alias('arsm_instn_nbr'),
	LKP_OUT.arsm_bank_role.alias('arsm_bank_role'),
	LKP_OUT.arsm_arr_type.alias('arsm_arr_type'),
	LKP_OUT.arsm_shared_cr_flag.alias('arsm_shared_cr_flag'),
	LKP_OUT.arsm_share_per.alias('arsm_share_per'),
	LKP_OUT.arsm_total_limit_amt.alias('arsm_total_limit_amt'),
	LKP_OUT.arml_cnt_party_nbr.alias('arml_cnt_party_nbr'),
	LKP_OUT.arml_mem_bank_role.alias('arml_mem_bank_role'),
	LKP_OUT.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC'),
	LKP_OUT.cusm_cur_name.alias('cusm_cur_name'),
	LKP_OUT.borm_pdcc_val.alias('borm_pdcc_val'),
	LKP_OUT.bois_ex_flag_2.alias('bois_ex_flag_2'),
	LKP_OUT.FORECLS_IND.alias('FORECLS_IND'),
	LKP_OUT.acfr_fclty_nbr_borm.alias('acfr_fclty_nbr_borm'),
	LKP_OUT.acfr_fclty_nbr_bois.alias('acfr_fclty_nbr_bois'),
	LKP_OUT.lend_arrangement_cd.alias('lend_arrangement_cd'),
	LKP_OUT.lend_arrangement_desc.alias('lend_arrangement_desc'),
	LKP_OUT.cgca_sub_pgm_no.alias('cgca_sub_pgm_no'),
	LKP_OUT.LN_PROG_CD.alias('LN_PROG_CD'),
	LKP_OUT.LN_PROG_DESC.alias('LN_PROG_DESC'),
	LKP_OUT.acfr_acct_nbr.alias('acfr_acct_nbr'),
	LKP_OUT.SUM_BORM_APP_AMT.alias('SUM_BORM_APP_AMT'),
	LKP_OUT.cgca_govnt_pgm_no.alias('cgca_govnt_pgm_no'),
	LKP_OUT.cgca_sch_ref_prefix.alias('cgca_sch_ref_prefix'),
	LKP_OUT.cgca_ln_acct_nbr.alias('cgca_ln_acct_nbr'),
	LKP_OUT.acom_abs_unused_rate.alias('acom_abs_unused_rate'),
	LKP_OUT.csec_fee_nbr.alias('csec_fee_nbr'),
	LKP_OUT.csec_prd_fee_fst_chr_dt.alias('csec_prd_fee_fst_chr_dt'),
	LKP_OUT.bois_regw_reportable.alias('bois_regw_reportable'),
	LKP_OUT.arsm_arr_status.alias('arsm_arr_status'),
	LKP_OUT.TAX_EXEMPT_FLAG.alias('TAX_EXEMPT_FLAG'),
	LKP_OUT.uscu_affiliate_code.alias('uscu_affiliate_code'),
	LKP_OUT.int_rate_ze_variable_rate_cd.alias('int_rate_ze_variable_rate_cd'),
	LKP_OUT.int_rate_ze_col_rate.alias('int_rate_ze_col_rate'),
	LKP_OUT.int_rate_ze_cap_rate.alias('int_rate_ze_cap_rate'),
	LKP_OUT.int_rate_ze_reset_freq.alias('int_rate_ze_reset_freq'),
	LKP_OUT.arsm_am_agent_bnk.alias('arsm_am_agent_bnk'),
	LKP_OUT.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank'),
	LKP_OUT.arsm_bank_role_multiple_arr.alias('arsm_bank_role_multiple_arr'),
	LKP_OUT.arsm_shared_cr_flag_multiple_arr.alias('arsm_shared_cr_flag_multiple_arr'),
	LKP_OUT.arsm_arr_type_multiple_arr.alias('arsm_arr_type_multiple_arr'),
	LKP_OUT.arsm_shared_cr_flag_multiple_arr_lend.alias('arsm_shared_cr_flag_multiple_arr_lend'),
	LKP_OUT.arsm_bank_role_multiple_arr_lend.alias('arsm_bank_role_multiple_arr_lend'),
	LKP_OUT.arsm_arr_type_multiple_arr_lend.alias('arsm_arr_type_multiple_arr_lend'),
	(when(((Len(trim(LKP_OUT.arsm_arr_type_multiple_arr)) > lit(0)) &(LKP_OUT.arsm_arr_type_multiple_arr == lit('01')) , LKP_OUT.arsm_arr_type_multiple_arr ).otherwise(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role_multiple_arr) == lit(1)) ))).otherwise((LKP_OUT.arsm_bank_role_arry_typ_multiple_arr )).otherwise(LKP_OUT.arsm_arr_type_multiple_arr_lend))).alias('arsm_arr_type_lend_cd'),
	(when(((Len(trim(LKP_OUT.arsm_arr_type_multiple_arr)) > lit(0)) &(LKP_OUT.arsm_arr_type_multiple_arr == lit('01')) , LKP_OUT.arsm_arr_typ_shared_cr_flag_multiple_arr ).otherwise(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role_multiple_arr) == lit(1)) ))).otherwise((LKP_OUT.arsm_bank_role_shared_cr_flag_multiple_arr )).otherwise(LKP_OUT.arsm_shared_cr_flag_multiple_arr_lend_final))).alias('arsm_shared_cr_flag_lend_cd'),
	(when(((Len(trim(LKP_OUT.arsm_arr_type_multiple_arr)) > lit(0)) &(LKP_OUT.arsm_arr_type_multiple_arr == lit('01')) , LKP_OUT.arsm_arr_typ_bank_role_multiple_arr ).otherwise(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role_multiple_arr) == lit(1)) ))).otherwise((LKP_OUT.arsm_bank_role_multiple_arr )).otherwise(LKP_OUT.arsm_bank_role_multiple_arr_lend))).alias('arsm_bank_role_lend_cd'),
	LKP_OUT.usbo_loan_manag_group.alias('usbo_loan_manag_group'),
	LKP_OUT.borm_lonp_mul_bk_ledger_code_coalesce.alias('borm_lonp_mul_bk_ledger_code_coalesce'),
	LKP_OUT.borm_cas_stat_code.alias('borm_cas_stat_code'),
	LKP_OUT.borm_acct_typ.alias('borm_acct_typ'),
	LKP_OUT.borm_prod_cat.alias('borm_prod_cat'),
	(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(Count(lit('01  02  06  ') , LKP_OUT.arsm_bank_role_multiple_arr) == lit(1)) )).otherwise((LKP_OUT.arsm_bank_role_multiple_arr )).otherwise(LKP_OUT.arsm_bank_role_multiple_arr_lend)).alias('any_related_arrngmt_bank_role'),
	(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(Count(lit('01  02  06  ') , LKP_OUT.arsm_bank_role_multiple_arr) == lit(1)) )).otherwise((LKP_OUT.aral_arr_prod_code_bank_role_multiple_arr )).otherwise(LKP_OUT.aral_arr_prod_code_bank_role_lend)).alias('aral_arr_prod_code_check'),
	LKP_OUT.arsm_share_per_bank_role_multiple_arr.alias('arsm_share_per_bank_role_multiple_arr'),
	LKP_OUT.arsm_bank_role_multiple_arr_others.alias('arsm_bank_role_multiple_arr_others'),
	LKP_OUT.arsm_share_per_multiple_arr_others.alias('arsm_share_per_multiple_arr_others'),
	LKP_OUT.arsm_total_limit_amt_multiple_arr_others.alias('arsm_total_limit_amt_multiple_arr_others'),
	LKP_OUT.bois_pre_pen_method.alias('bois_pre_pen_method'),
	LKP_OUT.arml_mem_bank_role_multiple_arr_others.alias('arml_mem_bank_role_multiple_arr_others'),
	LKP_OUT.cusm_cur_name_multiple_arr_others.alias('cusm_cur_name_multiple_arr_others'),
	LKP_OUT.arml_cnt_party_nbr_multiple_arr_others.alias('arml_cnt_party_nbr_multiple_arr_others'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BORM)) > lit(0) ),(LKP_OUT.ACCT_ID_GRAND_PARENT_BORM )).otherwise(LKP_OUT.ACCT_ID_BORM)).alias('ACCT_ID_BORM'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BORM)) > lit(0) ),(LKP_OUT.facm_instn_nbr_GRAND_PARENT_BORM )).otherwise(LKP_OUT.facm_instn_nbr_BORM)).alias('facm_instn_nbr_BORM'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BORM)) > lit(0) ),(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BORM )).otherwise(LKP_OUT.facm_fclty_nbr_BORM)).alias('facm_fclty_nbr_BORM'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BORM)) > lit(0) ),(LKP_OUT.facm_legal_bind_GRAND_PARENT_BORM )).otherwise(LKP_OUT.facm_legal_bind_BORM)).alias('facm_legal_bind_BORM'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BOIS)) > lit(0) ),(LKP_OUT.ACCT_ID_GRAND_PARENT_BOIS )).otherwise(LKP_OUT.ACCT_ID_BOIS)).alias('ACCT_ID_BOIS'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BOIS)) > lit(0) ),(LKP_OUT.facm_instn_nbr_GRAND_PARENT_BOIS )).otherwise(LKP_OUT.facm_instn_nbr_BOIS)).alias('facm_instn_nbr_BOIS'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BOIS)) > lit(0) ),(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BOIS )).otherwise(LKP_OUT.facm_fclty_nbr_BOIS)).alias('facm_fclty_nbr_BOIS'),
	(when((Len(trim(LKP_OUT.facm_fclty_nbr_GRAND_PARENT_BOIS)) > lit(0) ),(LKP_OUT.facm_legal_bind__GRAND_PARENT_BOIS )).otherwise(LKP_OUT.facm_legal_bind_BOIS)).alias('facm_legal_bind_BOIS'),
	LKP_OUT.acfr_instn_nbr_BORM.alias('acfr_instn_nbr_BORM'),
	LKP_OUT.acfr_acct_nbr_BORM.alias('acfr_acct_nbr_BORM'),
	LKP_OUT.acfr_instn_nbr_BOIS.alias('acfr_instn_nbr_BOIS'),
	LKP_OUT.acfr_acct_nbr_BOIS.alias('acfr_acct_nbr_BOIS'),
	LKP_OUT.acfr_fclty_nbr_join_borm.alias('acfr_fclty_nbr_join_borm'),
	LKP_OUT.acfr_fclty_nbr_join_bois.alias('acfr_fclty_nbr_join_bois'),
	LKP_OUT.coalese_bois_mast_loan_acct_ln_acct_nbr.alias('coalese_bois_mast_loan_acct_ln_acct_nbr'),
	LKP_OUT.usbo_loan_orig_id_ln_orig.alias('usbo_loan_orig_id_ln_orig'),
	LKP_OUT.ACCTGRPCD.alias('ACCTGRPCD'),
	LKP_OUT.bois_frb_plg_inel.alias('bois_frb_plg_inel'),
	LKP_OUT.bois_frb_fhlb_plg.alias('bois_frb_fhlb_plg'),
	LKP_OUT.bkrm_notification_dt.alias('bkrm_notification_dt'),
	LKP_OUT.bois_maturity_date.alias('bois_maturity_date'),
	LKP_OUT.usbo_collect_respons.alias('usbo_collect_respons'),
	LKP_OUT.usbo_purchased_code.alias('usbo_purchased_code'),
	LKP_OUT.usbo_purch_dt.alias('usbo_purch_dt'),
	LKP_OUT.bois_pred_loan_no.alias('bois_pred_loan_no'),
	(when((LKP_OUT.usbo_loan_orig_id == None , lit('abcd') , when((trim(substring(LKP_OUT.usbo_loan_orig_id , lit(4) ).otherwise(lit(1))) == lit('-') ,(trim(substring(LKP_OUT.usbo_loan_orig_id , lit(1) , lit(3))) + trim(substring(LKP_OUT.usbo_loan_orig_id , lit(5) , lit(7)))) ),(trim(substring(LKP_OUT.usbo_loan_orig_id ))).otherwise((lit(1) )).otherwise(lit(10)))))).alias('usbo_loan_orig_id_lkp_join'),
	LKP_OUT.arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT.arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT.arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt'),
	LKP_OUT.borm_hfis_flag.alias('borm_hfis_flag'),
	LKP_OUT.brlm_bor_base_amt.alias('brlm_bor_base_amt'),
	LKP_OUT.brlm_effect_lim.alias('brlm_effect_lim'),
	LKP_OUT.bkrm_filed_dt.alias('bkrm_filed_dt'),
	LKP_OUT.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	LKP_OUT.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	LKP_OUT.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	LKP_OUT.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	LKP_OUT.arsm_bank_role_abn_parent.alias('arsm_bank_role_abn_parent'),
	LKP_OUT.arsm_arr_type_abn_parent.alias('arsm_arr_type_abn_parent'),
	LKP_OUT.arsm_arr_status_abn_parent.alias('arsm_arr_status_abn_parent'),
	LKP_OUT.arsm_am_agent_bnk_abn_parent.alias('arsm_am_agent_bnk_abn_parent'),
	LKP_OUT.arsm_bank_role_abn_facm_parent.alias('arsm_bank_role_abn_facm_parent'),
	LKP_OUT.arsm_arr_type_abn_facm_parent.alias('arsm_arr_type_abn_facm_parent'),
	LKP_OUT.arsm_arr_status_abn_facm_parent.alias('arsm_arr_status_abn_facm_parent'),
	LKP_OUT.arsm_am_agent_bnk_abn_facm_parent.alias('arsm_am_agent_bnk_abn_facm_parent'),
	LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent.alias('ECF_SRC_BANK_NBR_DESC_facm_parent'),
	LKP_OUT.cusm_cur_name_agnt_bank_facm_parent.alias('cusm_cur_name_agnt_bank_facm_parent'),
	LKP_OUT.arsm_bank_role_abn_facm.alias('arsm_bank_role_abn_facm'),
	LKP_OUT.arsm_arr_type_abn_facm.alias('arsm_arr_type_abn_facm'),
	LKP_OUT.arsm_arr_status_abn_facm.alias('arsm_arr_status_abn_facm'),
	LKP_OUT.arsm_am_agent_bnk_abn_facm.alias('arsm_am_agent_bnk_abn_facm'),
	LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm.alias('ECF_SRC_BANK_NBR_DESC_facm'),
	LKP_OUT.cusm_cur_name_agnt_bank_facm.alias('cusm_cur_name_agnt_bank_facm')
)

# Processing node LKP_OUT, type MERGE
# COLUMN COUNT: 239
# Original node name Lkp_LEND, link LKP_OUT

LKP_OUT = Xfm_lend_out.join(lengthD_ARRNG, [lengthD_ARRNG.arsm_bank_role == Xfm_lend_out.arsm_bank_role_lend_cd, lengthD_ARRNG.arsm_arr_type == Xfm_lend_out.arsm_arr_type_lend_cd, lengthD_ARRNG.arsm_shared_cr_flag == Xfm_lend_out.arsm_shared_cr_flag_lend_cd], 'LEFT_OUTER').join(BORM_CONV4, [BORM_CONV4.facm_fclty_nbr_BORM_LEGAL == Xfm_lend_out.facm_fclty_nbr_BORM, BORM_CONV4.facm_instn_nbr_BORM_LEGAL == Xfm_lend_out.facm_instn_nbr_BORM], 'LEFT_OUTER').join(BOIS_CONV5, [BOIS_CONV5.facm_instn_nbr_BOIS_LEGAL == Xfm_lend_out.facm_instn_nbr_BOIS, BOIS_CONV5.facm_fclty_nbr_BOIS_LEGAL == Xfm_lend_out.facm_fclty_nbr_BOIS], 'LEFT_OUTER').join(BOIS_MAST_LN_ACCT, [BOIS_MAST_LN_ACCT.borm_ln_acct_nbr_BOIS_CUPA == Xfm_lend_out.coalese_bois_mast_loan_acct_ln_acct_nbr], 'LEFT_OUTER').join(BANCS_BDGT_SUM, [BANCS_BDGT_SUM.bgsm_instn_nbr == Xfm_lend_out.borm_instn_nbr, BANCS_BDGT_SUM.bgsm_ln_acct_nbr == Xfm_lend_out.borm_ln_acct_nbr], 'LEFT_OUTER').join(BANCS_INT_RATE, [BANCS_INT_RATE.int_rate_ze_instn_nbr == Xfm_lend_out.borm_instn_nbr, BANCS_INT_RATE.int_rate_ze_ln_acct_nbr == Xfm_lend_out.borm_ln_acct_nbr], 'LEFT_OUTER').join(RENEWAL_PREV, [RENEWAL_PREV.BORM_LN_ACCT_NBR == Xfm_lend_out.borm_ln_acct_nbr], 'LEFT_OUTER').select(
	Xfm_lend_out.ACCT_ID.alias('ACCT_ID'),
	Xfm_lend_out.AS_OF_DT.alias('AS_OF_DT'),
	Xfm_lend_out.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	Xfm_lend_out.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	Xfm_lend_out.NATL_KEY.alias('NATL_KEY'),
	Xfm_lend_out.FDIC_CD.alias('FDIC_CD'),
	Xfm_lend_out.TDR_IND.alias('TDR_IND'),
	Xfm_lend_out.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	Xfm_lend_out.CUPA_ID.alias('CUPA_ID'),
	Xfm_lend_out.ACCT_ID_CUPA_CHECK.alias('ACCT_ID_CUPA_CHECK'),
	Xfm_lend_out.BKRPT_IND.alias('BKRPT_IND'),
	Xfm_lend_out.ORIG_LN_AMT_PREV.alias('ORIG_LN_AMT_PREV'),
	Xfm_lend_out.BKRPT_IND_PREV.alias('BKRPT_IND_PREV'),
	Xfm_lend_out.BKRPT_DT_PREV.alias('BKRPT_DT_PREV'),
	Xfm_lend_out.LIEN_PSTN.alias('LIEN_PSTN'),
	Xfm_lend_out.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	Xfm_lend_out.borm_instn_nbr.alias('borm_instn_nbr'),
	Xfm_lend_out.APPL_CD.alias('APPL_CD'),
	Xfm_lend_out.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	Xfm_lend_out.borm_apprv_date.alias('borm_apprv_date'),
	Xfm_lend_out.bois_mast_loan_acct.alias('bois_mast_loan_acct'),
	Xfm_lend_out.bois_child_loan_type.alias('bois_child_loan_type'),
	Xfm_lend_out.bois_ln_acct_nbr.alias('bois_ln_acct_nbr'),
	Xfm_lend_out.borm_cost_center_2_4.alias('borm_cost_center_2_4'),
	Xfm_lend_out.borm_adv_val.alias('borm_adv_val'),
	Xfm_lend_out.borm_int_repay_freq.alias('borm_int_repay_freq'),
	Xfm_lend_out.borm_repay_freq.alias('borm_repay_freq'),
	Xfm_lend_out.brlm_appro_id.alias('brlm_appro_id'),
	Xfm_lend_out.bois_non_accr_stat.alias('bois_non_accr_stat'),
	Xfm_lend_out.bois_non_accr_type.alias('bois_non_accr_type'),
	Xfm_lend_out.bois_last_npa_dt.alias('bois_last_npa_dt'),
	Xfm_lend_out.borm_app_amt.alias('borm_app_amt'),
	Xfm_lend_out.bois_promo_nbr.alias('bois_promo_nbr'),
	Xfm_lend_out.borm_prpse_cd_a.alias('borm_prpse_cd_a'),
	Xfm_lend_out.bois_tdr_stat.alias('bois_tdr_stat'),
	Xfm_lend_out.bois_tdr_eff_dt.alias('bois_tdr_eff_dt'),
	Xfm_lend_out.FA_LOB_ID.alias('FA_LOB_ID'),
	Xfm_lend_out.FA_LOB_EFF_DT.alias('FA_LOB_EFF_DT'),
	Xfm_lend_out.colm_coll_sub_typ.alias('colm_coll_sub_typ'),
	Xfm_lend_out.bkrm_stat_cd.alias('bkrm_stat_cd'),
	Xfm_lend_out.bois_fac_grade_id.alias('bois_fac_grade_id'),
	Xfm_lend_out.bois_loc_type.alias('bois_loc_type'),
	Xfm_lend_out.brlm_draw_pd_exp_date.alias('brlm_draw_pd_exp_date'),
	Xfm_lend_out.lien_lien_pos.alias('lien_lien_pos'),
	Xfm_lend_out.colm_stat_cd.alias('colm_stat_cd'),
	Xfm_lend_out.bkrm_bkrpt_ind.alias('bkrm_bkrpt_ind'),
	Xfm_lend_out.usbo_src_of_orig.alias('usbo_src_of_orig'),
	Xfm_lend_out.cpro_land_use.alias('cpro_land_use'),
	Xfm_lend_out.cpro_prim_dwell.alias('cpro_prim_dwell'),
	Xfm_lend_out.auth_sbl_ind.alias('auth_sbl_ind'),
	Xfm_lend_out.borm_spl_loan_cde.alias('borm_spl_loan_cde'),
	Xfm_lend_out.usbo_loan_orig_id.alias('usbo_loan_orig_id'),
	Xfm_lend_out.COLL_DESC_ECF.alias('COLL_DESC_ECF'),
	Xfm_lend_out.CREATE_ADDR_ECF.alias('CREATE_ADDR_ECF'),
	Xfm_lend_out.TBI_CATEGORY_ECF.alias('TBI_CATEGORY_ECF'),
	Xfm_lend_out.PPR_PROP_TYPE_ECF.alias('PPR_PROP_TYPE_ECF'),
	Xfm_lend_out.CRE_COLL_IND_ECF.alias('CRE_COLL_IND_ECF'),
	Xfm_lend_out.RE_COLL_IND_ECF.alias('RE_COLL_IND_ECF'),
	Xfm_lend_out.LONG_DESC_ECF.alias('LONG_DESC_ECF'),
	Xfm_lend_out.FRY14_PROP_SIZE_ECF.alias('FRY14_PROP_SIZE_ECF'),
	Xfm_lend_out.LIEN_POSITION_ECF.alias('LIEN_POSITION_ECF'),
	Xfm_lend_out.FDIC_IND_ECF.alias('FDIC_IND_ECF'),
	Xfm_lend_out.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD_INT_ECF'),
	Xfm_lend_out.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC_INT_ECF'),
	Xfm_lend_out.PROD_CD_ECF.alias('PROD_CD_ECF'),
	Xfm_lend_out.PROD_DESC_ECF.alias('PROD_DESC_ECF'),
	Xfm_lend_out.PROD_GRP_CD_ECF.alias('PROD_GRP_CD_ECF'),
	Xfm_lend_out.PROD_LINE_CD_ECF.alias('PROD_LINE_CD_ECF'),
	Xfm_lend_out.PROD_LINE_DESC_ECF.alias('PROD_LINE_DESC_ECF'),
	Xfm_lend_out.BUS_OR_IND_CD_ECF.alias('BUS_OR_IND_CD_ECF'),
	Xfm_lend_out.RCC_LINE_NBR_ECF.alias('RCC_LINE_NBR_ECF'),
	Xfm_lend_out.OWNR_OCCPD_IND_ECF.alias('OWNR_OCCPD_IND_ECF'),
	Xfm_lend_out.MOODY_CD_ECF.alias('MOODY_CD_ECF'),
	Xfm_lend_out.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD_ECF'),
	Xfm_lend_out.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC_ECF'),
	Xfm_lend_out.FRY14_PRPSE_CD_ECF.alias('FRY14_PRPSE_CD_ECF'),
	Xfm_lend_out.FRY14_PRPSE_CD_DESC_ECF.alias('FRY14_PRPSE_CD_DESC_ECF'),
	Xfm_lend_out.COLL_CD_ECF.alias('COLL_CD_ECF'),
	Xfm_lend_out.COLL_DESC_COLL_ECF.alias('COLL_DESC_COLL_ECF'),
	Xfm_lend_out.SUPERVISORY_LTV_PCT_ECF.alias('SUPERVISORY_LTV_PCT_ECF'),
	Xfm_lend_out.SUPERVISORY_LTV_CAT_DESC_ECF.alias('SUPERVISORY_LTV_CAT_DESC_ECF'),
	Xfm_lend_out.CREATE_ADDR_COLL_ECF.alias('CREATE_ADDR_COLL_ECF'),
	Xfm_lend_out.TBI_CATEGORY_COLL_ECF.alias('TBI_CATEGORY_COLL_ECF'),
	Xfm_lend_out.PPR_PROP_TYPE_COLL_ECF.alias('PPR_PROP_TYPE_COLL_ECF'),
	Xfm_lend_out.CRE_COLL_IND_COLL_ECF.alias('CRE_COLL_IND_COLL_ECF'),
	Xfm_lend_out.RE_COLL_IND_COLL_ECF.alias('RE_COLL_IND_COLL_ECF'),
	Xfm_lend_out.LONG_DESC_COLL_ECF.alias('LONG_DESC_COLL_ECF'),
	Xfm_lend_out.INT_PMT_FREQ_CD_PRIN_ECF.alias('INT_PMT_FREQ_CD_PRIN_ECF'),
	Xfm_lend_out.INT_PMT_FREQ_DESC_PRIN_ECF.alias('INT_PMT_FREQ_DESC_PRIN_ECF'),
	Xfm_lend_out.BKRPT_STAT_CODE_ECF.alias('BKRPT_STAT_CODE_ECF'),
	Xfm_lend_out.BKRPT_STAT_CODE_DESC_ECF.alias('BKRPT_STAT_CODE_DESC_ECF'),
	Xfm_lend_out.BKRPT_TYP_CODE_ECF.alias('BKRPT_TYP_CODE_ECF'),
	Xfm_lend_out.BKRPT_TYP_CODE_DESC_ECF.alias('BKRPT_TYP_CODE_DESC_ECF'),
	Xfm_lend_out.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	Xfm_lend_out.REG_BANK_SHR_EXP_AMT.alias('REG_BANK_SHR_EXP_AMT'),
	Xfm_lend_out.CF_CUR_LN_AMT.alias('CF_CUR_LN_AMT'),
	Xfm_lend_out.LN_ORIG_SYS_CODE_ECF_OUT1.alias('LN_ORIG_SYS_CODE_ECF_OUT1'),
	Xfm_lend_out.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CODE_DESC_ECF_OUT2'),
	Xfm_lend_out.bois_first_repay_dt.alias('bois_first_repay_dt'),
	Xfm_lend_out.brlm_repay_meth.alias('brlm_repay_meth'),
	Xfm_lend_out.borm_int_chng_freq.alias('borm_int_chng_freq'),
	Xfm_lend_out.bois_fix_int_term.alias('bois_fix_int_term'),
	Xfm_lend_out.Integer_borm_int_chng_freq.alias('Integer_borm_int_chng_freq'),
	Xfm_lend_out.Integer_bois_fix_int_term.alias('Integer_bois_fix_int_term'),
	Xfm_lend_out.auth_frb_flb_plg_iel.alias('auth_frb_flb_plg_iel'),
	Xfm_lend_out.auth_frb_flhb_plg.alias('auth_frb_flhb_plg'),
	Xfm_lend_out.bois_cap_rate_value.alias('bois_cap_rate_value'),
	Xfm_lend_out.bois_col_rt_value.alias('bois_col_rt_value'),
	Xfm_lend_out.INT_RATE_TYP.alias('INT_RATE_TYP'),
	Xfm_lend_out.rtmx_reset_freq.alias('rtmx_reset_freq'),
	Xfm_lend_out.usbo_conus_cr_counsl.alias('usbo_conus_cr_counsl'),
	Xfm_lend_out.bois_mast_loan_acct_lkp.alias('bois_mast_loan_acct_lkp'),
	Xfm_lend_out.borm_stat_cd.alias('borm_stat_cd'),
	Xfm_lend_out.bois_periodic_cap.alias('bois_periodic_cap'),
	Xfm_lend_out.colm_coll_sub_typ_Coll_cd.alias('colm_coll_sub_typ_Coll_cd'),
	Xfm_lend_out.RESTORED_TO_ACCRUAL_DT.alias('RESTORED_TO_ACCRUAL_DT'),
	Xfm_lend_out.bois_pre_pen_basis.alias('bois_pre_pen_basis'),
	Xfm_lend_out.borm_applic_issue_date.alias('borm_applic_issue_date'),
	Xfm_lend_out.aral_instn_nbr.alias('aral_instn_nbr'),
	Xfm_lend_out.aral_arrange_nbr.alias('aral_arrange_nbr'),
	Xfm_lend_out.arsm_instn_nbr.alias('arsm_instn_nbr'),
	Xfm_lend_out.arsm_bank_role.alias('arsm_bank_role'),
	Xfm_lend_out.arsm_arr_type.alias('arsm_arr_type'),
	Xfm_lend_out.arsm_shared_cr_flag.alias('arsm_shared_cr_flag'),
	Xfm_lend_out.arsm_share_per.alias('arsm_share_per'),
	Xfm_lend_out.arsm_total_limit_amt.alias('arsm_total_limit_amt'),
	Xfm_lend_out.arml_cnt_party_nbr.alias('arml_cnt_party_nbr'),
	Xfm_lend_out.arml_mem_bank_role.alias('arml_mem_bank_role'),
	Xfm_lend_out.ECF_SRC_BANK_NBR_DESC.alias('ECF_SRC_BANK_NBR_DESC'),
	Xfm_lend_out.cusm_cur_name.alias('cusm_cur_name'),
	Xfm_lend_out.borm_pdcc_val.alias('borm_pdcc_val'),
	Xfm_lend_out.bois_ex_flag_2.alias('bois_ex_flag_2'),
	Xfm_lend_out.FORECLS_IND.alias('FORECLS_IND'),
	Xfm_lend_out.acfr_fclty_nbr_borm.alias('acfr_fclty_nbr_borm'),
	Xfm_lend_out.acfr_fclty_nbr_bois.alias('acfr_fclty_nbr_bois'),
	Xfm_lend_out.lend_arrangement_cd.alias('lend_arrangement_cd'),
	Xfm_lend_out.lend_arrangement_desc.alias('lend_arrangement_desc'),
	Xfm_lend_out.cgca_sub_pgm_no.alias('cgca_sub_pgm_no'),
	Xfm_lend_out.LN_PROG_CD.alias('LN_PROG_CD'),
	Xfm_lend_out.LN_PROG_DESC.alias('LN_PROG_DESC'),
	Xfm_lend_out.acfr_acct_nbr.alias('acfr_acct_nbr'),
	Xfm_lend_out.SUM_BORM_APP_AMT.alias('SUM_BORM_APP_AMT'),
	Xfm_lend_out.cgca_govnt_pgm_no.alias('cgca_govnt_pgm_no'),
	Xfm_lend_out.cgca_sch_ref_prefix.alias('cgca_sch_ref_prefix'),
	Xfm_lend_out.cgca_ln_acct_nbr.alias('cgca_ln_acct_nbr'),
	Xfm_lend_out.acom_abs_unused_rate.alias('acom_abs_unused_rate'),
	Xfm_lend_out.csec_fee_nbr.alias('csec_fee_nbr'),
	Xfm_lend_out.csec_prd_fee_fst_chr_dt.alias('csec_prd_fee_fst_chr_dt'),
	Xfm_lend_out.bois_regw_reportable.alias('bois_regw_reportable'),
	Xfm_lend_out.arsm_arr_status.alias('arsm_arr_status'),
	Xfm_lend_out.TAX_EXEMPT_FLAG.alias('TAX_EXEMPT_FLAG'),
	Xfm_lend_out.uscu_affiliate_code.alias('uscu_affiliate_code'),
	Xfm_lend_out.int_rate_ze_variable_rate_cd.alias('int_rate_ze_variable_rate_cd'),
	Xfm_lend_out.int_rate_ze_col_rate.alias('int_rate_ze_col_rate'),
	Xfm_lend_out.int_rate_ze_cap_rate.alias('int_rate_ze_cap_rate'),
	Xfm_lend_out.int_rate_ze_reset_freq.alias('int_rate_ze_reset_freq'),
	Xfm_lend_out.arsm_am_agent_bnk.alias('arsm_am_agent_bnk'),
	Xfm_lend_out.cusm_cur_name_agnt_bank.alias('cusm_cur_name_agnt_bank'),
	Xfm_lend_out.arsm_bank_role_multiple_arr.alias('arsm_bank_role_multiple_arr'),
	Xfm_lend_out.arsm_shared_cr_flag_multiple_arr.alias('arsm_shared_cr_flag_multiple_arr'),
	Xfm_lend_out.arsm_arr_type_multiple_arr.alias('arsm_arr_type_multiple_arr'),
	lengthD_ARRNG.lend_arrangement_cd.alias('lend_arrangement_cd_multiple_arr'),
	lengthD_ARRNG.lend_arrangement_desc.alias('lend_arrangement_desc_multiple_arr'),
	Xfm_lend_out.usbo_loan_manag_group.alias('usbo_loan_manag_group'),
	Xfm_lend_out.borm_lonp_mul_bk_ledger_code_coalesce.alias('borm_lonp_mul_bk_ledger_code_coalesce'),
	Xfm_lend_out.borm_cas_stat_code.alias('borm_cas_stat_code'),
	Xfm_lend_out.borm_acct_typ.alias('borm_acct_typ'),
	Xfm_lend_out.borm_prod_cat.alias('borm_prod_cat'),
	Xfm_lend_out.any_related_arrngmt_bank_role.alias('any_related_arrngmt_bank_role'),
	Xfm_lend_out.aral_arr_prod_code_check.alias('aral_arr_prod_code_check'),
	Xfm_lend_out.arsm_share_per_bank_role_multiple_arr.alias('arsm_share_per_bank_role_multiple_arr'),
	Xfm_lend_out.arsm_bank_role_multiple_arr_others.alias('arsm_bank_role_multiple_arr_others'),
	Xfm_lend_out.arsm_share_per_multiple_arr_others.alias('arsm_share_per_multiple_arr_others'),
	Xfm_lend_out.arsm_total_limit_amt_multiple_arr_others.alias('arsm_total_limit_amt_multiple_arr_others'),
	Xfm_lend_out.bois_pre_pen_method.alias('bois_pre_pen_method'),
	Xfm_lend_out.arml_mem_bank_role_multiple_arr_others.alias('arml_mem_bank_role_multiple_arr_others'),
	Xfm_lend_out.cusm_cur_name_multiple_arr_others.alias('cusm_cur_name_multiple_arr_others'),
	Xfm_lend_out.arml_cnt_party_nbr_multiple_arr_others.alias('arml_cnt_party_nbr_multiple_arr_others'),
	BORM.LEGAL_BIND_DT_BORM.alias('LEGAL_BIND_DT_BORM'),
	BOIS.LEGAL_BIND_DT_BOIS.alias('LEGAL_BIND_DT_BOIS'),
	Xfm_lend_out.ACCT_ID_BORM.alias('ACCT_ID_BORM'),
	Xfm_lend_out.facm_instn_nbr_BORM.alias('facm_instn_nbr_BORM'),
	Xfm_lend_out.facm_fclty_nbr_BORM.alias('facm_fclty_nbr_BORM'),
	Xfm_lend_out.facm_legal_bind_BORM.alias('facm_legal_bind_BORM'),
	Xfm_lend_out.ACCT_ID_BOIS.alias('ACCT_ID_BOIS'),
	Xfm_lend_out.facm_instn_nbr_BOIS.alias('facm_instn_nbr_BOIS'),
	Xfm_lend_out.facm_fclty_nbr_BOIS.alias('facm_fclty_nbr_BOIS'),
	Xfm_lend_out.facm_legal_bind_BOIS.alias('facm_legal_bind_BOIS'),
	Xfm_lend_out.acfr_instn_nbr_BORM.alias('acfr_instn_nbr_BORM'),
	Xfm_lend_out.acfr_acct_nbr_BORM.alias('acfr_acct_nbr_BORM'),
	Xfm_lend_out.acfr_instn_nbr_BOIS.alias('acfr_instn_nbr_BOIS'),
	Xfm_lend_out.acfr_acct_nbr_BOIS.alias('acfr_acct_nbr_BOIS'),
	Xfm_lend_out.acfr_fclty_nbr_join_borm.alias('acfr_fclty_nbr_join_borm'),
	Xfm_lend_out.acfr_fclty_nbr_join_bois.alias('acfr_fclty_nbr_join_bois'),
	Xfm_lend_out.coalese_bois_mast_loan_acct_ln_acct_nbr.alias('bois_mast_loan_acct_parent'),
	BOIS_MAST_LN_ACCT.ACCT_ID_BOIS_CUPA.alias('ACCT_ID_BOIS_CUPA'),
	Xfm_lend_out.usbo_loan_orig_id_ln_orig.alias('usbo_loan_orig_id_ln_orig'),
	Xfm_lend_out.ACCTGRPCD.alias('ACCTGRPCD'),
	Xfm_lend_out.bois_frb_plg_inel.alias('bois_frb_plg_inel'),
	Xfm_lend_out.bois_frb_fhlb_plg.alias('bois_frb_fhlb_plg'),
	Xfm_lend_out.bkrm_notification_dt.alias('bkrm_notification_dt'),
	BANCS_BDGT_SUM.bgsm_prim_vendor_name.alias('bgsm_prim_vendor_name'),
	BANCS_INT_RATE.int_rate_ze_cap_max_rate.alias('int_rate_ze_cap_max_rate'),
	BANCS_INT_RATE.int_rate_ze_col_min_rate.alias('int_rate_ze_col_min_rate'),
	RENEWAL_PREV.BOIS_MAT_DT.alias('BOIS_MAT_DT_PREV'),
	RENEWAL_PREV.AS_OF_DT.alias('AS_OF_DT_PREV'),
	RENEWAL_PREV.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND_PREV'),
	Xfm_lend_out.bois_maturity_date.alias('bois_maturity_date'),
	Xfm_lend_out.usbo_collect_respons.alias('usbo_collect_respons'),
	Xfm_lend_out.usbo_purchased_code.alias('usbo_purchased_code'),
	Xfm_lend_out.usbo_purch_dt.alias('usbo_purch_dt'),
	Xfm_lend_out.bois_pred_loan_no.alias('bois_pred_loan_no'),
	Xfm_lend_out.arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt'),
	Xfm_lend_out.arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_share_per_multiple_arr_others_part_purch_tot_cmmt_amt'),
	Xfm_lend_out.arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt.alias('arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt'),
	Xfm_lend_out.borm_hfis_flag.alias('borm_hfis_flag'),
	Xfm_lend_out.brlm_bor_base_amt.alias('brlm_bor_base_amt'),
	Xfm_lend_out.brlm_effect_lim.alias('brlm_effect_lim'),
	Xfm_lend_out.bkrm_filed_dt.alias('bkrm_filed_dt'),
	Xfm_lend_out.arsm_bank_role_abn.alias('arsm_bank_role_abn'),
	Xfm_lend_out.arsm_arr_type_abn.alias('arsm_arr_type_abn'),
	Xfm_lend_out.arsm_arr_status_abn.alias('arsm_arr_status_abn'),
	Xfm_lend_out.arsm_am_agent_bnk_abn.alias('arsm_am_agent_bnk_abn'),
	Xfm_lend_out.arsm_bank_role_abn_parent.alias('arsm_bank_role_abn_parent'),
	Xfm_lend_out.arsm_arr_type_abn_parent.alias('arsm_arr_type_abn_parent'),
	Xfm_lend_out.arsm_arr_status_abn_parent.alias('arsm_arr_status_abn_parent'),
	Xfm_lend_out.arsm_am_agent_bnk_abn_parent.alias('arsm_am_agent_bnk_abn_parent'),
	Xfm_lend_out.arsm_bank_role_abn_facm_parent.alias('arsm_bank_role_abn_facm_parent'),
	Xfm_lend_out.arsm_arr_type_abn_facm_parent.alias('arsm_arr_type_abn_facm_parent'),
	Xfm_lend_out.arsm_arr_status_abn_facm_parent.alias('arsm_arr_status_abn_facm_parent'),
	Xfm_lend_out.arsm_am_agent_bnk_abn_facm_parent.alias('arsm_am_agent_bnk_abn_facm_parent'),
	Xfm_lend_out.ECF_SRC_BANK_NBR_DESC_facm_parent.alias('ECF_SRC_BANK_NBR_DESC_facm_parent'),
	Xfm_lend_out.cusm_cur_name_agnt_bank_facm_parent.alias('cusm_cur_name_agnt_bank_facm_parent'),
	Xfm_lend_out.arsm_bank_role_abn_facm.alias('arsm_bank_role_abn_facm'),
	Xfm_lend_out.arsm_arr_type_abn_facm.alias('arsm_arr_type_abn_facm'),
	Xfm_lend_out.arsm_arr_status_abn_facm.alias('arsm_arr_status_abn_facm'),
	Xfm_lend_out.arsm_am_agent_bnk_abn_facm.alias('arsm_am_agent_bnk_abn_facm'),
	Xfm_lend_out.ECF_SRC_BANK_NBR_DESC_facm.alias('ECF_SRC_BANK_NBR_DESC_facm'),
	Xfm_lend_out.cusm_cur_name_agnt_bank_facm.alias('cusm_cur_name_agnt_bank_facm')
)

# Processing node REJECTS, type TRANSFORMATION
# COLUMN COUNT: 9
# Original node name Xfm, link REJECTS

REJECTS = LKP_OUT
REJECTS = REJECTS.withColumn("OrigLnAmt", when((LKP_OUT.ORIG_LN_AMT_PREV IS NOT None , LKP_OUT.ORIG_LN_AMT_PREV ).otherwise(IFF((LKP_OUT.borm_app_amt == None) |(TRY_LKP_OUT.borm_app_amt .cast(NUMERIC) IS NOT None == lit(0)) )).otherwise((lit(0) )).otherwise(trim(LKP_OUT.borm_app_amt))))
	
REJECTS = REJECTS.withColumn("BkrptDt", when((LKP_OUT.SRC_ACCT_NBR == None , when((LKP_OUT.BKRPT_IND == lit('Y') ).otherwise(LKP_OUT.AS_OF_DT ).otherwise(None) ).otherwise(when((LKP_OUT.BKRPT_IND_PREV == LKP_OUT.BKRPT_IND ).otherwise(LKP_OUT.BKRPT_DT_PREV ).otherwise(IFF(LKP_OUT.BKRPT_IND == lit('Y') )).otherwise((LKP_OUT.AS_OF_DT ))).otherwise((IFF(LKP_OUT.BKRPT_IND == lit('N') ))).otherwise((None )).otherwise(None)))))
	
REJECTS = REJECTS.withColumn("CollCd", when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when((Len(LKP_OUT.colm_coll_sub_typ_Coll_cd) > lit(0) )).otherwise((LKP_OUT.colm_coll_sub_typ_Coll_cd ))).otherwise((lit('0001')) )).otherwise(None))
	
REJECTS = REJECTS.withColumn("IntroRateIndEndDt", DateOffsetByComponents(LKP_OUT.borm_applic_issue_date , lit(0) , LKP_OUT.Integer_bois_fix_int_term , lit(0)))
	
REJECTS = REJECTS.withColumn("AgntBankNameCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(IFF(LKP_OUT.arsm_bank_role == lit('03') )).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
REJECTS = REJECTS.withColumn("AgntBankNameCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
REJECTS = REJECTS.withColumn("AgntBankNbrCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
REJECTS = REJECTS.withColumn("AgntBankNbrCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
REJECTS = REJECTS.withColumn("Stgvarsbalnnbr", LKP_OUT.cgca_sch_ref_prefix + LKP_OUT.cgca_govnt_pgm_no)
	
REJECTS = REJECTS.withColumn("StgLnProgCd", LKP_OUT.borm_acct_typ + LKP_OUT.borm_prod_cat)
	
REJECTS = REJECTS.withColumn("BoisChildNull", when((LKP_OUT.bois_child_loan_type == None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BORM)) > lit(0)) &(LKP_OUT.facm_legal_bind_BORM == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BORM ).otherwise(IFF((LKP_OUT.facm_legal_bind_BORM != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BORM)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BORM )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BORM ))).otherwise((LKP_OUT.ACCT_ID) )).otherwise(LKP_OUT.ACCT_ID))))
	
REJECTS = REJECTS.withColumn("BoisChildNotNull", when((LKP_OUT.bois_child_loan_type IS NOT None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BOIS)) > lit(0)) &(LKP_OUT.facm_legal_bind_BOIS == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BOIS ).otherwise(IFF((LKP_OUT.facm_legal_bind_BOIS != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BOIS)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BOIS )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BOIS ))).otherwise((LKP_OUT.ACCT_ID_BOIS_CUPA) )).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA))))
	
REJECTS = REJECTS.withColumn("SvPrevMonth", substring(LKP_OUT.AS_OF_DT_PREV , lit(6) , lit(2)))
	
REJECTS = REJECTS.withColumn("SvCurrMonth", substring(LKP_OUT.AS_OF_DT , lit(6) , lit(2)))
	
REJECTS = REJECTS.withColumn("SvDaysDiff", DATEDIFF(LKP_OUT.bois_maturity_date , LKP_OUT.BOIS_MAT_DT_PREV))
	
REJECTS = REJECTS.withColumn("SvCase2", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvCase3", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvAgentBankName", when(((LKP_OUT.arsm_am_agent_bnk_abn IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn == None) |(LKP_OUT.arsm_am_agent_bnk_abn == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
REJECTS = REJECTS.withColumn("SvCase2Parent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvCase3Parent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvAgentBankNameParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
REJECTS = REJECTS.withColumn("SvCase2Facm", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvCase3Facm", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvAgentBankNameFacm", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm )).otherwise(None)))))
	
REJECTS = REJECTS.withColumn("SvCase2FacmParent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvCase3FacmParent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
REJECTS = REJECTS.withColumn("SvAgentBankNameFacmParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm_parent ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent )).otherwise(None)))))
	
REJECTS = REJECTS.withColumn("SvAgntBankName", when((SvAgentBankName IS NOT None , SvAgentBankName , when((SvAgentBankNameParent IS NOT None , SvAgentBankNameParent ).otherwise(when((SvAgentBankNameFacm IS NOT None )).otherwise((SvAgentBankNameFacm ))).otherwise((IFF(SvAgentBankNameFacmParent IS NOT None ))).otherwise((SvAgentBankNameFacmParent )).otherwise(None))))).select(
	LKP_OUT.ACCT_ID.alias('ACCT_ID'),
	LKP_OUT.AS_OF_DT.alias('AS_OF_DT'),
	LKP_OUT.NATL_KEY.alias('NATL_KEY'),
	LKP_OUT.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	LKP_OUT.borm_instn_nbr.alias('borm_instn_nbr'),
	LKP_OUT.APPL_CD.alias('APPL_CD'),
	LKP_OUT.borm_mul_bk_ledger_code.alias('borm_mul_bk_ledger_code'),
	LKP_OUT.borm_apprv_date.alias('borm_apprv_date'),
	LKP_OUT.bois_mast_loan_acct.alias('bois_mast_loan_acct')
).filter("REJECTED")

# Processing node PASS_3, type TRANSFORMATION
# COLUMN COUNT: 186
# Original node name Xfm, link PASS_3

PASS_3 = LKP_OUT
PASS_3 = PASS_3.withColumn("OrigLnAmt", when((LKP_OUT.ORIG_LN_AMT_PREV IS NOT None , LKP_OUT.ORIG_LN_AMT_PREV ).otherwise(IFF((LKP_OUT.borm_app_amt == None) |(TRY_LKP_OUT.borm_app_amt .cast(NUMERIC) IS NOT None == lit(0)) )).otherwise((lit(0) )).otherwise(trim(LKP_OUT.borm_app_amt))))
	
PASS_3 = PASS_3.withColumn("BkrptDt", when((LKP_OUT.SRC_ACCT_NBR == None , when((LKP_OUT.BKRPT_IND == lit('Y') ).otherwise(LKP_OUT.AS_OF_DT ).otherwise(None) ).otherwise(when((LKP_OUT.BKRPT_IND_PREV == LKP_OUT.BKRPT_IND ).otherwise(LKP_OUT.BKRPT_DT_PREV ).otherwise(IFF(LKP_OUT.BKRPT_IND == lit('Y') )).otherwise((LKP_OUT.AS_OF_DT ))).otherwise((IFF(LKP_OUT.BKRPT_IND == lit('N') ))).otherwise((None )).otherwise(None)))))
	
PASS_3 = PASS_3.withColumn("CollCd", when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when((Len(LKP_OUT.colm_coll_sub_typ_Coll_cd) > lit(0) )).otherwise((LKP_OUT.colm_coll_sub_typ_Coll_cd ))).otherwise((lit('0001')) )).otherwise(None))
	
PASS_3 = PASS_3.withColumn("IntroRateIndEndDt", DateOffsetByComponents(LKP_OUT.borm_applic_issue_date , lit(0) , LKP_OUT.Integer_bois_fix_int_term , lit(0)))
	
PASS_3 = PASS_3.withColumn("AgntBankNameCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(IFF(LKP_OUT.arsm_bank_role == lit('03') )).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
PASS_3 = PASS_3.withColumn("AgntBankNameCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
PASS_3 = PASS_3.withColumn("AgntBankNbrCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
PASS_3 = PASS_3.withColumn("AgntBankNbrCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
PASS_3 = PASS_3.withColumn("Stgvarsbalnnbr", LKP_OUT.cgca_sch_ref_prefix + LKP_OUT.cgca_govnt_pgm_no)
	
PASS_3 = PASS_3.withColumn("StgLnProgCd", LKP_OUT.borm_acct_typ + LKP_OUT.borm_prod_cat)
	
PASS_3 = PASS_3.withColumn("BoisChildNull", when((LKP_OUT.bois_child_loan_type == None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BORM)) > lit(0)) &(LKP_OUT.facm_legal_bind_BORM == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BORM ).otherwise(IFF((LKP_OUT.facm_legal_bind_BORM != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BORM)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BORM )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BORM ))).otherwise((LKP_OUT.ACCT_ID) )).otherwise(LKP_OUT.ACCT_ID))))
	
PASS_3 = PASS_3.withColumn("BoisChildNotNull", when((LKP_OUT.bois_child_loan_type IS NOT None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BOIS)) > lit(0)) &(LKP_OUT.facm_legal_bind_BOIS == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BOIS ).otherwise(IFF((LKP_OUT.facm_legal_bind_BOIS != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BOIS)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BOIS )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BOIS ))).otherwise((LKP_OUT.ACCT_ID_BOIS_CUPA) )).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA))))
	
PASS_3 = PASS_3.withColumn("SvPrevMonth", substring(LKP_OUT.AS_OF_DT_PREV , lit(6) , lit(2)))
	
PASS_3 = PASS_3.withColumn("SvCurrMonth", substring(LKP_OUT.AS_OF_DT , lit(6) , lit(2)))
	
PASS_3 = PASS_3.withColumn("SvDaysDiff", DATEDIFF(LKP_OUT.bois_maturity_date , LKP_OUT.BOIS_MAT_DT_PREV))
	
PASS_3 = PASS_3.withColumn("SvCase2", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvCase3", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvAgentBankName", when(((LKP_OUT.arsm_am_agent_bnk_abn IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn == None) |(LKP_OUT.arsm_am_agent_bnk_abn == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
PASS_3 = PASS_3.withColumn("SvCase2Parent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvCase3Parent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvAgentBankNameParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
PASS_3 = PASS_3.withColumn("SvCase2Facm", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvCase3Facm", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvAgentBankNameFacm", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm )).otherwise(None)))))
	
PASS_3 = PASS_3.withColumn("SvCase2FacmParent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvCase3FacmParent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
PASS_3 = PASS_3.withColumn("SvAgentBankNameFacmParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm_parent ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent )).otherwise(None)))))
	
PASS_3 = PASS_3.withColumn("SvAgntBankName", when((SvAgentBankName IS NOT None , SvAgentBankName , when((SvAgentBankNameParent IS NOT None , SvAgentBankNameParent ).otherwise(when((SvAgentBankNameFacm IS NOT None )).otherwise((SvAgentBankNameFacm ))).otherwise((IFF(SvAgentBankNameFacmParent IS NOT None ))).otherwise((SvAgentBankNameFacmParent )).otherwise(None))))).select(
	LKP_OUT.ACCT_ID.alias('ACCT_ID'),
	LKP_OUT.AS_OF_DT.alias('AS_OF_DT'),
	LKP_OUT.APPL_CD.alias('APPL_CD'),
	(when(((Len(trim(LKP_OUT.bois_child_loan_type)) > lit(0)) |(LKP_OUT.bois_child_loan_type IS NOT None) , lit('S') ).otherwise(IFF((Len(trim(LKP_OUT.acfr_acct_nbr)) > lit(0)) &(LKP_OUT.acfr_acct_nbr != lit(' 0000000000000000.')) )).otherwise((lit('L') )).otherwise(lit('B')))).alias('CREDIT_FCLTY_TYP'),
	LKP_OUT.OrigLnAmt.alias('ORIG_LN_AMT'),
	(when((LKP_OUT.CF_CUR_LN_AMT == None ),(lit(0) )).otherwise(LKP_OUT.CF_CUR_LN_AMT)).alias('CUR_LN_AMT'),
	(when((Len(trim(LKP_OUT.SUM_BORM_APP_AMT)) > lit(0) ),(LKP_OUT.SUM_BORM_APP_AMT )).otherwise(lit(0.00))).alias('TOT_PART_SOLD_AMT'),
	(lit(None).cast(NullType())).alias('LIFE_INS_AMT'),
	LKP_OUT.bois_non_accr_stat.alias('SRC_ACCR_STAT_CD'),
	(when((LKP_OUT.bois_non_accr_stat == lit(1) ),(lit('N') )).otherwise(lit('A'))).alias('NON_ACCR_IND'),
	(when((LKP_OUT.bois_non_accr_stat == lit(1) ),(LKP_OUT.bois_last_npa_dt )).otherwise(None)).alias('NON_ACCR_DT'),
	(lit(None).cast(NullType())).alias('MIN_LATE_CHRG_AMT'),
	(lit(None).cast(NullType())).alias('MAX_LATE_CHRG_AMT'),
	(lit(None).cast(NullType())).alias('LATE_CHRG_PCT'),
	(lit(None).cast(NullType())).alias('LATE_CHRG_IND'),
	(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(LKP_OUT.arsm_arr_status == lit('000')) &(LKP_OUT.aral_arr_prod_code_check != lit('SWNGLINE')) ),(lit(100) - LKP_OUT.arsm_share_per_bank_role_multiple_arr )).otherwise(lit(0))).alias('SOLD_PCT'),
	(lit(None).cast(NullType())).alias('LATE_CHRG_GRC_DAY_CNT'),
	(when((SvCurrMonth != SvPrevMonth , when((SvDaysDiff >= lit(93) ).otherwise(lit('Y') ).otherwise(lit('N')) ).otherwise(when(((Len(trim(LKP_OUT.RNWL_PRCS_THIS_MTH_IND_PREV)) > lit(0)) &(LKP_OUT.RNWL_PRCS_THIS_MTH_IND_PREV == lit('Y')) )).otherwise((lit('Y') ))).otherwise((IFF(SvDaysDiff >= lit(93) ))).otherwise((lit('Y') )).otherwise(lit('N'))))).alias('RNWL_PRCS_THIS_MTH_IND'),
	(when((LKP_OUT.bois_pre_pen_method == lit('02') , lit('NS') ).otherwise(IFF(LKP_OUT.bois_pre_pen_method != lit('02') )).otherwise((LKP_OUT.bois_pre_pen_basis )).otherwise(None))).alias('PREPMT_PNLTY_CD'),
	(when(((trim(LKP_OUT.bois_loc_type) == lit('2')) |(trim(LKP_OUT.bois_loc_type) == lit('4')) |(Len(trim(LKP_OUT.bois_loc_type)) == lit(0)) , lit('N') ).otherwise(when((trim(LKP_OUT.bois_loc_type) == lit('3') ).otherwise(lit('R') ).otherwise(when(((trim(LKP_OUT.bois_loc_type) == lit('1')) &(LKP_OUT.brlm_draw_pd_exp_date < LKP_OUT.AS_OF_DT) )).otherwise((lit('N') ))).otherwise((IFF((trim(LKP_OUT.bois_loc_type) == lit('1')) &((LKP_OUT.brlm_draw_pd_exp_date == None) |(LKP_OUT.brlm_draw_pd_exp_date >= LKP_OUT.AS_OF_DT)) ))).otherwise((lit('R') )).otherwise(lit('N')))))).alias('REVOLVING_IND'),
	(lit(None).cast(NullType())).alias('LAST_INT_BEG_DT'),
	(lit(None).cast(NullType())).alias('DRCT_OR_INDIR_LN_IND'),
	(when((LKP_OUT.bois_fix_int_term == None , lit('N') , when(((Count(lit('000 , 999') , substring(LKP_OUT.bois_fix_int_term , lit(1) ),(lit(3))) == lit(0)) &(IntroRateIndEndDt >= LKP_OUT.AS_OF_DT) &(LKP_OUT.Integer_bois_fix_int_term != LKP_OUT.int_rate_ze_reset_freq) ))).otherwise((lit('Y') )).otherwise(lit('N')))).alias('INTRO_RATE_IND'),
	(when((LKP_OUT.bois_fix_int_term == None , None , when(((Count(lit('000 , 999') , substring(LKP_OUT.bois_fix_int_term , lit(1) ),(lit(3))) == lit(0)) &(LKP_OUT.Integer_bois_fix_int_term != LKP_OUT.int_rate_ze_reset_freq) ))).otherwise((IntroRateIndEndDt )).otherwise(None))).alias('INTRO_RATE_END_DT'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when((Len(trim(LKP_OUT.FORECLS_IND)) > lit(0) )).otherwise((LKP_OUT.FORECLS_IND ))).otherwise((lit('N')) )).otherwise(None)).alias('FORECLS_IND'),
	(lit(None).cast(NullType())).alias('FORECLS_STAT_CD'),
	(lit(None).cast(NullType())).alias('FNL_PMT_DT'),
	(lit(None).cast(NullType())).alias('LIFE_INS_CD'),
	(lit(None).cast(NullType())).alias('LIFE_INS_EXP_DT'),
	LKP_OUT.bois_frb_fhlb_plg.alias('PLEDGE_CD'),
	LKP_OUT.RCC_LINE_NBR_ECF.alias('LN_FED_CALL_RPT_CD'),
	LKP_OUT.bkrm_stat_cd.alias('SRC_BKRPT_STAT_CD'),
	(lit(None).cast(NullType())).alias('SEND_NO_BILL_CD'),
	(when(((Count(lit('027  028    029    088  096  097   098 ') , LKP_OUT.PROD_CD_ECF) == lit(1)) &(Count(lit('5600  5601  5602  5603  5604  5605  5606  5607  5608  5609  5610  ') ).otherwise(CollCd) == lit(1)) ).otherwise(when(((LKP_OUT.cpro_land_use == lit('Y')) &(LKP_OUT.cpro_prim_dwell == lit('Y')) ).otherwise(lit('1') ).otherwise(when(((LKP_OUT.cpro_land_use == lit('Y')) &(LKP_OUT.cpro_prim_dwell == lit('N')) ).otherwise(lit('2') )).otherwise((IFF((LKP_OUT.cpro_land_use == lit('N')) &(LKP_OUT.cpro_prim_dwell == lit('N')) ))).otherwise((lit('3') ))).otherwise((None) )).otherwise(None)))).alias('OWNR_OCCUPIED_CD'),
	(lit(None).cast(NullType())).alias('FEE_CAT_CD'),
	(lit(None).cast(NullType())).alias('LATE_CHRG_CALC_METH_CD'),
	(when((trim(LKP_OUT.brlm_repay_meth) == lit('1') , lit('I') ).otherwise(IFF((LKP_OUT.brlm_repay_meth == None) |(Len(trim(LKP_OUT.brlm_repay_meth)) == lit(0)) )).otherwise((lit('O') )).otherwise(lit('O')))).alias('PRIN_OR_INT_ONLY_CD'),
	(lit(None).cast(NullType())).alias('PMT_METH_CD'),
	(lit(None).cast(NullType())).alias('SRC_RENEGOTIATION_CD'),
	(lit(None).cast(NullType())).alias('RENEGOTIATION_CD'),
	(lit(None).cast(NullType())).alias('RENEGOTIATION_DESC'),
	(lit(None).cast(NullType())).alias('SRC_PROG_CD'),
	(when((LKP_OUT.colm_coll_sub_typ == lit('0001') ),(None )).otherwise(LKP_OUT.colm_coll_sub_typ)).alias('SRC_COLL_CD'),
	LKP_OUT.CollCd.alias('COLL_CD'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) ),(LKP_OUT.COLL_DESC_ECF )).otherwise(None)).alias('COLL_DESC'),
	LKP_OUT.lien_lien_pos.alias('SRC_LIEN_PSTN_CD'),
	LKP_OUT.borm_int_repay_freq.alias('SRC_INT_PMT_FREQ_CD'),
	LKP_OUT.lien_lien_pos.alias('lien_lien_pos'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when(((LKP_OUT.colm_coll_sub_typ != lit('0001')) &(LKP_OUT.colm_coll_sub_typ .cast(int) < lit(51)) ).otherwise(lit(0) ).otherwise(IFF(Len(LKP_OUT.LIEN_PSTN) > lit(0) )).otherwise((LKP_OUT.LIEN_PSTN ))).otherwise((lit(0)) )).otherwise(None))).alias('LIEN_PSTN'),
	LKP_OUT.INT_PMT_FREQ_CD_INT_ECF.alias('INT_PMT_FREQ_CD'),
	LKP_OUT.INT_PMT_FREQ_DESC_INT_ECF.alias('INT_PMT_FREQ_DESC'),
	LKP_OUT.borm_repay_freq.alias('SRC_PRIN_PMT_FREQ_CD'),
	(when((Len(trim(LKP_OUT.INT_PMT_FREQ_CD_PRIN_ECF)) > lit(0) ),(LKP_OUT.INT_PMT_FREQ_CD_PRIN_ECF )).otherwise(None)).alias('PRIN_PMT_FREQ_CD'),
	(when((Len(trim(LKP_OUT.INT_PMT_FREQ_DESC_PRIN_ECF)) > lit(0) ),(LKP_OUT.INT_PMT_FREQ_DESC_PRIN_ECF )).otherwise(None)).alias('PRIN_PMT_FREQ_DESC'),
	(when(((Len(trim(LKP_OUT.int_rate_ze_cap_max_rate)) > lit(0)) &(Len(trim(LKP_OUT.int_rate_ze_col_min_rate)) > lit(0)) , when(((LKP_OUT.int_rate_ze_col_min_rate > lit(0)) &(LKP_OUT.int_rate_ze_cap_max_rate == lit(0)) )).otherwise((lit(99.999) ))).otherwise((LKP_OUT.int_rate_ze_cap_max_rate) )).otherwise(None)).alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	(when((Len(trim(LKP_OUT.int_rate_ze_col_min_rate)) > lit(0) ),(LKP_OUT.int_rate_ze_col_min_rate )).otherwise(None)).alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	(when((LKP_OUT.INT_RATE_TYP == lit('F') , None ).otherwise(when((LKP_OUT.INT_RATE_TYP == lit('V') ).otherwise(when(((Count(lit('099.9000 099.9900 099.9990 ') )).otherwise((LKP_OUT.bois_periodic_cap) == lit(1)) |(LKP_OUT.bois_periodic_cap > lit(99)) ))).otherwise((None ))).otherwise((LKP_OUT.bois_periodic_cap) )).otherwise(None))).alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	(when((LKP_OUT.INT_RATE_TYP == lit('F') , None ).otherwise(when((LKP_OUT.INT_RATE_TYP == lit('V') ).otherwise(when(((Count(lit('099.9000 099.9900 099.9990 ') )).otherwise((LKP_OUT.bois_periodic_cap) == lit(1)) |(LKP_OUT.bois_periodic_cap > lit(99)) ))).otherwise((None ))).otherwise((LKP_OUT.bois_periodic_cap) )).otherwise(None))).alias('INT_RATE_FLR_CUR_PRD_PCT'),
	(lit(None).cast(NullType())).alias('INVSTR_POOL_NBR'),
	(lit(None).cast(NullType())).alias('TIERED_RATE_IND'),
	(lit(None).cast(NullType())).alias('DLR_CD'),
	(lit(None).cast(NullType())).alias('DLR_NBR'),
	(lit(None).cast(NullType())).alias('DLR_RATE'),
	(lit(None).cast(NullType())).alias('CMMT_LVL_CD'),
	(when((LKP_OUT.bois_child_loan_type == None , when((Len(trim(LKP_OUT.acfr_acct_nbr_BORM)) == lit(0) ).otherwise(LKP_OUT.borm_ln_acct_nbr ).otherwise(when(((Len(trim(LKP_OUT.acfr_acct_nbr_BORM)) > lit(0)) &(Len(trim(LKP_OUT.facm_fclty_nbr_BORM)) > lit(0)) ).otherwise(LKP_OUT.facm_fclty_nbr_BORM ).otherwise(LKP_OUT.borm_ln_acct_nbr) ).otherwise(when((LKP_OUT.bois_child_loan_type IS NOT None ).otherwise(IFF(Len(trim(LKP_OUT.acfr_acct_nbr_BOIS)) == lit(0) )).otherwise((LKP_OUT.bois_mast_loan_acct ))).otherwise((IFF((Len(trim(LKP_OUT.acfr_acct_nbr_BOIS)) > lit(0)) &(Len(trim(LKP_OUT.facm_fclty_nbr_BOIS)) > lit(0)) ))).otherwise((LKP_OUT.facm_fclty_nbr_BOIS ))).otherwise((LKP_OUT.bois_mast_loan_acct) )).otherwise(LKP_OUT.bois_mast_loan_acct))))).alias('ULT_PARENT_ACCT_NBR'),
	(when(((LKP_OUT.bois_mast_loan_acct_lkp IS NOT None) |(Len(trim(LKP_OUT.bois_mast_loan_acct_lkp)) != lit(0)) ),(lit('Y') )).otherwise(lit('N'))).alias('PARENT_REC_IND'),
	(lit(None).cast(NullType())).alias('CHLD_REC_IND'),
	(lit('N')).alias('COMMUNITY_DVLPMT_IND'),
	(lit(None).cast(NullType())).alias('SRC_DIV_CD'),
	LKP_OUT.SRC_PRPSE_CD_ECF.alias('SRC_PRPSE_CD'),
	LKP_OUT.SRC_PRPSE_DESC_ECF.alias('SRC_PRPSE_DESC'),
	LKP_OUT.CURRENT_DATE.alias('ENTRY_DT'),
	(when((Len(trim(LKP_OUT.arsm_shared_cr_flag_multiple_arr)) > lit(0) ),(lit('Y') )).otherwise(lit('N'))).alias('SHRD_NTNL_CREDIT_IND'),
	LKP_OUT.LN_PROG_CD.alias('LN_PROG_CD'),
	(when((Len(trim(LKP_OUT.arsm_arr_type_multiple_arr)) > lit(0) ),(lit('Y') )).otherwise(lit('N'))).alias('SYNDICATED_IND'),
	(lit(None).cast(NullType())).alias('ENTPRS_LEVERAGE_LEND_CD'),
	(when((Len(trim(LKP_OUT.TAX_EXEMPT_FLAG)) > lit(0) ),(LKP_OUT.TAX_EXEMPT_FLAG )).otherwise(lit('N'))).alias('TAX_FREE_IND'),
	(lit(None).cast(NullType())).alias('CMMT_DRAW_IND'),
	(when(((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr)) > lit(0)) &(LKP_OUT.arsm_arr_status == lit('000')) &(LKP_OUT.aral_arr_prod_code_check != lit('SWNGLINE')) ),(LKP_OUT.arsm_share_per_bank_role_multiple_arr )).otherwise(lit(100))).alias('CMMT_OWN_PCT'),
	(lit(None).cast(NullType())).alias('CMMT_LEAD_PART_IND'),
	(when(((LKP_OUT.INT_PMT_FREQ_CD_INT_ECF == lit(4)) |(LKP_OUT.INT_PMT_FREQ_CD_PRIN_ECF == lit(4)) ),(lit('PM') )).otherwise(lit('DM'))).alias('DLQNY_METH_CD'),
	(lit(None).cast(NullType())).alias('SRC_LN_FED_CALL_RPT_CD'),
	(lit(None).cast(NullType())).alias('LN_REC_CD'),
	(lit(None).cast(NullType())).alias('AVAIL_RLUP_IND'),
	LKP_OUT.SvAgntBankName.alias('AGNT_BANK_NAME'),
	(lit(None).cast(NullType())).alias('SRC_DLQNY_CD'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when(((Count(lit('028    029    003   088   098 ') ).otherwise(LKP_OUT.PROD_CD_ECF) == lit(1)) &(Count(lit('5600  5601   ') ).otherwise(LKP_OUT.colm_coll_sub_typ) == lit(1)) )).otherwise((lit(90) ))).otherwise((LKP_OUT.SUPERVISORY_LTV_PCT_ECF) )).otherwise(None)).alias('SUPERVISORY_LTV_PCT'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when(((Count(lit('028    029    003   088   098 ') ).otherwise(LKP_OUT.PROD_CD_ECF) == lit(1)) &(Count(lit('5600  5601   ') ).otherwise(LKP_OUT.colm_coll_sub_typ_Coll_cd) == lit(1)) )).otherwise(((lit('Permanent mortgages) &(home equity for 1-4 family residence')) ))).otherwise((LKP_OUT.SUPERVISORY_LTV_CAT_DESC_ECF) )).otherwise(None)).alias('SUPERVISORY_LTV_CAT_DESC'),
	(when((AgntBankNbrCase1 != lit(0) , AgntBankNbrCase1 ).otherwise(IFF(AgntBankNbrCase2 != lit(0) )).otherwise((AgntBankNbrCase2 )).otherwise(None))).alias('SRC_AGNT_BANK_NBR'),
	(lit(None).cast(NullType())).alias('SRC_UNDERWRITING_OFCR_CD'),
	(lit(None).cast(NullType())).alias('PERMT_FINCG_ENTITY_NAME'),
	(lit(None).cast(NullType())).alias('PERMT_FINCG_CD'),
	(lit(None).cast(NullType())).alias('FXD_FEE_BEG_DT'),
	(lit(None).cast(NullType())).alias('FXD_FEE_AMT_CD'),
	(lit(None).cast(NullType())).alias('FXD_FEE_CALC_CD'),
	(when(((Len(trim(LKP_OUT.csec_fee_nbr)) > lit(0)) &(LKP_OUT.csec_fee_nbr == lit(9)) ),(LKP_OUT.csec_prd_fee_fst_chr_dt )).otherwise(None)).alias('FXD_FEE_DUE_DT'),
	(lit(None).cast(NullType())).alias('FXD_FEE_EARN_CD'),
	LKP_OUT.borm_pdcc_val.alias('DISC_AMT'),
	LKP_OUT.usbo_collect_respons.alias('SERV_GRP_OR_DEPT'),
	(lit(None).cast(NullType())).alias('ENTPRS_EXIT_DT'),
	(lit(None).cast(NullType())).alias('CL_MODE_X_CD'),
	(lit(None).cast(NullType())).alias('CL_TYP_X_CD'),
	(lit(None).cast(NullType())).alias('LEVERAGE_EXIT_DT'),
	(when(((Count(lit('1  3  ') , LKP_OUT.ACCTGRPCD) == lit(1)) &(LKP_OUT.bois_child_loan_type IS NOT None) &(LKP_OUT.bois_child_loan_type == lit('S')) &(Count(lit('A  C  E  O  V  ') ).otherwise(LKP_OUT.usbo_src_of_orig) == lit(1)) &(Len(trim(LKP_OUT.usbo_loan_orig_id_ln_orig)) > lit(0)) , LKP_OUT.usbo_loan_orig_id_ln_orig , when(((Count(lit('1  3  ') , LKP_OUT.ACCTGRPCD) == lit(1)) &(LKP_OUT.bois_child_loan_type == None) &(Count(lit('A  C  E  O  V  ') ).otherwise(LKP_OUT.usbo_src_of_orig) == lit(1)) , LKP_OUT.usbo_loan_orig_id , when(((LKP_OUT.ACCTGRPCD == lit('2')) &(LKP_OUT.usbo_src_of_orig == lit('C')) &(LKP_OUT.bois_child_loan_type == None) , LKP_OUT.usbo_loan_orig_id )).otherwise((IFF((LKP_OUT.ACCTGRPCD == lit('2')) &(LKP_OUT.usbo_src_of_orig == lit('C')) &(LKP_OUT.bois_child_loan_type IS NOT None) &(Count(lit('R  A  C  ') ))).otherwise((LKP_OUT.bois_child_loan_type) == lit(0)) ))).otherwise((LKP_OUT.usbo_loan_orig_id )).otherwise(None))))).alias('LN_ORIG_SYS_ACCT_NBR'),
	LKP_OUT.LN_ORIG_SYS_CODE_DESC_ECF_OUT2.alias('LN_ORIG_SYS_CD'),
	(lit(None).cast(NullType())).alias('SRC_UNDERWRITING_CC_NBR'),
	(lit(None).cast(NullType())).alias('SRC_FORECLS_STAT_CD'),
	LKP_OUT.bois_fac_grade_id.alias('SRC_MDM_FCLTY_ID'),
	(lit(None).cast(NullType())).alias('BOOKED_THIS_MTH_IND'),
	(lit(None).cast(NullType())).alias('SRC_PMT_APPL_CD'),
	(when((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr_others)) > lit(0) ),(LKP_OUT.arsm_share_per_multiple_arr_others )).otherwise(lit(0))).alias('PART_PURCH_PCT'),
	(when((Len(trim(LKP_OUT.arsm_bank_role_multiple_arr_others_part_purch_tot_cmmt_amt)) > lit(0) ),(LKP_OUT.arsm_total_limit_amt_multiple_arr_others_part_purch_tot_cmmt_amt )).otherwise(lit(0))).alias('PART_PURCH_TOT_CMMT_AMT'),
	(when(((Count(lit('01  02  06  ') , LKP_OUT.arsm_bank_role_multiple_arr_others) == lit(0)) &(Len(trim(LKP_OUT.arml_mem_bank_role_multiple_arr_others)) > lit(0)) &(Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arml_mem_bank_role_multiple_arr_others) == lit(1)) )).otherwise((LKP_OUT.arml_cnt_party_nbr_multiple_arr_others )).otherwise(None)).alias('PART_PURCH_FROM_BANK_NBR'),
	(when(((Count(lit('01  02  06  ') , LKP_OUT.arsm_bank_role_multiple_arr_others) == lit(0)) &(Len(trim(LKP_OUT.arml_mem_bank_role_multiple_arr_others)) > lit(0)) &(Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arml_mem_bank_role_multiple_arr_others) == lit(1)) )).otherwise((LKP_OUT.cusm_cur_name_multiple_arr_others )).otherwise(None)).alias('PART_PURCH_FROM_BANK_NAME'),
	(lit(None).cast(NullType())).alias('CRA_LN_TYP'),
	(lit(None).cast(NullType())).alias('CRA_LN_TYP_DESC'),
	(substring(LKP_OUT.BKRPT_STAT_CODE_ECF , lit(1) , lit(1))).alias('BKRPT_STAT_CD'),
	LKP_OUT.LN_PROG_DESC.alias('LN_PROG_DESC'),
	(when((Len(trim(LKP_OUT.cgca_ln_acct_nbr)) > lit(0) , when(((LKP_OUT.cgca_sch_ref_prefix IS NOT None) &(LKP_OUT.cgca_govnt_pgm_no IS NOT None) ).otherwise(Stgvarsbalnnbr ).otherwise(when(((LKP_OUT.cgca_sch_ref_prefix == None) &(LKP_OUT.cgca_govnt_pgm_no IS NOT None) ).otherwise(LKP_OUT.cgca_govnt_pgm_no )).otherwise((IFF((LKP_OUT.cgca_sch_ref_prefix IS NOT None) &(LKP_OUT.cgca_govnt_pgm_no == None) ))).otherwise((LKP_OUT.cgca_sch_ref_prefix ))).otherwise((None) )).otherwise(None)))).alias('SBA_LN_NBR'),
	(lit(None).cast(NullType())).alias('SRC_SHDW_SAG_OFCR_CD'),
	(lit(None).cast(NullType())).alias('SRC_SAG_OFCR_CD'),
	(lit('N')).alias('CENTRALLY_PRCS_IND'),
	(when((trim(LKP_OUT.borm_instn_nbr) == lit('140') ),(LKP_OUT.FDIC_CD )).otherwise(LKP_OUT.FDIC_IND_ECF)).alias('FDIC_SPPRTD_LN_IND'),
	(when(((LKP_OUT.bkrm_bkrpt_ind == None) |(Len(trim(LKP_OUT.bkrm_bkrpt_ind)) == lit(0)) , lit('N') ).otherwise(when((LKP_OUT.bkrm_bkrpt_ind == lit('Y') ).otherwise(lit('Y') )).otherwise((IFF(LKP_OUT.bkrm_bkrpt_ind == lit('N') ))).otherwise((lit('N') )).otherwise(lit('N'))))).alias('BKRPT_IND'),
	(substring(LKP_OUT.BKRPT_STAT_CODE_DESC_ECF , lit(1) , lit(50))).alias('BKRPT_STAT_DESC'),
	(substring(LKP_OUT.BKRPT_TYP_CODE_ECF , lit(1) , lit(5))).alias('BKRPT_TYP_CD'),
	(substring(LKP_OUT.BKRPT_TYP_CODE_DESC_ECF , lit(1) , lit(50))).alias('BKRPT_TYP_DESC'),
	(lit(None).cast(NullType())).alias('FORECLS_STAT_DESC'),
	(when(((Len(trim(LKP_OUT.arsm_bank_role)) > lit(0)) &(LKP_OUT.arsm_arr_status == lit('000')) &(Count(lit('01  02  06  ') , LKP_OUT.arsm_bank_role) != lit(1)) &(Len(trim(LKP_OUT.arml_mem_bank_role)) > lit(0)) &(Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arml_mem_bank_role) == lit(1)) ).otherwise(when((Len(trim(LKP_OUT.uscu_affiliate_code)) > lit(0) )).otherwise((lit('A') ))).otherwise((lit('W')) )).otherwise(lit('R'))).alias('LN_ORIG_CHNL_CD'),
	LKP_OUT.bois_promo_nbr.alias('PROMO_CD'),
	(when((trim(LKP_OUT.bois_tdr_stat) == lit('1') ),(LKP_OUT.bois_tdr_eff_dt )).otherwise(None)).alias('TDR_DT'),
	(when((trim(LKP_OUT.bois_tdr_stat) == lit('1') ),(lit('Y') )).otherwise(lit('N'))).alias('TDR_IND'),
	(lit(None).cast(NullType())).alias('ENERGY_CD'),
	(lit(None).cast(NullType())).alias('ENERGY_CD_DESC'),
	(when((LKP_OUT.borm_stat_cd == lit('27') ),(lit('Y') )).otherwise(lit('N'))).alias('SRC_FULLY_CHOF_IND'),
	(lit('U')).alias('SRC_OREO_IND'),
	(lit(None).cast(NullType())).alias('DISP_CD'),
	(when(((Not(LKP_OUT.usbo_conus_cr_counsl == None)) |(Len(trim(LKP_OUT.usbo_conus_cr_counsl)) != lit(0)) ),(LKP_OUT.usbo_conus_cr_counsl )).otherwise(lit('U'))).alias('CNSMR_CREDIT_CNSLNG_IND'),
	(lit(None).cast(NullType())).alias('PORTFOLIO_MGMT_CD'),
	(lit(None).cast(NullType())).alias('PORTFOLIO_MGMT_DESC'),
	(when((Len(trim(LKP_OUT.MOODY_CD_ECF)) > lit(0) ),(LKP_OUT.MOODY_CD_ECF )).otherwise(lit('UNK'))).alias('MOODYS_PROD_CD'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) ),(LKP_OUT.TBI_CATEGORY_ECF )).otherwise(None)).alias('TBI_CAT_DESC'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) ),(LKP_OUT.PPR_PROP_TYPE_ECF )).otherwise(None)).alias('PPR_PROP_TYP_DESC'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) ),(LKP_OUT.CRE_COLL_IND_ECF )).otherwise(None)).alias('COMML_RE_COLL_IND'),
	(when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) ),(LKP_OUT.RE_COLL_IND_ECF )).otherwise(None)).alias('RE_COLL_IND'),
	(when(((Len(trim(LKP_OUT.usbo_loan_manag_group)) > lit(0)) &(LKP_OUT.usbo_loan_manag_group == lit('005')) ),(lit('Y') )).otherwise(lit('N'))).alias('NTNL_RE_IND'),
	LKP_OUT.bkrm_filed_dt.alias('BKRPT_DT'),
	(when((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0) , when(((LKP_OUT.arsm_arr_type == lit('02')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) &(LKP_OUT.arsm_arr_status == lit('000')) )).otherwise((lit('Y') ))).otherwise((lit('N')) )).otherwise(lit('N'))).alias('PART_SNC_RPT_IND'),
	LKP_OUT.bois_regw_reportable.alias('REG_W_CD'),
	(when((LKP_OUT.bois_child_loan_type == None ),(BoisChildNull )).otherwise(BoisChildNotNull)).alias('CUPA_ID'),
	(lit(None).cast(NullType())).alias('FRY14_CAT_CD'),
	(lit(None).cast(NullType())).alias('QRM_SEG_CD'),
	(lit(None).cast(NullType())).alias('QRM_SEG_DESC'),
	(lit('Y')).alias('REG_AT_RISK_IND'),
	(lit(None).cast(NullType())).alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	(when(((Len(trim(LKP_OUT.acom_abs_unused_rate)) > lit(0)) |(LKP_OUT.acom_abs_unused_rate IS NOT None) ),(LKP_OUT.acom_abs_unused_rate )).otherwise(lit(0))).alias('LN_UNUSD_AMT_FEE_RATE'),
	(when((Len(trim(LKP_OUT.lend_arrangement_cd_multiple_arr)) > lit(0) ),(LKP_OUT.lend_arrangement_cd_multiple_arr )).otherwise(None)).alias('LEND_ARRANGEMENT_CD'),
	(when((Len(trim(LKP_OUT.lend_arrangement_desc_multiple_arr)) > lit(0) ),(LKP_OUT.lend_arrangement_desc_multiple_arr )).otherwise(None)).alias('LEND_ARRANGEMENT_DESC'),
	LKP_OUT.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	(when((Len(trim(LKP_OUT.PROD_CD_ECF)) > lit(0) ),(LKP_OUT.PROD_CD_ECF )).otherwise(lit('None'))).alias('PROD_CD'),
	LKP_OUT.RISK_CLASS_CD_LKP.alias('RISK_CLASS_CD_LKP'),
	(when((LKP_OUT.REG_BANK_SHR_EXP_AMT == None ),(lit(0) )).otherwise(LKP_OUT.REG_BANK_SHR_EXP_AMT)).alias('REG_BANK_SHR_EXP_AMT'),
	(lit(0)).alias('MUNI_RISK_WT_PCT'),
	(lit(None).cast(NullType())).alias('PR_APPL_CD'),
	(lit(None).cast(NullType())).alias('PR_APPL_CD_DESC'),
	(lit(None).cast(NullType())).alias('LEASE_ACCT_DIST_CD'),
	(when((LKP_OUT.RESTORED_TO_ACCRUAL_DT IS NOT None ),(LKP_OUT.RESTORED_TO_ACCRUAL_DT )).otherwise(None)).alias('NON_ACCR_END_DT'),
	LKP_OUT.borm_app_amt.alias('PAR_VAL_LN_AMT'),
	(trim(LKP_OUT.bgsm_prim_vendor_name)).alias('BUILDER_NAME'),
	LKP_OUT.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	LKP_OUT.bois_maturity_date.alias('bois_maturity_date'),
	LKP_OUT.usbo_purchased_code.alias('usbo_purchased_code'),
	LKP_OUT.usbo_purch_dt.alias('usbo_purch_dt'),
	LKP_OUT.bois_pred_loan_no.alias('bois_pred_loan_no'),
	(lit(None).cast(NullType())).alias('COLL_MONITOR_RESP_CD'),
	(lit(None).cast(NullType())).alias('COLL_MONITOR_RESP_DESC'),
	(when(((LKP_OUT.brlm_effect_lim == lit(2)) &(LKP_OUT.brlm_bor_base_amt < LKP_OUT.borm_app_amt) ),(LKP_OUT.brlm_bor_base_amt )).otherwise(LKP_OUT.borm_app_amt)).alias('CREDIT_LMT_EFF_AMT'),
	(when((LKP_OUT.borm_hfis_flag == lit('N') , lit('I') ).otherwise(IFF(LKP_OUT.borm_hfis_flag == lit('Y') )).otherwise((lit('S') )).otherwise(None))).alias('HFI_HFS_CD'),
	(when((LKP_OUT.borm_hfis_flag == lit('N') , lit('Held for Investment') ).otherwise(IFF(LKP_OUT.borm_hfis_flag == lit('Y') )).otherwise((lit('Held for Sale') )).otherwise(None))).alias('HFI_HFS_DESC'),
	(when(((LKP_OUT.brlm_bor_base_amt IS NOT None) |(Len(trim(LKP_OUT.brlm_bor_base_amt)) > lit(0)) ),(LKP_OUT.brlm_bor_base_amt )).otherwise(None)).alias('BB_AMT'),
	(when(((LKP_OUT.brlm_effect_lim IS NOT None) |(Len(trim(LKP_OUT.brlm_effect_lim)) > lit(0)) ),(LKP_OUT.brlm_effect_lim )).otherwise(None)).alias('EFF_LMT_CD'),
	(when((LKP_OUT.brlm_effect_lim == lit(1) , lit('Account Level Limit') ).otherwise(IFF(LKP_OUT.brlm_effect_lim == lit(2) )).otherwise((lit('Borrowing Base Limit') )).otherwise(None))).alias('EFF_LMT_DESC'),
	LKP_OUT.bois_ex_flag_2.alias('bois_ex_flag_2'),
	LKP_OUT.borm_apprv_date.alias('borm_apprv_date'),
	LKP_OUT.auth_sbl_ind.alias('auth_sbl_ind'),
	LKP_OUT.bois_frb_plg_inel.alias('FRB_FHLB_ELIG_PLEDGE_CD')
).filter("Trim(ACCT_ID) > 0")

# Processing node CRD_FCLTY_REVOLV_IND_OUT, type TRANSFORMATION
# COLUMN COUNT: 2
# Original node name Xfm, link CRD_FCLTY_REVOLV_IND_OUT

CRD_FCLTY_REVOLV_IND_OUT = LKP_OUT
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("OrigLnAmt", when((LKP_OUT.ORIG_LN_AMT_PREV IS NOT None , LKP_OUT.ORIG_LN_AMT_PREV ).otherwise(IFF((LKP_OUT.borm_app_amt == None) |(TRY_LKP_OUT.borm_app_amt .cast(NUMERIC) IS NOT None == lit(0)) )).otherwise((lit(0) )).otherwise(trim(LKP_OUT.borm_app_amt))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("BkrptDt", when((LKP_OUT.SRC_ACCT_NBR == None , when((LKP_OUT.BKRPT_IND == lit('Y') ).otherwise(LKP_OUT.AS_OF_DT ).otherwise(None) ).otherwise(when((LKP_OUT.BKRPT_IND_PREV == LKP_OUT.BKRPT_IND ).otherwise(LKP_OUT.BKRPT_DT_PREV ).otherwise(IFF(LKP_OUT.BKRPT_IND == lit('Y') )).otherwise((LKP_OUT.AS_OF_DT ))).otherwise((IFF(LKP_OUT.BKRPT_IND == lit('N') ))).otherwise((None )).otherwise(None)))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("CollCd", when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when((Len(LKP_OUT.colm_coll_sub_typ_Coll_cd) > lit(0) )).otherwise((LKP_OUT.colm_coll_sub_typ_Coll_cd ))).otherwise((lit('0001')) )).otherwise(None))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("IntroRateIndEndDt", DateOffsetByComponents(LKP_OUT.borm_applic_issue_date , lit(0) , LKP_OUT.Integer_bois_fix_int_term , lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("AgntBankNameCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(IFF(LKP_OUT.arsm_bank_role == lit('03') )).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("AgntBankNameCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("AgntBankNbrCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("AgntBankNbrCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("Stgvarsbalnnbr", LKP_OUT.cgca_sch_ref_prefix + LKP_OUT.cgca_govnt_pgm_no)
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("StgLnProgCd", LKP_OUT.borm_acct_typ + LKP_OUT.borm_prod_cat)
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("BoisChildNull", when((LKP_OUT.bois_child_loan_type == None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BORM)) > lit(0)) &(LKP_OUT.facm_legal_bind_BORM == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BORM ).otherwise(IFF((LKP_OUT.facm_legal_bind_BORM != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BORM)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BORM )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BORM ))).otherwise((LKP_OUT.ACCT_ID) )).otherwise(LKP_OUT.ACCT_ID))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("BoisChildNotNull", when((LKP_OUT.bois_child_loan_type IS NOT None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BOIS)) > lit(0)) &(LKP_OUT.facm_legal_bind_BOIS == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BOIS ).otherwise(IFF((LKP_OUT.facm_legal_bind_BOIS != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BOIS)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BOIS )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BOIS ))).otherwise((LKP_OUT.ACCT_ID_BOIS_CUPA) )).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvPrevMonth", substring(LKP_OUT.AS_OF_DT_PREV , lit(6) , lit(2)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCurrMonth", substring(LKP_OUT.AS_OF_DT , lit(6) , lit(2)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvDaysDiff", DATEDIFF(LKP_OUT.bois_maturity_date , LKP_OUT.BOIS_MAT_DT_PREV))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase2", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase3", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvAgentBankName", when(((LKP_OUT.arsm_am_agent_bnk_abn IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn == None) |(LKP_OUT.arsm_am_agent_bnk_abn == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase2Parent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase3Parent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvAgentBankNameParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase2Facm", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase3Facm", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvAgentBankNameFacm", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm )).otherwise(None)))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase2FacmParent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvCase3FacmParent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvAgentBankNameFacmParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm_parent ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent )).otherwise(None)))))
	
CRD_FCLTY_REVOLV_IND_OUT = CRD_FCLTY_REVOLV_IND_OUT.withColumn("SvAgntBankName", when((SvAgentBankName IS NOT None , SvAgentBankName , when((SvAgentBankNameParent IS NOT None , SvAgentBankNameParent ).otherwise(when((SvAgentBankNameFacm IS NOT None )).otherwise((SvAgentBankNameFacm ))).otherwise((IFF(SvAgentBankNameFacmParent IS NOT None ))).otherwise((SvAgentBankNameFacmParent )).otherwise(None))))).select(
	LKP_OUT.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	(when(((trim(LKP_OUT.bois_loc_type) == lit('2')) |(trim(LKP_OUT.bois_loc_type) == lit('4')) |(Len(trim(LKP_OUT.bois_loc_type)) == lit(0)) , lit('N') ).otherwise(when((trim(LKP_OUT.bois_loc_type) == lit('3') ).otherwise(lit('R') ).otherwise(when(((trim(LKP_OUT.bois_loc_type) == lit('1')) &(LKP_OUT.brlm_draw_pd_exp_date < LKP_OUT.AS_OF_DT) )).otherwise((lit('N') ))).otherwise((IFF((trim(LKP_OUT.bois_loc_type) == lit('1')) &((LKP_OUT.brlm_draw_pd_exp_date == None) |(LKP_OUT.brlm_draw_pd_exp_date >= LKP_OUT.AS_OF_DT)) ))).otherwise((lit('R') )).otherwise(lit('N')))))).alias('REVOLVING_IND')
).filter("Trim(ACCT_ID) > 0")

# Processing node CUR_DS, type TRANSFORMATION
# COLUMN COUNT: 4
# Original node name Xfm, link CUR_DS

CUR_DS = LKP_OUT
CUR_DS = CUR_DS.withColumn("OrigLnAmt", when((LKP_OUT.ORIG_LN_AMT_PREV IS NOT None , LKP_OUT.ORIG_LN_AMT_PREV ).otherwise(IFF((LKP_OUT.borm_app_amt == None) |(TRY_LKP_OUT.borm_app_amt .cast(NUMERIC) IS NOT None == lit(0)) )).otherwise((lit(0) )).otherwise(trim(LKP_OUT.borm_app_amt))))
	
CUR_DS = CUR_DS.withColumn("BkrptDt", when((LKP_OUT.SRC_ACCT_NBR == None , when((LKP_OUT.BKRPT_IND == lit('Y') ).otherwise(LKP_OUT.AS_OF_DT ).otherwise(None) ).otherwise(when((LKP_OUT.BKRPT_IND_PREV == LKP_OUT.BKRPT_IND ).otherwise(LKP_OUT.BKRPT_DT_PREV ).otherwise(IFF(LKP_OUT.BKRPT_IND == lit('Y') )).otherwise((LKP_OUT.AS_OF_DT ))).otherwise((IFF(LKP_OUT.BKRPT_IND == lit('N') ))).otherwise((None )).otherwise(None)))))
	
CUR_DS = CUR_DS.withColumn("CollCd", when(((LKP_OUT.bois_ex_flag_2 == lit(1)) |(LKP_OUT.bois_ex_flag_2 == lit(3)) , when((Len(LKP_OUT.colm_coll_sub_typ_Coll_cd) > lit(0) )).otherwise((LKP_OUT.colm_coll_sub_typ_Coll_cd ))).otherwise((lit('0001')) )).otherwise(None))
	
CUR_DS = CUR_DS.withColumn("IntroRateIndEndDt", DateOffsetByComponents(LKP_OUT.borm_applic_issue_date , lit(0) , LKP_OUT.Integer_bois_fix_int_term , lit(0)))
	
CUR_DS = CUR_DS.withColumn("AgntBankNameCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(IFF(LKP_OUT.arsm_bank_role == lit('03') )).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CUR_DS = CUR_DS.withColumn("AgntBankNameCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) &(LKP_OUT.arsm_arr_status == lit('000')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.ECF_SRC_BANK_NBR_DESC ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.cusm_cur_name ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CUR_DS = CUR_DS.withColumn("AgntBankNbrCase1", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type == lit('01')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CUR_DS = CUR_DS.withColumn("AgntBankNbrCase2", when(((Len(trim(LKP_OUT.arsm_arr_type)) > lit(0)) &(LKP_OUT.arsm_arr_type != lit('01')) &(LKP_OUT.arsm_shared_cr_flag == lit('Y')) , when((Count(lit('01  02  06  ') ).otherwise(LKP_OUT.arsm_bank_role) == lit(1) ).otherwise(LKP_OUT.arsm_instn_nbr ).otherwise(when((Count(lit('01  02  06  ') )).otherwise((LKP_OUT.arsm_bank_role) == lit(0) ))).otherwise((LKP_OUT.arsm_am_agent_bnk ))).otherwise((lit(0)) )).otherwise(lit(0))))
	
CUR_DS = CUR_DS.withColumn("Stgvarsbalnnbr", LKP_OUT.cgca_sch_ref_prefix + LKP_OUT.cgca_govnt_pgm_no)
	
CUR_DS = CUR_DS.withColumn("StgLnProgCd", LKP_OUT.borm_acct_typ + LKP_OUT.borm_prod_cat)
	
CUR_DS = CUR_DS.withColumn("BoisChildNull", when((LKP_OUT.bois_child_loan_type == None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_borm)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BORM)) > lit(0)) &(LKP_OUT.facm_legal_bind_BORM == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BORM ).otherwise(IFF((LKP_OUT.facm_legal_bind_BORM != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BORM)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BORM )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BORM ))).otherwise((LKP_OUT.ACCT_ID) )).otherwise(LKP_OUT.ACCT_ID))))
	
CUR_DS = CUR_DS.withColumn("BoisChildNotNull", when((LKP_OUT.bois_child_loan_type IS NOT None , when((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) == lit(0) ).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA ).otherwise(when(((Len(trim(LKP_OUT.acfr_fclty_nbr_join_bois)) > lit(0)) &(Len(trim(LKP_OUT.facm_legal_bind_BOIS)) > lit(0)) &(LKP_OUT.facm_legal_bind_BOIS == lit('Y')) ).otherwise(LKP_OUT.ACCT_ID_BOIS ).otherwise(IFF((LKP_OUT.facm_legal_bind_BOIS != lit('Y')) &(Len(trim(LKP_OUT.LEGAL_BIND_DT_BOIS)) > lit(0)) &(DATEDIFF(LKP_OUT.LEGAL_BIND_DT_BOIS )).otherwise((LKP_OUT.AS_OF_DT) >= lit(93)) ))).otherwise((LKP_OUT.ACCT_ID_BOIS ))).otherwise((LKP_OUT.ACCT_ID_BOIS_CUPA) )).otherwise(LKP_OUT.ACCT_ID_BOIS_CUPA))))
	
CUR_DS = CUR_DS.withColumn("SvPrevMonth", substring(LKP_OUT.AS_OF_DT_PREV , lit(6) , lit(2)))
	
CUR_DS = CUR_DS.withColumn("SvCurrMonth", substring(LKP_OUT.AS_OF_DT , lit(6) , lit(2)))
	
CUR_DS = CUR_DS.withColumn("SvDaysDiff", DATEDIFF(LKP_OUT.bois_maturity_date , LKP_OUT.BOIS_MAT_DT_PREV))
	
CUR_DS = CUR_DS.withColumn("SvCase2", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvCase3", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvAgentBankName", when(((LKP_OUT.arsm_am_agent_bnk_abn IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn == None) |(LKP_OUT.arsm_am_agent_bnk_abn == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
CUR_DS = CUR_DS.withColumn("SvCase2Parent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvCase3Parent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvAgentBankNameParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC )).otherwise(None)))))
	
CUR_DS = CUR_DS.withColumn("SvCase2Facm", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvCase3Facm", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvAgentBankNameFacm", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm )).otherwise(None)))))
	
CUR_DS = CUR_DS.withColumn("SvCase2FacmParent", when((Count(lit('01 02 06 05') , LKP_OUT.arsm_bank_role_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvCase3FacmParent", when((Count(lit('09  07') , LKP_OUT.arsm_arr_type_abn_facm_parent) == lit(0) )).otherwise((lit(1) )).otherwise(lit(0)))
	
CUR_DS = CUR_DS.withColumn("SvAgentBankNameFacmParent", when(((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent IS NOT None) &((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent != lit('0000000000000000'))) , LKP_OUT.cusm_cur_name_agnt_bank_facm_parent ).otherwise(when((((LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == None) |(LKP_OUT.arsm_am_agent_bnk_abn_facm_parent == lit('0000000000000000'))) &((SvCase2 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) ).otherwise(None ).otherwise(when(((LKP_OUT.arsm_bank_role_abn_facm_parent == lit('05')) &((SvCase3 == lit(1)) |(LKP_OUT.arsm_bank_role_abn_facm_parent == None)) )).otherwise((None ))).otherwise((IFF(LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent IS NOT None ))).otherwise((LKP_OUT.ECF_SRC_BANK_NBR_DESC_facm_parent )).otherwise(None)))))
	
CUR_DS = CUR_DS.withColumn("SvAgntBankName", when((SvAgentBankName IS NOT None , SvAgentBankName , when((SvAgentBankNameParent IS NOT None , SvAgentBankNameParent ).otherwise(when((SvAgentBankNameFacm IS NOT None )).otherwise((SvAgentBankNameFacm ))).otherwise((IFF(SvAgentBankNameFacmParent IS NOT None ))).otherwise((SvAgentBankNameFacmParent )).otherwise(None))))).select(
	LKP_OUT.ACCT_ID.alias('ACCT_ID'),
	LKP_OUT.OrigLnAmt.alias('ORIG_LN_AMT'),
	LKP_OUT.BKRPT_IND.alias('BKRPT_IND'),
	LKP_OUT.BkrptDt.alias('BKRPT_DT')
)

# Processing node CREDIT_FCLTY_BANCS_CUR_REJ, type TARGET
# COLUMN COUNT: 9

CREDIT_FCLTY_BANCS_CUR_REJ = REJECTS.select('*')
CREDIT_FCLTY_BANCS_CUR_REJ.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('REJECT_DIR')}/bancs/credit_fclty_bancs_cur{getArgument('APPL_CD')}.rej')

# Processing node CRD_FCLTY_REVOLV_IND, type TARGET
# COLUMN COUNT: 2

CRD_FCLTY_REVOLV_IND = CRD_FCLTY_REVOLV_IND_OUT.select('*')
CRD_FCLTY_REVOLV_IND.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('DS_DIR')}/bancs/CRD_FCLTY_REVOLV_IND.ds')

# Processing node CREDIT_FCLTY_BN_ORIG_FIELDS_CURR, type TARGET
# COLUMN COUNT: 4

CREDIT_FCLTY_BN_ORIG_FIELDS_CURR = CUR_DS.select('*')
CREDIT_FCLTY_BN_ORIG_FIELDS_CURR.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('DS_DIR')}/bancs/credit_fclty_{getArgument('APPL_CD')}_orig_fields_curr{getArgument('APPL_CD')}.ds')

# Processing node PASS_4, type REPLICATE
# COLUMN COUNT: 186
# Original node name Cp, link PASS_4

PASS_4 = PASS_3.select(
	PASS_3.ACCT_ID,
	PASS_3.AS_OF_DT,
	PASS_3.APPL_CD,
	PASS_3.CREDIT_FCLTY_TYP,
	PASS_3.ORIG_LN_AMT,
	PASS_3.CUR_LN_AMT,
	PASS_3.TOT_PART_SOLD_AMT,
	PASS_3.LIFE_INS_AMT,
	PASS_3.SRC_ACCR_STAT_CD,
	PASS_3.NON_ACCR_IND,
	PASS_3.NON_ACCR_DT,
	PASS_3.MIN_LATE_CHRG_AMT,
	PASS_3.MAX_LATE_CHRG_AMT,
	PASS_3.LATE_CHRG_PCT,
	PASS_3.LATE_CHRG_IND,
	PASS_3.SOLD_PCT,
	PASS_3.LATE_CHRG_GRC_DAY_CNT,
	PASS_3.RNWL_PRCS_THIS_MTH_IND,
	PASS_3.PREPMT_PNLTY_CD,
	PASS_3.REVOLVING_IND,
	PASS_3.LAST_INT_BEG_DT,
	PASS_3.DRCT_OR_INDIR_LN_IND,
	PASS_3.INTRO_RATE_IND,
	PASS_3.INTRO_RATE_END_DT,
	PASS_3.FORECLS_IND,
	PASS_3.FORECLS_STAT_CD,
	PASS_3.FNL_PMT_DT,
	PASS_3.LIFE_INS_CD,
	PASS_3.LIFE_INS_EXP_DT,
	PASS_3.PLEDGE_CD,
	PASS_3.LN_FED_CALL_RPT_CD,
	PASS_3.SRC_BKRPT_STAT_CD,
	PASS_3.SEND_NO_BILL_CD,
	PASS_3.OWNR_OCCUPIED_CD,
	PASS_3.FEE_CAT_CD,
	PASS_3.LATE_CHRG_CALC_METH_CD,
	PASS_3.PRIN_OR_INT_ONLY_CD,
	PASS_3.PMT_METH_CD,
	PASS_3.SRC_RENEGOTIATION_CD,
	PASS_3.RENEGOTIATION_CD,
	PASS_3.RENEGOTIATION_DESC,
	PASS_3.SRC_PROG_CD,
	PASS_3.SRC_COLL_CD,
	PASS_3.COLL_CD,
	PASS_3.COLL_DESC,
	PASS_3.SRC_LIEN_PSTN_CD,
	PASS_3.SRC_INT_PMT_FREQ_CD,
	PASS_3.lien_lien_pos,
	PASS_3.LIEN_PSTN,
	PASS_3.INT_PMT_FREQ_CD,
	PASS_3.INT_PMT_FREQ_DESC,
	PASS_3.SRC_PRIN_PMT_FREQ_CD,
	PASS_3.PRIN_PMT_FREQ_CD,
	PASS_3.PRIN_PMT_FREQ_DESC,
	PASS_3.INT_RATE_CLNG_LIFE_OF_LN_PCT,
	PASS_3.INT_RATE_FLR_LIFE_OF_LN_PCT,
	PASS_3.INT_RATE_CLNG_CUR_PRD_PCT,
	PASS_3.INT_RATE_FLR_CUR_PRD_PCT,
	PASS_3.INVSTR_POOL_NBR,
	PASS_3.TIERED_RATE_IND,
	PASS_3.DLR_CD,
	PASS_3.DLR_NBR,
	PASS_3.DLR_RATE,
	PASS_3.CMMT_LVL_CD,
	PASS_3.ULT_PARENT_ACCT_NBR,
	PASS_3.PARENT_REC_IND,
	PASS_3.CHLD_REC_IND,
	PASS_3.COMMUNITY_DVLPMT_IND,
	PASS_3.SRC_DIV_CD,
	PASS_3.SRC_PRPSE_CD,
	PASS_3.SRC_PRPSE_DESC,
	PASS_3.ENTRY_DT,
	PASS_3.SHRD_NTNL_CREDIT_IND,
	PASS_3.LN_PROG_CD,
	PASS_3.SYNDICATED_IND,
	PASS_3.ENTPRS_LEVERAGE_LEND_CD,
	PASS_3.TAX_FREE_IND,
	PASS_3.CMMT_DRAW_IND,
	PASS_3.CMMT_OWN_PCT,
	PASS_3.CMMT_LEAD_PART_IND,
	PASS_3.DLQNY_METH_CD,
	PASS_3.SRC_LN_FED_CALL_RPT_CD,
	PASS_3.LN_REC_CD,
	PASS_3.AVAIL_RLUP_IND,
	PASS_3.AGNT_BANK_NAME,
	PASS_3.SRC_DLQNY_CD,
	PASS_3.SUPERVISORY_LTV_PCT,
	PASS_3.SUPERVISORY_LTV_CAT_DESC,
	PASS_3.SRC_AGNT_BANK_NBR,
	PASS_3.SRC_UNDERWRITING_OFCR_CD,
	PASS_3.PERMT_FINCG_ENTITY_NAME,
	PASS_3.PERMT_FINCG_CD,
	PASS_3.FXD_FEE_BEG_DT,
	PASS_3.FXD_FEE_AMT_CD,
	PASS_3.FXD_FEE_CALC_CD,
	PASS_3.FXD_FEE_DUE_DT,
	PASS_3.FXD_FEE_EARN_CD,
	PASS_3.DISC_AMT,
	PASS_3.SERV_GRP_OR_DEPT,
	PASS_3.ENTPRS_EXIT_DT,
	PASS_3.CL_MODE_X_CD,
	PASS_3.CL_TYP_X_CD,
	PASS_3.LEVERAGE_EXIT_DT,
	PASS_3.LN_ORIG_SYS_ACCT_NBR,
	PASS_3.LN_ORIG_SYS_CD,
	PASS_3.SRC_UNDERWRITING_CC_NBR,
	PASS_3.SRC_FORECLS_STAT_CD,
	PASS_3.SRC_MDM_FCLTY_ID,
	PASS_3.BOOKED_THIS_MTH_IND,
	PASS_3.SRC_PMT_APPL_CD,
	PASS_3.PART_PURCH_PCT,
	PASS_3.PART_PURCH_TOT_CMMT_AMT,
	PASS_3.PART_PURCH_FROM_BANK_NBR,
	PASS_3.PART_PURCH_FROM_BANK_NAME,
	PASS_3.CRA_LN_TYP,
	PASS_3.CRA_LN_TYP_DESC,
	PASS_3.BKRPT_STAT_CD,
	PASS_3.LN_PROG_DESC,
	PASS_3.SBA_LN_NBR,
	PASS_3.SRC_SHDW_SAG_OFCR_CD,
	PASS_3.SRC_SAG_OFCR_CD,
	PASS_3.CENTRALLY_PRCS_IND,
	PASS_3.FDIC_SPPRTD_LN_IND,
	PASS_3.BKRPT_IND,
	PASS_3.BKRPT_STAT_DESC,
	PASS_3.BKRPT_TYP_CD,
	PASS_3.BKRPT_TYP_DESC,
	PASS_3.FORECLS_STAT_DESC,
	PASS_3.LN_ORIG_CHNL_CD,
	PASS_3.PROMO_CD,
	PASS_3.TDR_DT,
	PASS_3.TDR_IND,
	PASS_3.ENERGY_CD,
	PASS_3.ENERGY_CD_DESC,
	PASS_3.SRC_FULLY_CHOF_IND,
	PASS_3.SRC_OREO_IND,
	PASS_3.DISP_CD,
	PASS_3.CNSMR_CREDIT_CNSLNG_IND,
	PASS_3.PORTFOLIO_MGMT_CD,
	PASS_3.PORTFOLIO_MGMT_DESC,
	PASS_3.MOODYS_PROD_CD,
	PASS_3.TBI_CAT_DESC,
	PASS_3.PPR_PROP_TYP_DESC,
	PASS_3.COMML_RE_COLL_IND,
	PASS_3.RE_COLL_IND,
	PASS_3.NTNL_RE_IND,
	PASS_3.BKRPT_DT,
	PASS_3.PART_SNC_RPT_IND,
	PASS_3.REG_W_CD,
	PASS_3.CUPA_ID,
	PASS_3.FRY14_CAT_CD,
	PASS_3.QRM_SEG_CD,
	PASS_3.QRM_SEG_DESC,
	PASS_3.REG_AT_RISK_IND,
	PASS_3.INT_RATE_CLNG_INITL_PRD_PCT,
	PASS_3.LN_UNUSD_AMT_FEE_RATE,
	PASS_3.LEND_ARRANGEMENT_CD,
	PASS_3.LEND_ARRANGEMENT_DESC,
	PASS_3.SRC_BANK_NBR,
	PASS_3.PROD_CD,
	PASS_3.RISK_CLASS_CD_LKP,
	PASS_3.REG_BANK_SHR_EXP_AMT,
	PASS_3.MUNI_RISK_WT_PCT,
	PASS_3.PR_APPL_CD,
	PASS_3.PR_APPL_CD_DESC,
	PASS_3.LEASE_ACCT_DIST_CD,
	PASS_3.NON_ACCR_END_DT,
	PASS_3.PAR_VAL_LN_AMT,
	PASS_3.BUILDER_NAME,
	PASS_3.borm_ln_acct_nbr,
	PASS_3.bois_maturity_date,
	PASS_3.usbo_purchased_code,
	PASS_3.usbo_purch_dt,
	PASS_3.bois_pred_loan_no,
	PASS_3.COLL_MONITOR_RESP_CD,
	PASS_3.COLL_MONITOR_RESP_DESC,
	PASS_3.CREDIT_LMT_EFF_AMT,
	PASS_3.HFI_HFS_CD,
	PASS_3.HFI_HFS_DESC,
	PASS_3.BB_AMT,
	PASS_3.EFF_LMT_CD,
	PASS_3.EFF_LMT_DESC,
	PASS_3.bois_ex_flag_2,
	PASS_3.borm_apprv_date,
	PASS_3.auth_sbl_ind,
	PASS_3.FRB_FHLB_ELIG_PLEDGE_CD
)

# Processing node PASS_5, type TRANSFORMATION
# COLUMN COUNT: 185
# Original node name BASIC_Xfm, link PASS_5

PASS_5 = PASS_4
PASS_5 = PASS_5.withColumn("CollCdRtnIn", when((Len(trim(PASS_4.COLL_CD)) > lit(0) ),(PASS_4.COLL_CD )).otherwise(lit('0001'))).select(
	PASS_4.ACCT_ID.alias('ACCT_ID'),
	PASS_4.AS_OF_DT.alias('AS_OF_DT'),
	PASS_4.APPL_CD.alias('APPL_CD'),
	PASS_4.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	PASS_4.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	PASS_4.CUR_LN_AMT.alias('CUR_LN_AMT'),
	PASS_4.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	PASS_4.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	PASS_4.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	PASS_4.NON_ACCR_IND.alias('NON_ACCR_IND'),
	PASS_4.NON_ACCR_DT.alias('NON_ACCR_DT'),
	PASS_4.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	PASS_4.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	PASS_4.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	PASS_4.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	PASS_4.SOLD_PCT.alias('SOLD_PCT'),
	PASS_4.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	PASS_4.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	PASS_4.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	PASS_4.REVOLVING_IND.alias('REVOLVING_IND'),
	PASS_4.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	PASS_4.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	PASS_4.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	PASS_4.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	PASS_4.FORECLS_IND.alias('FORECLS_IND'),
	PASS_4.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	PASS_4.FNL_PMT_DT.alias('FNL_PMT_DT'),
	PASS_4.LIFE_INS_CD.alias('LIFE_INS_CD'),
	PASS_4.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	PASS_4.PLEDGE_CD.alias('PLEDGE_CD'),
	PASS_4.LN_FED_CALL_RPT_CD.alias('LN_FED_CALL_RPT_CD'),
	PASS_4.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	PASS_4.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	PASS_4.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	PASS_4.FEE_CAT_CD.alias('FEE_CAT_CD'),
	PASS_4.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	PASS_4.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	PASS_4.PMT_METH_CD.alias('PMT_METH_CD'),
	PASS_4.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	PASS_4.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	PASS_4.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	PASS_4.SRC_PROG_CD.alias('SRC_PROG_CD'),
	PASS_4.SRC_COLL_CD.alias('SRC_COLL_CD'),
	PASS_4.COLL_CD.alias('COLL_CD'),
	PASS_4.COLL_DESC.alias('COLL_DESC'),
	PASS_4.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	PASS_4.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	PASS_4.lien_lien_pos.alias('lien_lien_pos'),
	(when((Len(trim(PASS_4.LIEN_PSTN)) == lit(0) ),(lit('0') )).otherwise(PASS_4.LIEN_PSTN)).alias('LIEN_PSTN'),
	PASS_4.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	PASS_4.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	PASS_4.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	PASS_4.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	PASS_4.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	PASS_4.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	PASS_4.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	PASS_4.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	PASS_4.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	PASS_4.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	PASS_4.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	PASS_4.DLR_CD.alias('DLR_CD'),
	PASS_4.DLR_NBR.alias('DLR_NBR'),
	PASS_4.DLR_RATE.alias('DLR_RATE'),
	PASS_4.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	PASS_4.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	PASS_4.PARENT_REC_IND.alias('PARENT_REC_IND'),
	PASS_4.CHLD_REC_IND.alias('CHLD_REC_IND'),
	PASS_4.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	PASS_4.SRC_DIV_CD.alias('SRC_DIV_CD'),
	PASS_4.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	PASS_4.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	PASS_4.ENTRY_DT.alias('ENTRY_DT'),
	PASS_4.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	PASS_4.LN_PROG_CD.alias('LN_PROG_CD'),
	PASS_4.SYNDICATED_IND.alias('SYNDICATED_IND'),
	PASS_4.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_LEND_CD'),
	PASS_4.TAX_FREE_IND.alias('TAX_FREE_IND'),
	PASS_4.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	PASS_4.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	PASS_4.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	PASS_4.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	PASS_4.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	PASS_4.LN_REC_CD.alias('LN_REC_CD'),
	PASS_4.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	PASS_4.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	PASS_4.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	PASS_4.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	PASS_4.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	PASS_4.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	PASS_4.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	PASS_4.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	PASS_4.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	PASS_4.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	PASS_4.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	PASS_4.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	PASS_4.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	PASS_4.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	PASS_4.DISC_AMT.alias('DISC_AMT'),
	PASS_4.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	PASS_4.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	PASS_4.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	PASS_4.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	PASS_4.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	PASS_4.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	PASS_4.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	PASS_4.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	PASS_4.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	PASS_4.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	PASS_4.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	PASS_4.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	PASS_4.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	PASS_4.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	PASS_4.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	PASS_4.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	(GetCraLnTyp(PASS_4.CUR_LN_AMT , PASS_4.PROD_CD , CollCdRtnIn)).alias('CRA_LN_TYP'),
	PASS_4.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	PASS_4.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	PASS_4.LN_PROG_DESC.alias('LN_PROG_DESC'),
	PASS_4.SBA_LN_NBR.alias('SBA_LN_NBR'),
	PASS_4.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	PASS_4.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	PASS_4.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	(when(((PASS_4.FDIC_SPPRTD_LN_IND == None) |(Len(trim(PASS_4.FDIC_SPPRTD_LN_IND)) == lit(0)) ),(lit('N') )).otherwise(PASS_4.FDIC_SPPRTD_LN_IND)).alias('FDIC_SPPRTD_LN_IND'),
	PASS_4.BKRPT_IND.alias('BKRPT_IND'),
	PASS_4.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	PASS_4.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	PASS_4.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	PASS_4.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	PASS_4.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	PASS_4.PROMO_CD.alias('PROMO_CD'),
	PASS_4.TDR_DT.alias('TDR_DT'),
	PASS_4.TDR_IND.alias('TDR_IND'),
	PASS_4.ENERGY_CD.alias('ENERGY_CD'),
	PASS_4.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	PASS_4.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	PASS_4.SRC_OREO_IND.alias('SRC_OREO_IND'),
	PASS_4.DISP_CD.alias('DISP_CD'),
	PASS_4.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	PASS_4.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	PASS_4.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	PASS_4.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	PASS_4.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	PASS_4.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	PASS_4.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	PASS_4.RE_COLL_IND.alias('RE_COLL_IND'),
	PASS_4.NTNL_RE_IND.alias('NTNL_RE_IND'),
	PASS_4.BKRPT_DT.alias('BKRPT_DT'),
	PASS_4.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	PASS_4.REG_W_CD.alias('REG_W_CD'),
	PASS_4.CUPA_ID.alias('CUPA_ID'),
	(when((Len(trim(PASS_4.FRY14_CAT_CD)) > lit(0) , PASS_4.FRY14_CAT_CD , GetFryCatCd(PASS_4.APPL_CD , PASS_4.SRC_BANK_NBR , PASS_4.PROD_CD , CollCdRtnIn ),(PASS_4.RISK_CLASS_CD_LKP )).otherwise(PASS_4.REG_BANK_SHR_EXP_AMT))).alias('FRY14_CAT_CD'),
	PASS_4.QRM_SEG_CD.alias('QRM_SEG_CD'),
	PASS_4.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	PASS_4.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	PASS_4.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	PASS_4.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	PASS_4.lengthD_ARRANGEMENT_CD.alias('LEND_ARRANGEMENT_CD'),
	PASS_4.lengthD_ARRANGEMENT_DESC.alias('LEND_ARRANGEMENT_DESC'),
	(lit('')).alias('LEASE_RISK_MGMT_CC_NBR'),
	PASS_4.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	PASS_4.PR_APPL_CD.alias('PR_APPL_CD'),
	PASS_4.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	PASS_4.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	PASS_4.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	PASS_4.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	PASS_4.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	PASS_4.BUILDER_NAME.alias('BUILDER_NAME'),
	PASS_4.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	PASS_4.bois_maturity_date.alias('bois_maturity_date'),
	PASS_4.usbo_purchased_code.alias('usbo_purchased_code'),
	PASS_4.usbo_purch_dt.alias('usbo_purch_dt'),
	PASS_4.bois_pred_loan_no.alias('bois_pred_loan_no'),
	PASS_4.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	PASS_4.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	PASS_4.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR_1'),
	PASS_4.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	PASS_4.HFI_HFS_CD.alias('HFI_HFS_CD'),
	PASS_4.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	PASS_4.BB_AMT.alias('BB_AMT'),
	PASS_4.EFF_LMT_CD.alias('EFF_LMT_CD'),
	PASS_4.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	PASS_4.bois_ex_flag_2.alias('bois_ex_flag_2'),
	PASS_4.borm_apprv_date.alias('borm_apprv_date'),
	PASS_4.auth_sbl_ind.alias('auth_sbl_ind'),
	PASS_4.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
).filter("Trim(ACCT_ID) > 0")

# Processing node SEQ_OUT, type MERGE
# COLUMN COUNT: 192
# Original node name Lkp_1, link SEQ_OUT

SEQ_OUT = PASS_5.join(CRA_LN_TYP_DESC, [CRA_LN_TYP_DESC.IN_1 == PASS_5.CRA_LN_TYP], 'LEFT_OUTER').join(PORTFOLIO_CD, [PORTFOLIO_CD.usbo_loan_orig_id == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').join(LNPURCHTYPDESC_DS, [LNPURCHTYPDESC_DS.LN_PURCH_TYP_CD == PASS_5.usbo_purchased_code, LNPURCHTYPDESC_DS.APPL_CD == PASS_5.APPL_CD], 'LEFT_OUTER').join(SALESFORCE_ID_IN, [SALESFORCE_ID_IN.usbo_loan_orig_id == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').join(CREDIT_DECSN_INFO, [CREDIT_DECSN_INFO.FIN_TXN_NBR == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').join(APPRO_ONE, [APPRO_ONE.ln_orig_nbr == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').join(APPRO_TWO, [APPRO_TWO.ln_orig_nbr2 == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').join(CRDT_DECISION_DESC, [CRDT_DECISION_DESC.LN_ORIG_SYS_ACCT_NBR == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').join(DSLink529, [DSLink529.app_sys_acct_nbr == PASS_5.LN_ORIG_SYS_ACCT_NBR], 'LEFT_OUTER').select(
	PASS_5.ACCT_ID.alias('ACCT_ID'),
	PASS_5.AS_OF_DT.alias('AS_OF_DT'),
	PASS_5.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	PASS_5.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	PASS_5.CUR_LN_AMT.alias('CUR_LN_AMT'),
	PASS_5.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	PASS_5.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	PASS_5.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	PASS_5.NON_ACCR_IND.alias('NON_ACCR_IND'),
	PASS_5.NON_ACCR_DT.alias('NON_ACCR_DT'),
	PASS_5.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	PASS_5.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	PASS_5.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	PASS_5.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	PASS_5.SOLD_PCT.alias('SOLD_PCT'),
	PASS_5.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	PASS_5.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	PASS_5.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	PASS_5.REVOLVING_IND.alias('REVOLVING_IND'),
	PASS_5.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	PASS_5.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	PASS_5.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	PASS_5.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	PASS_5.FORECLS_IND.alias('FORECLS_IND'),
	PASS_5.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	PASS_5.FNL_PMT_DT.alias('FNL_PMT_DT'),
	PASS_5.LIFE_INS_CD.alias('LIFE_INS_CD'),
	PASS_5.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	PASS_5.PLEDGE_CD.alias('PLEDGE_CD'),
	PASS_5.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	PASS_5.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	PASS_5.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	PASS_5.FEE_CAT_CD.alias('FEE_CAT_CD'),
	PASS_5.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	PASS_5.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	PASS_5.PMT_METH_CD.alias('PMT_METH_CD'),
	PASS_5.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	PASS_5.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	PASS_5.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	PASS_5.SRC_PROG_CD.alias('SRC_PROG_CD'),
	PASS_5.SRC_COLL_CD.alias('SRC_COLL_CD'),
	PASS_5.COLL_CD.alias('COLL_CD'),
	PASS_5.COLL_DESC.alias('COLL_DESC'),
	PASS_5.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	PASS_5.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	PASS_5.LIEN_PSTN.alias('LIEN_PSTN'),
	PASS_5.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	PASS_5.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	PASS_5.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	PASS_5.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	PASS_5.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	PASS_5.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	PASS_5.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	PASS_5.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	PASS_5.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	PASS_5.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	PASS_5.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	PASS_5.DLR_CD.alias('DLR_CD'),
	PASS_5.DLR_NBR.alias('DLR_NBR'),
	PASS_5.DLR_RATE.alias('DLR_RATE'),
	PASS_5.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	PASS_5.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	PASS_5.PARENT_REC_IND.alias('PARENT_REC_IND'),
	PASS_5.CHLD_REC_IND.alias('CHLD_REC_IND'),
	PASS_5.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	PASS_5.SRC_DIV_CD.alias('SRC_DIV_CD'),
	PASS_5.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	PASS_5.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	PASS_5.ENTRY_DT.alias('ENTRY_DT'),
	PASS_5.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	PASS_5.LN_PROG_CD.alias('LN_PROG_CD'),
	PASS_5.SYNDICATED_IND.alias('SYNDICATED_IND'),
	PASS_5.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_lengthD_CD'),
	PASS_5.TAX_FREE_IND.alias('TAX_FREE_IND'),
	PASS_5.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	PASS_5.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	PASS_5.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	PASS_5.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	PASS_5.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	PASS_5.LN_REC_CD.alias('LN_REC_CD'),
	PASS_5.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	PASS_5.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	PASS_5.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	PASS_5.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	PASS_5.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	PASS_5.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	PASS_5.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	PASS_5.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	PASS_5.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	PASS_5.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	PASS_5.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	PASS_5.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	PASS_5.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	PASS_5.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	PASS_5.DISC_AMT.alias('DISC_AMT'),
	PASS_5.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	PASS_5.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	PASS_5.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	PASS_5.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	PASS_5.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	PASS_5.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	PASS_5.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	PASS_5.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	PASS_5.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	PASS_5.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	PASS_5.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	PASS_5.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	PASS_5.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	PASS_5.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	PASS_5.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	PASS_5.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	PASS_5.CRA_LN_TYP.alias('CRA_LN_TYP'),
	CRA_LN_TYP_DESC.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	PASS_5.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	PASS_5.LN_PROG_DESC.alias('LN_PROG_DESC'),
	PASS_5.SBA_LN_NBR.alias('SBA_LN_NBR'),
	PASS_5.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	PASS_5.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	PASS_5.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	PASS_5.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	PASS_5.BKRPT_IND.alias('BKRPT_IND'),
	PASS_5.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	PASS_5.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	PASS_5.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	PASS_5.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	PASS_5.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	PASS_5.PROMO_CD.alias('PROMO_CD'),
	PASS_5.TDR_DT.alias('TDR_DT'),
	PASS_5.TDR_IND.alias('TDR_IND'),
	PASS_5.ENERGY_CD.alias('ENERGY_CD'),
	PASS_5.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	PASS_5.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	PASS_5.SRC_OREO_IND.alias('SRC_OREO_IND'),
	PASS_5.DISP_CD.alias('DISP_CD'),
	PASS_5.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	PASS_5.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	PASS_5.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	PASS_5.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	PASS_5.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	PASS_5.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	PASS_5.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	PASS_5.RE_COLL_IND.alias('RE_COLL_IND'),
	PASS_5.NTNL_RE_IND.alias('NTNL_RE_IND'),
	PASS_5.BKRPT_DT.alias('BKRPT_DT'),
	PASS_5.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	PASS_5.REG_W_CD.alias('REG_W_CD'),
	PASS_5.CUPA_ID.alias('CUPA_ID'),
	PASS_5.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	PASS_5.QRM_SEG_CD.alias('QRM_SEG_CD'),
	PASS_5.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	PASS_5.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	PASS_5.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	PASS_5.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	PASS_5.lengthD_ARRANGEMENT_CD.alias('lengthD_ARRANGEMENT_CD'),
	PASS_5.lengthD_ARRANGEMENT_DESC.alias('lengthD_ARRANGEMENT_DESC'),
	PASS_5.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	PASS_5.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	PASS_5.PR_APPL_CD.alias('PR_APPL_CD'),
	PASS_5.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	PASS_5.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	PASS_5.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	PASS_5.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	PORTFOLIO_CD.PMC_CODE.alias('PMC_CODE'),
	PASS_5.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	PASS_5.BUILDER_NAME.alias('BUILDER_NAME'),
	PASS_5.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	PASS_5.bois_maturity_date.alias('bois_maturity_date'),
	PASS_5.usbo_purchased_code.alias('usbo_purchased_code'),
	PASS_5.usbo_purch_dt.alias('usbo_purch_dt'),
	LNPURCHTYPDESC_DS.LN_PURCH_TYP_DESC.alias('LN_PURCH_TYP_DESC'),
	PASS_5.bois_pred_loan_no.alias('bois_pred_loan_no'),
	PASS_5.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	PASS_5.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	SALESFORCE_ID_IN.SALESFORCE_ID.alias('SALESFORCE_ID'),
	CREDIT_DECSN_INFO.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME.alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD'),
	APPRO_ONE.credit_decsn_override_auth_lvl_name.alias('credit_decsn_override_auth_lvl_name_appro_one'),
	APPRO_TWO.credit_decsn_override_auth_lvl_name.alias('credit_decsn_override_auth_lvl_name_appro_two'),
	PASS_5.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	PASS_5.HFI_HFS_CD.alias('HFI_HFS_CD'),
	PASS_5.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	PASS_5.BB_AMT.alias('BB_AMT'),
	PASS_5.EFF_LMT_CD.alias('EFF_LMT_CD'),
	PASS_5.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	CRDT_DECISION_DESC.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	CRDT_DECISION_DESC.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	DSLink529.appid.alias('appid'),
	DSLink529.appdetailid.alias('appdetailid'),
	DSLink529.productid.alias('productid'),
	PASS_5.bois_ex_flag_2.alias('bois_ex_flag_2'),
	PASS_5.borm_apprv_date.alias('borm_apprv_date'),
	PASS_5.auth_sbl_ind.alias('auth_sbl_ind'),
	PASS_5.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node LKP_529_Out, type MERGE
# COLUMN COUNT: 194
# Original node name Lookup_529, link LKP_529_Out

LKP_529_Out = SEQ_OUT.join(APPDETSTIPS, [APPDETSTIPS.appid == SEQ_OUT.appid, APPDETSTIPS.appdetailid == SEQ_OUT.appdetailid], 'LEFT_OUTER').join(PRODUCT, [PRODUCT.productid == SEQ_OUT.productid], 'LEFT_OUTER').select(
	SEQ_OUT.ACCT_ID.alias('ACCT_ID'),
	SEQ_OUT.AS_OF_DT.alias('AS_OF_DT'),
	SEQ_OUT.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	SEQ_OUT.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	SEQ_OUT.CUR_LN_AMT.alias('CUR_LN_AMT'),
	SEQ_OUT.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	SEQ_OUT.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	SEQ_OUT.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	SEQ_OUT.NON_ACCR_IND.alias('NON_ACCR_IND'),
	SEQ_OUT.NON_ACCR_DT.alias('NON_ACCR_DT'),
	SEQ_OUT.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	SEQ_OUT.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	SEQ_OUT.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	SEQ_OUT.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	SEQ_OUT.SOLD_PCT.alias('SOLD_PCT'),
	SEQ_OUT.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	SEQ_OUT.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	SEQ_OUT.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	SEQ_OUT.REVOLVING_IND.alias('REVOLVING_IND'),
	SEQ_OUT.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	SEQ_OUT.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	SEQ_OUT.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	SEQ_OUT.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	SEQ_OUT.FORECLS_IND.alias('FORECLS_IND'),
	SEQ_OUT.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	SEQ_OUT.FNL_PMT_DT.alias('FNL_PMT_DT'),
	SEQ_OUT.LIFE_INS_CD.alias('LIFE_INS_CD'),
	SEQ_OUT.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	SEQ_OUT.PLEDGE_CD.alias('PLEDGE_CD'),
	SEQ_OUT.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	SEQ_OUT.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	SEQ_OUT.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	SEQ_OUT.FEE_CAT_CD.alias('FEE_CAT_CD'),
	SEQ_OUT.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	SEQ_OUT.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	SEQ_OUT.PMT_METH_CD.alias('PMT_METH_CD'),
	SEQ_OUT.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	SEQ_OUT.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	SEQ_OUT.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	SEQ_OUT.SRC_PROG_CD.alias('SRC_PROG_CD'),
	SEQ_OUT.SRC_COLL_CD.alias('SRC_COLL_CD'),
	SEQ_OUT.COLL_CD.alias('COLL_CD'),
	SEQ_OUT.COLL_DESC.alias('COLL_DESC'),
	SEQ_OUT.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	SEQ_OUT.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	SEQ_OUT.LIEN_PSTN.alias('LIEN_PSTN'),
	SEQ_OUT.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	SEQ_OUT.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	SEQ_OUT.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	SEQ_OUT.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	SEQ_OUT.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	SEQ_OUT.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	SEQ_OUT.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	SEQ_OUT.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	SEQ_OUT.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	SEQ_OUT.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	SEQ_OUT.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	SEQ_OUT.DLR_CD.alias('DLR_CD'),
	SEQ_OUT.DLR_NBR.alias('DLR_NBR'),
	SEQ_OUT.DLR_RATE.alias('DLR_RATE'),
	SEQ_OUT.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	SEQ_OUT.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	SEQ_OUT.PARENT_REC_IND.alias('PARENT_REC_IND'),
	SEQ_OUT.CHLD_REC_IND.alias('CHLD_REC_IND'),
	SEQ_OUT.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	SEQ_OUT.SRC_DIV_CD.alias('SRC_DIV_CD'),
	SEQ_OUT.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	SEQ_OUT.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	SEQ_OUT.ENTRY_DT.alias('ENTRY_DT'),
	SEQ_OUT.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	SEQ_OUT.LN_PROG_CD.alias('LN_PROG_CD'),
	SEQ_OUT.SYNDICATED_IND.alias('SYNDICATED_IND'),
	SEQ_OUT.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_lengthD_CD'),
	SEQ_OUT.TAX_FREE_IND.alias('TAX_FREE_IND'),
	SEQ_OUT.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	SEQ_OUT.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	SEQ_OUT.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	SEQ_OUT.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	SEQ_OUT.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	SEQ_OUT.LN_REC_CD.alias('LN_REC_CD'),
	SEQ_OUT.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	SEQ_OUT.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	SEQ_OUT.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	SEQ_OUT.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	SEQ_OUT.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	SEQ_OUT.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	SEQ_OUT.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	SEQ_OUT.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	SEQ_OUT.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	SEQ_OUT.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	SEQ_OUT.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	SEQ_OUT.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	SEQ_OUT.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	SEQ_OUT.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	SEQ_OUT.DISC_AMT.alias('DISC_AMT'),
	SEQ_OUT.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	SEQ_OUT.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	SEQ_OUT.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	SEQ_OUT.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	SEQ_OUT.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	SEQ_OUT.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	SEQ_OUT.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	SEQ_OUT.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	SEQ_OUT.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	SEQ_OUT.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	SEQ_OUT.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	SEQ_OUT.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	SEQ_OUT.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	SEQ_OUT.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	SEQ_OUT.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	SEQ_OUT.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	SEQ_OUT.CRA_LN_TYP.alias('CRA_LN_TYP'),
	SEQ_OUT.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	SEQ_OUT.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	SEQ_OUT.LN_PROG_DESC.alias('LN_PROG_DESC'),
	SEQ_OUT.SBA_LN_NBR.alias('SBA_LN_NBR'),
	SEQ_OUT.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	SEQ_OUT.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	SEQ_OUT.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	SEQ_OUT.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	SEQ_OUT.BKRPT_IND.alias('BKRPT_IND'),
	SEQ_OUT.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	SEQ_OUT.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	SEQ_OUT.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	SEQ_OUT.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	SEQ_OUT.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	SEQ_OUT.PROMO_CD.alias('PROMO_CD'),
	SEQ_OUT.TDR_DT.alias('TDR_DT'),
	SEQ_OUT.TDR_IND.alias('TDR_IND'),
	SEQ_OUT.ENERGY_CD.alias('ENERGY_CD'),
	SEQ_OUT.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	SEQ_OUT.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	SEQ_OUT.SRC_OREO_IND.alias('SRC_OREO_IND'),
	SEQ_OUT.DISP_CD.alias('DISP_CD'),
	SEQ_OUT.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	SEQ_OUT.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	SEQ_OUT.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	SEQ_OUT.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	SEQ_OUT.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	SEQ_OUT.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	SEQ_OUT.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	SEQ_OUT.RE_COLL_IND.alias('RE_COLL_IND'),
	SEQ_OUT.NTNL_RE_IND.alias('NTNL_RE_IND'),
	SEQ_OUT.BKRPT_DT.alias('BKRPT_DT'),
	SEQ_OUT.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	SEQ_OUT.REG_W_CD.alias('REG_W_CD'),
	SEQ_OUT.CUPA_ID.alias('CUPA_ID'),
	SEQ_OUT.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	SEQ_OUT.QRM_SEG_CD.alias('QRM_SEG_CD'),
	SEQ_OUT.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	SEQ_OUT.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	SEQ_OUT.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	SEQ_OUT.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	SEQ_OUT.lengthD_ARRANGEMENT_CD.alias('lengthD_ARRANGEMENT_CD'),
	SEQ_OUT.lengthD_ARRANGEMENT_DESC.alias('lengthD_ARRANGEMENT_DESC'),
	SEQ_OUT.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	SEQ_OUT.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	SEQ_OUT.PR_APPL_CD.alias('PR_APPL_CD'),
	SEQ_OUT.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	SEQ_OUT.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	SEQ_OUT.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	SEQ_OUT.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	SEQ_OUT.PMC_CODE.alias('PMC_CODE'),
	SEQ_OUT.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	SEQ_OUT.BUILDER_NAME.alias('BUILDER_NAME'),
	SEQ_OUT.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	SEQ_OUT.bois_maturity_date.alias('bois_maturity_date'),
	SEQ_OUT.usbo_purchased_code.alias('usbo_purchased_code'),
	SEQ_OUT.usbo_purch_dt.alias('usbo_purch_dt'),
	SEQ_OUT.LN_PURCH_TYP_DESC.alias('LN_PURCH_TYP_DESC'),
	SEQ_OUT.bois_pred_loan_no.alias('bois_pred_loan_no'),
	SEQ_OUT.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	SEQ_OUT.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	SEQ_OUT.SALESFORCE_ID.alias('SALESFORCE_ID'),
	SEQ_OUT.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD.alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD'),
	SEQ_OUT.credit_decsn_override_auth_lvl_name_appro_one.alias('credit_decsn_override_auth_lvl_name_appro_one'),
	SEQ_OUT.credit_decsn_override_auth_lvl_name_appro_two.alias('credit_decsn_override_auth_lvl_name_appro_two'),
	SEQ_OUT.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	SEQ_OUT.HFI_HFS_CD.alias('HFI_HFS_CD'),
	SEQ_OUT.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	SEQ_OUT.BB_AMT.alias('BB_AMT'),
	SEQ_OUT.EFF_LMT_CD.alias('EFF_LMT_CD'),
	SEQ_OUT.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	SEQ_OUT.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	SEQ_OUT.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	SEQ_OUT.appid.alias('appid'),
	APPDETSTIPS.appdetailid.alias('appdetailid'),
	SEQ_OUT.bois_ex_flag_2.alias('bois_ex_flag_2'),
	SEQ_OUT.borm_apprv_date.alias('borm_apprv_date'),
	SEQ_OUT.auth_sbl_ind.alias('auth_sbl_ind'),
	APPDETSTIPS.stipid.alias('stipid'),
	APPDETSTIPS.stipstatuscode.alias('stipstatuscode'),
	PRODUCT.productcatid.alias('productcatid'),
	SEQ_OUT.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node SEQ_OUT1_CONV3, type TRANSFORMATION
# COLUMN COUNT: 186
# Original node name Transformer_530, link SEQ_OUT1_CONV3

SEQ_OUT1_CONV3 = LKP_529_Out.select(
	LKP_529_Out.ACCT_ID.alias('ACCT_ID'),
	LKP_529_Out.AS_OF_DT.alias('AS_OF_DT'),
	LKP_529_Out.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	LKP_529_Out.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	LKP_529_Out.CUR_LN_AMT.alias('CUR_LN_AMT'),
	LKP_529_Out.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	LKP_529_Out.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	LKP_529_Out.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	LKP_529_Out.NON_ACCR_IND.alias('NON_ACCR_IND'),
	LKP_529_Out.NON_ACCR_DT.alias('NON_ACCR_DT'),
	LKP_529_Out.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	LKP_529_Out.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	LKP_529_Out.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	LKP_529_Out.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	LKP_529_Out.SOLD_PCT.alias('SOLD_PCT'),
	LKP_529_Out.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	LKP_529_Out.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	LKP_529_Out.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	LKP_529_Out.REVOLVING_IND.alias('REVOLVING_IND'),
	LKP_529_Out.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	LKP_529_Out.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	LKP_529_Out.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	LKP_529_Out.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	LKP_529_Out.FORECLS_IND.alias('FORECLS_IND'),
	LKP_529_Out.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	LKP_529_Out.FNL_PMT_DT.alias('FNL_PMT_DT'),
	LKP_529_Out.LIFE_INS_CD.alias('LIFE_INS_CD'),
	LKP_529_Out.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	LKP_529_Out.PLEDGE_CD.alias('PLEDGE_CD'),
	LKP_529_Out.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	LKP_529_Out.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	LKP_529_Out.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	LKP_529_Out.FEE_CAT_CD.alias('FEE_CAT_CD'),
	LKP_529_Out.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	LKP_529_Out.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	LKP_529_Out.PMT_METH_CD.alias('PMT_METH_CD'),
	LKP_529_Out.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	LKP_529_Out.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	LKP_529_Out.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	LKP_529_Out.SRC_PROG_CD.alias('SRC_PROG_CD'),
	LKP_529_Out.SRC_COLL_CD.alias('SRC_COLL_CD'),
	LKP_529_Out.COLL_CD.alias('COLL_CD'),
	LKP_529_Out.COLL_DESC.alias('COLL_DESC'),
	LKP_529_Out.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	LKP_529_Out.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	LKP_529_Out.LIEN_PSTN.alias('LIEN_PSTN'),
	LKP_529_Out.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	LKP_529_Out.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	LKP_529_Out.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	LKP_529_Out.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	LKP_529_Out.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	LKP_529_Out.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	LKP_529_Out.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	LKP_529_Out.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	LKP_529_Out.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	LKP_529_Out.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	LKP_529_Out.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	LKP_529_Out.DLR_CD.alias('DLR_CD'),
	LKP_529_Out.DLR_NBR.alias('DLR_NBR'),
	LKP_529_Out.DLR_RATE.alias('DLR_RATE'),
	LKP_529_Out.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	LKP_529_Out.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	LKP_529_Out.PARENT_REC_IND.alias('PARENT_REC_IND'),
	LKP_529_Out.CHLD_REC_IND.alias('CHLD_REC_IND'),
	LKP_529_Out.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	LKP_529_Out.SRC_DIV_CD.alias('SRC_DIV_CD'),
	LKP_529_Out.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	LKP_529_Out.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	LKP_529_Out.ENTRY_DT.alias('ENTRY_DT'),
	LKP_529_Out.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	LKP_529_Out.LN_PROG_CD.alias('LN_PROG_CD'),
	LKP_529_Out.SYNDICATED_IND.alias('SYNDICATED_IND'),
	LKP_529_Out.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_LEND_CD'),
	LKP_529_Out.TAX_FREE_IND.alias('TAX_FREE_IND'),
	LKP_529_Out.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	LKP_529_Out.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	LKP_529_Out.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	LKP_529_Out.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	LKP_529_Out.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	LKP_529_Out.LN_REC_CD.alias('LN_REC_CD'),
	LKP_529_Out.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	LKP_529_Out.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	LKP_529_Out.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	LKP_529_Out.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	LKP_529_Out.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	LKP_529_Out.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	LKP_529_Out.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	LKP_529_Out.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	LKP_529_Out.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	LKP_529_Out.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	LKP_529_Out.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	LKP_529_Out.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	LKP_529_Out.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	LKP_529_Out.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	LKP_529_Out.DISC_AMT.alias('DISC_AMT'),
	LKP_529_Out.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	LKP_529_Out.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	LKP_529_Out.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	LKP_529_Out.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	LKP_529_Out.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	LKP_529_Out.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	LKP_529_Out.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	LKP_529_Out.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	LKP_529_Out.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	LKP_529_Out.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	LKP_529_Out.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	LKP_529_Out.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	LKP_529_Out.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	LKP_529_Out.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	LKP_529_Out.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	LKP_529_Out.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	LKP_529_Out.CRA_LN_TYP.alias('CRA_LN_TYP'),
	LKP_529_Out.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	LKP_529_Out.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	(when((LKP_529_Out.bois_ex_flag_2 != lit('1') , lit('N') ).otherwise(when((LKP_529_Out.productcatid == lit('2') ).otherwise(lit('Y') ).otherwise(when(((LKP_529_Out.productcatid == lit('3')) &(LKP_529_Out.borm_apprv_date >= lit('2018-01-01')) ).otherwise(lit('N') ).otherwise(IFF(LKP_529_Out.appdetailid IS NOT None )).otherwise((lit('Y') ))).otherwise((IFF((LKP_529_Out.appid == None) &(LKP_529_Out.auth_sbl_ind == lit('1')) ))).otherwise((lit('Y') )).otherwise(lit('N'))))))).alias('APPR_BY_APPL_ONLY_IND'),
	LKP_529_Out.LN_PROG_DESC.alias('LN_PROG_DESC'),
	LKP_529_Out.SBA_LN_NBR.alias('SBA_LN_NBR'),
	LKP_529_Out.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	LKP_529_Out.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	LKP_529_Out.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	LKP_529_Out.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	LKP_529_Out.BKRPT_IND.alias('BKRPT_IND'),
	LKP_529_Out.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	LKP_529_Out.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	LKP_529_Out.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	LKP_529_Out.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	LKP_529_Out.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	LKP_529_Out.PROMO_CD.alias('PROMO_CD'),
	LKP_529_Out.TDR_DT.alias('TDR_DT'),
	LKP_529_Out.TDR_IND.alias('TDR_IND'),
	LKP_529_Out.ENERGY_CD.alias('ENERGY_CD'),
	LKP_529_Out.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	LKP_529_Out.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	LKP_529_Out.SRC_OREO_IND.alias('SRC_OREO_IND'),
	LKP_529_Out.DISP_CD.alias('DISP_CD'),
	LKP_529_Out.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	LKP_529_Out.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	LKP_529_Out.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	LKP_529_Out.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	LKP_529_Out.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	LKP_529_Out.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	LKP_529_Out.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	LKP_529_Out.RE_COLL_IND.alias('RE_COLL_IND'),
	LKP_529_Out.NTNL_RE_IND.alias('NTNL_RE_IND'),
	LKP_529_Out.BKRPT_DT.alias('BKRPT_DT'),
	LKP_529_Out.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	LKP_529_Out.REG_W_CD.alias('REG_W_CD'),
	LKP_529_Out.CUPA_ID.alias('CUPA_ID'),
	LKP_529_Out.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	LKP_529_Out.QRM_SEG_CD.alias('QRM_SEG_CD'),
	LKP_529_Out.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	LKP_529_Out.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	LKP_529_Out.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	LKP_529_Out.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	LKP_529_Out.lengthD_ARRANGEMENT_CD.alias('LEND_ARRANGEMENT_CD'),
	LKP_529_Out.lengthD_ARRANGEMENT_DESC.alias('LEND_ARRANGEMENT_DESC'),
	LKP_529_Out.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	LKP_529_Out.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	LKP_529_Out.PR_APPL_CD.alias('PR_APPL_CD'),
	LKP_529_Out.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	LKP_529_Out.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	LKP_529_Out.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	LKP_529_Out.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	LKP_529_Out.PMC_CODE.alias('PMC_CODE'),
	LKP_529_Out.SRC_BANK_NBR.alias('SRC_BANK_NBR'),
	LKP_529_Out.BUILDER_NAME.alias('BUILDER_NAME'),
	LKP_529_Out.borm_ln_acct_nbr.alias('borm_ln_acct_nbr'),
	LKP_529_Out.bois_maturity_date.alias('bois_maturity_date'),
	LKP_529_Out.usbo_purchased_code.alias('usbo_purchased_code'),
	LKP_529_Out.usbo_purch_dt.alias('usbo_purch_dt'),
	LKP_529_Out.LN_PURCH_TYP_DESC.alias('LN_PURCH_TYP_DESC'),
	LKP_529_Out.bois_pred_loan_no.alias('bois_pred_loan_no'),
	LKP_529_Out.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	LKP_529_Out.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	LKP_529_Out.SALESFORCE_ID.alias('SALESFORCE_ID'),
	LKP_529_Out.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD.alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD'),
	(when((LKP_529_Out.credit_decsn_override_auth_lvl_name_appro_one == None ),(LKP_529_Out.credit_decsn_override_auth_lvl_name_appro_two )).otherwise(LKP_529_Out.credit_decsn_override_auth_lvl_name_appro_one)).alias('credit_decsn_override_auth_lvl_name_appro_final'),
	LKP_529_Out.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	LKP_529_Out.HFI_HFS_CD.alias('HFI_HFS_CD'),
	LKP_529_Out.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	LKP_529_Out.BB_AMT.alias('BB_AMT'),
	LKP_529_Out.EFF_LMT_CD.alias('EFF_LMT_CD'),
	LKP_529_Out.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	LKP_529_Out.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	LKP_529_Out.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	LKP_529_Out.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node SEQ_OUT_CONV4, type TRANSFORMATION
# COLUMN COUNT: 182
# Original node name Xfm_1, link SEQ_OUT_CONV4

SEQ_OUT_CONV4 = SEQ_OUT1_CONV3.select(
	SEQ_OUT1.ACCT_ID.alias('ACCT_ID'),
	SEQ_OUT1.AS_OF_DT.alias('AS_OF_DT'),
	SEQ_OUT1.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	SEQ_OUT1.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	SEQ_OUT1.CUR_LN_AMT.alias('CUR_LN_AMT'),
	SEQ_OUT1.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	SEQ_OUT1.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	SEQ_OUT1.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	SEQ_OUT1.NON_ACCR_IND.alias('NON_ACCR_IND'),
	SEQ_OUT1.NON_ACCR_DT.alias('NON_ACCR_DT'),
	SEQ_OUT1.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	SEQ_OUT1.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	SEQ_OUT1.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	SEQ_OUT1.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	SEQ_OUT1.SOLD_PCT.alias('SOLD_PCT'),
	SEQ_OUT1.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	SEQ_OUT1.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	SEQ_OUT1.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	SEQ_OUT1.REVOLVING_IND.alias('REVOLVING_IND'),
	SEQ_OUT1.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	SEQ_OUT1.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	SEQ_OUT1.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	SEQ_OUT1.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	SEQ_OUT1.FORECLS_IND.alias('FORECLS_IND'),
	SEQ_OUT1.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	SEQ_OUT1.FNL_PMT_DT.alias('FNL_PMT_DT'),
	SEQ_OUT1.LIFE_INS_CD.alias('LIFE_INS_CD'),
	SEQ_OUT1.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	SEQ_OUT1.PLEDGE_CD.alias('PLEDGE_CD'),
	SEQ_OUT1.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	SEQ_OUT1.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	SEQ_OUT1.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	SEQ_OUT1.FEE_CAT_CD.alias('FEE_CAT_CD'),
	SEQ_OUT1.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	SEQ_OUT1.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	SEQ_OUT1.PMT_METH_CD.alias('PMT_METH_CD'),
	SEQ_OUT1.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	SEQ_OUT1.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	SEQ_OUT1.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	SEQ_OUT1.SRC_PROG_CD.alias('SRC_PROG_CD'),
	SEQ_OUT1.SRC_COLL_CD.alias('SRC_COLL_CD'),
	SEQ_OUT1.COLL_CD.alias('COLL_CD'),
	SEQ_OUT1.COLL_DESC.alias('COLL_DESC'),
	SEQ_OUT1.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	SEQ_OUT1.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	SEQ_OUT1.LIEN_PSTN.alias('LIEN_PSTN'),
	SEQ_OUT1.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	SEQ_OUT1.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	SEQ_OUT1.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	SEQ_OUT1.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	SEQ_OUT1.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	SEQ_OUT1.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	SEQ_OUT1.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	SEQ_OUT1.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	SEQ_OUT1.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	SEQ_OUT1.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	SEQ_OUT1.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	SEQ_OUT1.DLR_CD.alias('DLR_CD'),
	SEQ_OUT1.DLR_NBR.alias('DLR_NBR'),
	SEQ_OUT1.DLR_RATE.alias('DLR_RATE'),
	SEQ_OUT1.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	SEQ_OUT1.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	SEQ_OUT1.PARENT_REC_IND.alias('PARENT_REC_IND'),
	SEQ_OUT1.CHLD_REC_IND.alias('CHLD_REC_IND'),
	SEQ_OUT1.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	SEQ_OUT1.SRC_DIV_CD.alias('SRC_DIV_CD'),
	SEQ_OUT1.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	SEQ_OUT1.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	SEQ_OUT1.ENTRY_DT.alias('ENTRY_DT'),
	SEQ_OUT1.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	SEQ_OUT1.LN_PROG_CD.alias('LN_PROG_CD'),
	SEQ_OUT1.SYNDICATED_IND.alias('SYNDICATED_IND'),
	SEQ_OUT1.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_LEND_CD'),
	SEQ_OUT1.TAX_FREE_IND.alias('TAX_FREE_IND'),
	SEQ_OUT1.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	SEQ_OUT1.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	SEQ_OUT1.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	SEQ_OUT1.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	SEQ_OUT1.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	SEQ_OUT1.LN_REC_CD.alias('LN_REC_CD'),
	SEQ_OUT1.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	SEQ_OUT1.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	SEQ_OUT1.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	SEQ_OUT1.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	SEQ_OUT1.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	SEQ_OUT1.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	SEQ_OUT1.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	SEQ_OUT1.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	SEQ_OUT1.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	SEQ_OUT1.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	SEQ_OUT1.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	SEQ_OUT1.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	SEQ_OUT1.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	SEQ_OUT1.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	SEQ_OUT1.DISC_AMT.alias('DISC_AMT'),
	SEQ_OUT1.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	SEQ_OUT1.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	SEQ_OUT1.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	SEQ_OUT1.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	SEQ_OUT1.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	SEQ_OUT1.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	SEQ_OUT1.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	SEQ_OUT1.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	SEQ_OUT1.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	SEQ_OUT1.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	SEQ_OUT1.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	SEQ_OUT1.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	SEQ_OUT1.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	SEQ_OUT1.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	SEQ_OUT1.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	SEQ_OUT1.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	SEQ_OUT1.CRA_LN_TYP.alias('CRA_LN_TYP'),
	SEQ_OUT1.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	SEQ_OUT1.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	SEQ_OUT1.APPR_BY_APPL_ONLY_IND.alias('APPR_BY_APPL_ONLY_IND'),
	SEQ_OUT1.LN_PROG_DESC.alias('LN_PROG_DESC'),
	SEQ_OUT1.SBA_LN_NBR.alias('SBA_LN_NBR'),
	SEQ_OUT1.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	SEQ_OUT1.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	SEQ_OUT1.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	SEQ_OUT1.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	SEQ_OUT1.BKRPT_IND.alias('BKRPT_IND'),
	SEQ_OUT1.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	SEQ_OUT1.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	SEQ_OUT1.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	SEQ_OUT1.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	SEQ_OUT1.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	SEQ_OUT1.PROMO_CD.alias('PROMO_CD'),
	SEQ_OUT1.TDR_DT.alias('TDR_DT'),
	SEQ_OUT1.TDR_IND.alias('TDR_IND'),
	SEQ_OUT1.ENERGY_CD.alias('ENERGY_CD'),
	SEQ_OUT1.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	SEQ_OUT1.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	SEQ_OUT1.SRC_OREO_IND.alias('SRC_OREO_IND'),
	SEQ_OUT1.DISP_CD.alias('DISP_CD'),
	SEQ_OUT1.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	(when(((SEQ_OUT1.SRC_BANK_NBR == lit('113')) &(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0)) &(trim(SEQ_OUT1.PMC_CODE) == lit('BWXX')) ),(None )).otherwise(trim(SEQ_OUT1.PMC_CODE))).alias('PORTFOLIO_MGMT_CD'),
	(when(((SEQ_OUT1.SRC_BANK_NBR == lit('113')) &(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0)) &(trim(SEQ_OUT1.PMC_CODE) == lit('BWXX')) , None ).otherwise(when(((SEQ_OUT1.SRC_BANK_NBR == lit('113')) &(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0)) &(trim(SEQ_OUT1.PMC_CODE) != lit('BWXX')) ).otherwise(lit('BBC') )).otherwise((IFF(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0) ))).otherwise((lit('PMC') )).otherwise(None)))).alias('PORTFOLIO_MGMT_DESC'),
	SEQ_OUT1.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	SEQ_OUT1.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	SEQ_OUT1.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	SEQ_OUT1.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	SEQ_OUT1.RE_COLL_IND.alias('RE_COLL_IND'),
	SEQ_OUT1.NTNL_RE_IND.alias('NTNL_RE_IND'),
	SEQ_OUT1.BKRPT_DT.alias('BKRPT_DT'),
	SEQ_OUT1.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	SEQ_OUT1.REG_W_CD.alias('REG_W_CD'),
	SEQ_OUT1.CUPA_ID.alias('CUPA_ID'),
	SEQ_OUT1.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	SEQ_OUT1.QRM_SEG_CD.alias('QRM_SEG_CD'),
	SEQ_OUT1.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	SEQ_OUT1.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	SEQ_OUT1.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	SEQ_OUT1.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	SEQ_OUT1.lengthD_ARRANGEMENT_CD.alias('LEND_ARRANGEMENT_CD'),
	SEQ_OUT1.lengthD_ARRANGEMENT_DESC.alias('LEND_ARRANGEMENT_DESC'),
	SEQ_OUT1.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	SEQ_OUT1.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	SEQ_OUT1.PR_APPL_CD.alias('PR_APPL_CD'),
	SEQ_OUT1.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	SEQ_OUT1.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	SEQ_OUT1.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	SEQ_OUT1.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	SEQ_OUT1.BUILDER_NAME.alias('BUILDER_NAME'),
	SEQ_OUT1.usbo_purchased_code.alias('LN_PURCH_TYP_CD'),
	SEQ_OUT1.usbo_purch_dt.alias('LN_PURCH_DT'),
	(substring(trim(SEQ_OUT1.LN_PURCH_TYP_DESC) , lit(1) , lit(50))).alias('LN_PURCH_TYP_DESC'),
	SEQ_OUT1.bois_pred_loan_no.alias('PREDECESSOR_LN_NBR'),
	SEQ_OUT1.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	SEQ_OUT1.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	(when(((Len(trim(SEQ_OUT1.SALESFORCE_ID)) > lit(0)) &(SEQ_OUT1.LN_ORIG_SYS_CD == lit('CLEAD')) ),(lit('Salesforce') )).otherwise(None)).alias('AGREE_APPL_SYS_NAME'),
	(when(((Len(trim(SEQ_OUT1.SALESFORCE_ID)) > lit(0)) &(SEQ_OUT1.LN_ORIG_SYS_CD == lit('CLEAD')) ),(SEQ_OUT1.SALESFORCE_ID )).otherwise(None)).alias('AGREE_APPL_NATL_KEY'),
	(when((SEQ_OUT1.credit_decsn_override_auth_lvl_name_appro_final IS NOT None , SEQ_OUT1.credit_decsn_override_auth_lvl_name_appro_final ).otherwise(IFF(SEQ_OUT1.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD IS NOT None )).otherwise((SEQ_OUT1.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD )).otherwise(None))).alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME'),
	SEQ_OUT1.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	SEQ_OUT1.HFI_HFS_CD.alias('HFI_HFS_CD'),
	SEQ_OUT1.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	SEQ_OUT1.BB_AMT.alias('BB_AMT'),
	SEQ_OUT1.EFF_LMT_CD.alias('EFF_LMT_CD'),
	SEQ_OUT1.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	SEQ_OUT1.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	SEQ_OUT1.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	SEQ_OUT1.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node RENEWAL, type TRANSFORMATION
# COLUMN COUNT: 4
# Original node name Xfm_1, link RENEWAL

RENEWAL = SEQ_OUT1_CONV3.select(
	SEQ_OUT1.borm_ln_acct_nbr.alias('BORM_LN_ACCT_NBR'),
	SEQ_OUT1.bois_maturity_date.alias('BOIS_MAT_DT'),
	SEQ_OUT1.AS_OF_DT.alias('AS_OF_DT'),
	SEQ_OUT1.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND')
)

# Processing node SEQ_OUT2, type TRANSFORMATION
# COLUMN COUNT: 182
# Original node name Xfm_1, link SEQ_OUT2

SEQ_OUT2 = SEQ_OUT1_CONV3.select(
	SEQ_OUT1.ACCT_ID.alias('ACCT_ID'),
	SEQ_OUT1.AS_OF_DT.alias('AS_OF_DT'),
	SEQ_OUT1.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	SEQ_OUT1.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	SEQ_OUT1.CUR_LN_AMT.alias('CUR_LN_AMT'),
	SEQ_OUT1.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	SEQ_OUT1.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	SEQ_OUT1.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	SEQ_OUT1.NON_ACCR_IND.alias('NON_ACCR_IND'),
	SEQ_OUT1.NON_ACCR_DT.alias('NON_ACCR_DT'),
	SEQ_OUT1.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	SEQ_OUT1.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	SEQ_OUT1.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	SEQ_OUT1.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	SEQ_OUT1.SOLD_PCT.alias('SOLD_PCT'),
	SEQ_OUT1.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	SEQ_OUT1.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	SEQ_OUT1.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	SEQ_OUT1.REVOLVING_IND.alias('REVOLVING_IND'),
	SEQ_OUT1.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	SEQ_OUT1.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	SEQ_OUT1.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	SEQ_OUT1.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	SEQ_OUT1.FORECLS_IND.alias('FORECLS_IND'),
	SEQ_OUT1.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	SEQ_OUT1.FNL_PMT_DT.alias('FNL_PMT_DT'),
	SEQ_OUT1.LIFE_INS_CD.alias('LIFE_INS_CD'),
	SEQ_OUT1.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	SEQ_OUT1.PLEDGE_CD.alias('PLEDGE_CD'),
	SEQ_OUT1.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	SEQ_OUT1.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	SEQ_OUT1.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	SEQ_OUT1.FEE_CAT_CD.alias('FEE_CAT_CD'),
	SEQ_OUT1.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	SEQ_OUT1.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	SEQ_OUT1.PMT_METH_CD.alias('PMT_METH_CD'),
	SEQ_OUT1.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	SEQ_OUT1.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	SEQ_OUT1.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	SEQ_OUT1.SRC_PROG_CD.alias('SRC_PROG_CD'),
	SEQ_OUT1.SRC_COLL_CD.alias('SRC_COLL_CD'),
	SEQ_OUT1.COLL_CD.alias('COLL_CD'),
	SEQ_OUT1.COLL_DESC.alias('COLL_DESC'),
	SEQ_OUT1.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	SEQ_OUT1.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	SEQ_OUT1.LIEN_PSTN.alias('LIEN_PSTN'),
	SEQ_OUT1.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	SEQ_OUT1.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	SEQ_OUT1.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	SEQ_OUT1.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	SEQ_OUT1.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	SEQ_OUT1.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	SEQ_OUT1.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	SEQ_OUT1.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	SEQ_OUT1.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	SEQ_OUT1.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	SEQ_OUT1.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	SEQ_OUT1.DLR_CD.alias('DLR_CD'),
	SEQ_OUT1.DLR_NBR.alias('DLR_NBR'),
	SEQ_OUT1.DLR_RATE.alias('DLR_RATE'),
	SEQ_OUT1.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	SEQ_OUT1.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	SEQ_OUT1.PARENT_REC_IND.alias('PARENT_REC_IND'),
	SEQ_OUT1.CHLD_REC_IND.alias('CHLD_REC_IND'),
	SEQ_OUT1.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	SEQ_OUT1.SRC_DIV_CD.alias('SRC_DIV_CD'),
	SEQ_OUT1.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	SEQ_OUT1.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	SEQ_OUT1.ENTRY_DT.alias('ENTRY_DT'),
	SEQ_OUT1.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	SEQ_OUT1.LN_PROG_CD.alias('LN_PROG_CD'),
	SEQ_OUT1.SYNDICATED_IND.alias('SYNDICATED_IND'),
	SEQ_OUT1.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_LEND_CD'),
	SEQ_OUT1.TAX_FREE_IND.alias('TAX_FREE_IND'),
	SEQ_OUT1.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	SEQ_OUT1.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	SEQ_OUT1.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	SEQ_OUT1.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	SEQ_OUT1.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	SEQ_OUT1.LN_REC_CD.alias('LN_REC_CD'),
	SEQ_OUT1.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	SEQ_OUT1.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	SEQ_OUT1.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	SEQ_OUT1.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	SEQ_OUT1.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	SEQ_OUT1.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	SEQ_OUT1.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	SEQ_OUT1.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	SEQ_OUT1.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	SEQ_OUT1.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	SEQ_OUT1.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	SEQ_OUT1.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	SEQ_OUT1.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	SEQ_OUT1.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	SEQ_OUT1.DISC_AMT.alias('DISC_AMT'),
	SEQ_OUT1.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	SEQ_OUT1.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	SEQ_OUT1.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	SEQ_OUT1.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	SEQ_OUT1.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	SEQ_OUT1.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	SEQ_OUT1.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	SEQ_OUT1.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	SEQ_OUT1.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	SEQ_OUT1.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	SEQ_OUT1.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	SEQ_OUT1.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	SEQ_OUT1.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	SEQ_OUT1.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	SEQ_OUT1.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	SEQ_OUT1.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	SEQ_OUT1.CRA_LN_TYP.alias('CRA_LN_TYP'),
	SEQ_OUT1.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	SEQ_OUT1.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	SEQ_OUT1.APPR_BY_APPL_ONLY_IND.alias('APPR_BY_APPL_ONLY_IND'),
	SEQ_OUT1.LN_PROG_DESC.alias('LN_PROG_DESC'),
	SEQ_OUT1.SBA_LN_NBR.alias('SBA_LN_NBR'),
	SEQ_OUT1.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	SEQ_OUT1.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	SEQ_OUT1.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	SEQ_OUT1.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	SEQ_OUT1.BKRPT_IND.alias('BKRPT_IND'),
	SEQ_OUT1.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	SEQ_OUT1.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	SEQ_OUT1.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	SEQ_OUT1.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	SEQ_OUT1.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	SEQ_OUT1.PROMO_CD.alias('PROMO_CD'),
	SEQ_OUT1.TDR_DT.alias('TDR_DT'),
	SEQ_OUT1.TDR_IND.alias('TDR_IND'),
	SEQ_OUT1.ENERGY_CD.alias('ENERGY_CD'),
	SEQ_OUT1.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	SEQ_OUT1.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	SEQ_OUT1.SRC_OREO_IND.alias('SRC_OREO_IND'),
	SEQ_OUT1.DISP_CD.alias('DISP_CD'),
	SEQ_OUT1.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	(when(((SEQ_OUT1.SRC_BANK_NBR == lit('113')) &(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0)) &(trim(SEQ_OUT1.PMC_CODE) == lit('BWXX')) ),(None )).otherwise(trim(SEQ_OUT1.PMC_CODE))).alias('PORTFOLIO_MGMT_CD'),
	(when(((SEQ_OUT1.SRC_BANK_NBR == lit('113')) &(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0)) &(trim(SEQ_OUT1.PMC_CODE) == lit('BWXX')) , None ).otherwise(when(((SEQ_OUT1.SRC_BANK_NBR == lit('113')) &(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0)) &(trim(SEQ_OUT1.PMC_CODE) != lit('BWXX')) ).otherwise(lit('BBC') )).otherwise((IFF(Len(trim(SEQ_OUT1.PMC_CODE)) > lit(0) ))).otherwise((lit('PMC') )).otherwise(None)))).alias('PORTFOLIO_MGMT_DESC'),
	SEQ_OUT1.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	SEQ_OUT1.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	SEQ_OUT1.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	SEQ_OUT1.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	SEQ_OUT1.RE_COLL_IND.alias('RE_COLL_IND'),
	SEQ_OUT1.NTNL_RE_IND.alias('NTNL_RE_IND'),
	SEQ_OUT1.BKRPT_DT.alias('BKRPT_DT'),
	SEQ_OUT1.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	SEQ_OUT1.REG_W_CD.alias('REG_W_CD'),
	SEQ_OUT1.CUPA_ID.alias('CUPA_ID'),
	SEQ_OUT1.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	SEQ_OUT1.QRM_SEG_CD.alias('QRM_SEG_CD'),
	SEQ_OUT1.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	SEQ_OUT1.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	SEQ_OUT1.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	SEQ_OUT1.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	SEQ_OUT1.lengthD_ARRANGEMENT_CD.alias('LEND_ARRANGEMENT_CD'),
	SEQ_OUT1.lengthD_ARRANGEMENT_DESC.alias('LEND_ARRANGEMENT_DESC'),
	SEQ_OUT1.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	SEQ_OUT1.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	SEQ_OUT1.PR_APPL_CD.alias('PR_APPL_CD'),
	SEQ_OUT1.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	SEQ_OUT1.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	SEQ_OUT1.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	SEQ_OUT1.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	SEQ_OUT1.BUILDER_NAME.alias('BUILDER_NAME'),
	SEQ_OUT1.usbo_purchased_code.alias('LN_PURCH_TYP_CD'),
	SEQ_OUT1.usbo_purch_dt.alias('LN_PURCH_DT'),
	(substring(trim(SEQ_OUT1.LN_PURCH_TYP_DESC) , lit(1) , lit(50))).alias('LN_PURCH_TYP_DESC'),
	SEQ_OUT1.bois_pred_loan_no.alias('PREDECESSOR_LN_NBR'),
	SEQ_OUT1.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	SEQ_OUT1.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	(when(((Len(trim(SEQ_OUT1.SALESFORCE_ID)) > lit(0)) &(SEQ_OUT1.LN_ORIG_SYS_CD == lit('CLEAD')) ),(lit('Salesforce') )).otherwise(None)).alias('AGREE_APPL_SYS_NAME'),
	(when(((Len(trim(SEQ_OUT1.SALESFORCE_ID)) > lit(0)) &(SEQ_OUT1.LN_ORIG_SYS_CD == lit('CLEAD')) ),(SEQ_OUT1.SALESFORCE_ID )).otherwise(None)).alias('AGREE_APPL_NATL_KEY'),
	(when((SEQ_OUT1.credit_decsn_override_auth_lvl_name_appro_final IS NOT None , SEQ_OUT1.credit_decsn_override_auth_lvl_name_appro_final ).otherwise(IFF(SEQ_OUT1.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD IS NOT None )).otherwise((SEQ_OUT1.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME_LD )).otherwise(None))).alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME'),
	SEQ_OUT1.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	SEQ_OUT1.HFI_HFS_CD.alias('HFI_HFS_CD'),
	SEQ_OUT1.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	SEQ_OUT1.BB_AMT.alias('BB_AMT'),
	SEQ_OUT1.EFF_LMT_CD.alias('EFF_LMT_CD'),
	SEQ_OUT1.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	SEQ_OUT1.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	SEQ_OUT1.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	SEQ_OUT1.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node CREDIT_FCLTY_BANCS_LEVEL_03, type TARGET
# COLUMN COUNT: 182

CREDIT_FCLTY_BANCS_LEVEL_03 = SEQ_OUT2.select('*')
CREDIT_FCLTY_BANCS_LEVEL_03.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('DS_DIR')}/bancs/credit_fclty_bancs_level_03_{getArgument('APPL_CD')}.ds')

# Processing node RENEWAL_MONTH_CURR_DS, type TARGET
# COLUMN COUNT: 4

RENEWAL_MONTH_CURR_DS = RENEWAL.select('*')
RENEWAL_MONTH_CURR_DS.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('DS_DIR')}/bancs/bancs_renewal_month_ind_credit_fclty_curr_{getArgument('APPL_CD')}.ds')

# Processing node all_in, type UNION
# COLUMN COUNT: 182
# Original node name Fnl, link all_in

all_in = SEQ_OUT_CONV4.union(Credit_Fclty_ctam_in).union(Credit_Fclty_facm_in).select(
	"ACCT_ID",
	"AS_OF_DT",
	"CREDIT_FCLTY_TYP",
	"ORIG_LN_AMT",
	"CUR_LN_AMT",
	"TOT_PART_SOLD_AMT",
	"LIFE_INS_AMT",
	"SRC_ACCR_STAT_CD",
	"NON_ACCR_IND",
	"NON_ACCR_DT",
	"MIN_LATE_CHRG_AMT",
	"MAX_LATE_CHRG_AMT",
	"LATE_CHRG_PCT",
	"LATE_CHRG_IND",
	"SOLD_PCT",
	"LATE_CHRG_GRC_DAY_CNT",
	"RNWL_PRCS_THIS_MTH_IND",
	"PREPMT_PNLTY_CD",
	"REVOLVING_IND",
	"LAST_INT_BEG_DT",
	"DRCT_OR_INDIR_LN_IND",
	"INTRO_RATE_IND",
	"INTRO_RATE_END_DT",
	"FORECLS_IND",
	"FORECLS_STAT_CD",
	"FNL_PMT_DT",
	"LIFE_INS_CD",
	"LIFE_INS_EXP_DT",
	"PLEDGE_CD",
	"SRC_BKRPT_STAT_CD",
	"SEND_NO_BILL_CD",
	"OWNR_OCCUPIED_CD",
	"FEE_CAT_CD",
	"LATE_CHRG_CALC_METH_CD",
	"PRIN_OR_INT_ONLY_CD",
	"PMT_METH_CD",
	"SRC_RENEGOTIATION_CD",
	"RENEGOTIATION_CD",
	"RENEGOTIATION_DESC",
	"SRC_PROG_CD",
	"SRC_COLL_CD",
	"COLL_CD",
	"COLL_DESC",
	"SRC_LIEN_PSTN_CD",
	"SRC_INT_PMT_FREQ_CD",
	"LIEN_PSTN",
	"INT_PMT_FREQ_CD",
	"INT_PMT_FREQ_DESC",
	"SRC_PRIN_PMT_FREQ_CD",
	"PRIN_PMT_FREQ_CD",
	"PRIN_PMT_FREQ_DESC",
	"INT_RATE_CLNG_LIFE_OF_LN_PCT",
	"INT_RATE_FLR_LIFE_OF_LN_PCT",
	"INT_RATE_CLNG_CUR_PRD_PCT",
	"INT_RATE_FLR_CUR_PRD_PCT",
	"INVSTR_POOL_NBR",
	"TIERED_RATE_IND",
	"DLR_CD",
	"DLR_NBR",
	"DLR_RATE",
	"CMMT_LVL_CD",
	"ULT_PARENT_ACCT_NBR",
	"PARENT_REC_IND",
	"CHLD_REC_IND",
	"COMMUNITY_DVLPMT_IND",
	"SRC_DIV_CD",
	"SRC_PRPSE_CD",
	"SRC_PRPSE_DESC",
	"ENTRY_DT",
	"SHRD_NTNL_CREDIT_IND",
	"LN_PROG_CD",
	"SYNDICATED_IND",
	"ENTPRS_LEVERAGE_LEND_CD",
	"TAX_FREE_IND",
	"CMMT_DRAW_IND",
	"CMMT_OWN_PCT",
	"CMMT_LEAD_PART_IND",
	"DLQNY_METH_CD",
	"SRC_LN_FED_CALL_RPT_CD",
	"LN_REC_CD",
	"AVAIL_RLUP_IND",
	"AGNT_BANK_NAME",
	"SRC_DLQNY_CD",
	"SUPERVISORY_LTV_PCT",
	"SUPERVISORY_LTV_CAT_DESC",
	"SRC_AGNT_BANK_NBR",
	"SRC_UNDERWRITING_OFCR_CD",
	"PERMT_FINCG_ENTITY_NAME",
	"PERMT_FINCG_CD",
	"FXD_FEE_BEG_DT",
	"FXD_FEE_AMT_CD",
	"FXD_FEE_CALC_CD",
	"FXD_FEE_DUE_DT",
	"FXD_FEE_EARN_CD",
	"DISC_AMT",
	"SERV_GRP_OR_DEPT",
	"ENTPRS_EXIT_DT",
	"CL_MODE_X_CD",
	"CL_TYP_X_CD",
	"LEVERAGE_EXIT_DT",
	"LN_ORIG_SYS_ACCT_NBR",
	"LN_ORIG_SYS_CD",
	"SRC_UNDERWRITING_CC_NBR",
	"SRC_FORECLS_STAT_CD",
	"SRC_MDM_FCLTY_ID",
	"BOOKED_THIS_MTH_IND",
	"SRC_PMT_APPL_CD",
	"PART_PURCH_PCT",
	"PART_PURCH_TOT_CMMT_AMT",
	"PART_PURCH_FROM_BANK_NBR",
	"PART_PURCH_FROM_BANK_NAME",
	"CRA_LN_TYP",
	"CRA_LN_TYP_DESC",
	"BKRPT_STAT_CD",
	"APPR_BY_APPL_ONLY_IND",
	"LN_PROG_DESC",
	"SBA_LN_NBR",
	"SRC_SHDW_SAG_OFCR_CD",
	"SRC_SAG_OFCR_CD",
	"CENTRALLY_PRCS_IND",
	"FDIC_SPPRTD_LN_IND",
	"BKRPT_IND",
	"BKRPT_STAT_DESC",
	"BKRPT_TYP_CD",
	"BKRPT_TYP_DESC",
	"FORECLS_STAT_DESC",
	"LN_ORIG_CHNL_CD",
	"PROMO_CD",
	"TDR_DT",
	"TDR_IND",
	"ENERGY_CD",
	"ENERGY_CD_DESC",
	"SRC_FULLY_CHOF_IND",
	"SRC_OREO_IND",
	"DISP_CD",
	"CNSMR_CREDIT_CNSLNG_IND",
	"PORTFOLIO_MGMT_CD",
	"PORTFOLIO_MGMT_DESC",
	"MOODYS_PROD_CD",
	"TBI_CAT_DESC",
	"PPR_PROP_TYP_DESC",
	"COMML_RE_COLL_IND",
	"RE_COLL_IND",
	"NTNL_RE_IND",
	"BKRPT_DT",
	"PART_SNC_RPT_IND",
	"REG_W_CD",
	"CUPA_ID",
	"FRY14_CAT_CD",
	"QRM_SEG_CD",
	"QRM_SEG_DESC",
	"REG_AT_RISK_IND",
	"INT_RATE_CLNG_INITL_PRD_PCT",
	"LN_UNUSD_AMT_FEE_RATE",
	"LEND_ARRANGEMENT_CD",
	"LEND_ARRANGEMENT_DESC",
	"LEASE_RISK_MGMT_CC_NBR",
	"MUNI_RISK_WT_PCT",
	"PR_APPL_CD",
	"PR_APPL_CD_DESC",
	"LEASE_ACCT_DIST_CD",
	"NON_ACCR_END_DT",
	"PAR_VAL_LN_AMT",
	"BUILDER_NAME",
	"LN_PURCH_TYP_CD",
	"LN_PURCH_DT",
	"LN_PURCH_TYP_DESC",
	"PREDECESSOR_LN_NBR",
	"COLL_MONITOR_RESP_CD",
	"COLL_MONITOR_RESP_DESC",
	"AGREE_APPL_SYS_NAME",
	"AGREE_APPL_NATL_KEY",
	"CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME",
	"CREDIT_LMT_EFF_AMT",
	"HFI_HFS_CD",
	"HFI_HFS_DESC",
	"BB_AMT",
	"EFF_LMT_CD",
	"EFF_LMT_DESC",
	"BUS_BANKG_DECSN_CD",
	"BUS_BANKG_DECSN_DESC",
	"FRB_FHLB_ELIG_PLEDGE_CD"
	)

# Processing node out_1, type MERGE
# COLUMN COUNT: 183
# Original node name mjr_mod_dt_1, link out_1

out_1 = all_in.join(acct, [acct.ACCT_ID == all_in.ACCT_ID, acct.AS_OF_DT == all_in.AS_OF_DT], 'LEFT_OUTER').select(
	all_in.ACCT_ID.alias('ACCT_ID'),
	all_in.AS_OF_DT.alias('AS_OF_DT'),
	all_in.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	all_in.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	all_in.CUR_LN_AMT.alias('CUR_LN_AMT'),
	all_in.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	all_in.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	all_in.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	all_in.NON_ACCR_IND.alias('NON_ACCR_IND'),
	all_in.NON_ACCR_DT.alias('NON_ACCR_DT'),
	all_in.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	all_in.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	all_in.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	all_in.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	all_in.SOLD_PCT.alias('SOLD_PCT'),
	all_in.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	all_in.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	all_in.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	all_in.REVOLVING_IND.alias('REVOLVING_IND'),
	all_in.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	all_in.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	all_in.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	all_in.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	all_in.FORECLS_IND.alias('FORECLS_IND'),
	all_in.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	all_in.FNL_PMT_DT.alias('FNL_PMT_DT'),
	all_in.LIFE_INS_CD.alias('LIFE_INS_CD'),
	all_in.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	all_in.PLEDGE_CD.alias('PLEDGE_CD'),
	all_in.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	all_in.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	all_in.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	all_in.FEE_CAT_CD.alias('FEE_CAT_CD'),
	all_in.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	all_in.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	all_in.PMT_METH_CD.alias('PMT_METH_CD'),
	all_in.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	all_in.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	all_in.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	all_in.SRC_PROG_CD.alias('SRC_PROG_CD'),
	all_in.SRC_COLL_CD.alias('SRC_COLL_CD'),
	all_in.COLL_CD.alias('COLL_CD'),
	all_in.COLL_DESC.alias('COLL_DESC'),
	all_in.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	all_in.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	all_in.LIEN_PSTN.alias('LIEN_PSTN'),
	all_in.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	all_in.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	all_in.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	all_in.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	all_in.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	all_in.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	all_in.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	all_in.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	all_in.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	all_in.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	all_in.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	all_in.DLR_CD.alias('DLR_CD'),
	all_in.DLR_NBR.alias('DLR_NBR'),
	all_in.DLR_RATE.alias('DLR_RATE'),
	all_in.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	all_in.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	all_in.PARENT_REC_IND.alias('PARENT_REC_IND'),
	all_in.CHLD_REC_IND.alias('CHLD_REC_IND'),
	all_in.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	all_in.SRC_DIV_CD.alias('SRC_DIV_CD'),
	all_in.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	all_in.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	all_in.ENTRY_DT.alias('ENTRY_DT'),
	all_in.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	all_in.LN_PROG_CD.alias('LN_PROG_CD'),
	all_in.SYNDICATED_IND.alias('SYNDICATED_IND'),
	all_in.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_lengthD_CD'),
	all_in.TAX_FREE_IND.alias('TAX_FREE_IND'),
	all_in.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	all_in.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	all_in.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	all_in.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	all_in.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	all_in.LN_REC_CD.alias('LN_REC_CD'),
	all_in.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	all_in.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	all_in.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	all_in.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	all_in.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	all_in.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	all_in.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	all_in.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	all_in.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	all_in.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	all_in.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	all_in.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	all_in.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	all_in.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	all_in.DISC_AMT.alias('DISC_AMT'),
	all_in.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	all_in.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	all_in.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	all_in.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	all_in.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	all_in.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	all_in.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	all_in.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	all_in.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	all_in.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	all_in.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	all_in.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	all_in.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	all_in.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	all_in.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	all_in.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	all_in.CRA_LN_TYP.alias('CRA_LN_TYP'),
	all_in.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	all_in.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	all_in.APPR_BY_APPL_ONLY_IND.alias('APPR_BY_APPL_ONLY_IND'),
	all_in.LN_PROG_DESC.alias('LN_PROG_DESC'),
	all_in.SBA_LN_NBR.alias('SBA_LN_NBR'),
	all_in.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	all_in.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	all_in.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	all_in.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	all_in.BKRPT_IND.alias('BKRPT_IND'),
	all_in.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	all_in.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	all_in.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	all_in.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	all_in.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	all_in.PROMO_CD.alias('PROMO_CD'),
	all_in.TDR_DT.alias('TDR_DT'),
	all_in.TDR_IND.alias('TDR_IND'),
	all_in.ENERGY_CD.alias('ENERGY_CD'),
	all_in.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	all_in.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	all_in.SRC_OREO_IND.alias('SRC_OREO_IND'),
	all_in.DISP_CD.alias('DISP_CD'),
	all_in.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	all_in.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	all_in.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	all_in.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	all_in.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	all_in.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	all_in.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	all_in.RE_COLL_IND.alias('RE_COLL_IND'),
	all_in.NTNL_RE_IND.alias('NTNL_RE_IND'),
	all_in.BKRPT_DT.alias('BKRPT_DT'),
	all_in.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	all_in.REG_W_CD.alias('REG_W_CD'),
	all_in.CUPA_ID.alias('CUPA_ID'),
	all_in.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	all_in.QRM_SEG_CD.alias('QRM_SEG_CD'),
	all_in.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	all_in.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	all_in.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	all_in.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	all_in.lengthD_ARRANGEMENT_CD.alias('lengthD_ARRANGEMENT_CD'),
	all_in.lengthD_ARRANGEMENT_DESC.alias('lengthD_ARRANGEMENT_DESC'),
	all_in.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	all_in.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	all_in.PR_APPL_CD.alias('PR_APPL_CD'),
	all_in.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	all_in.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	all_in.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	all_in.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	all_in.BUILDER_NAME.alias('BUILDER_NAME'),
	acct.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	all_in.LN_PURCH_TYP_CD.alias('LN_PURCH_TYP_CD'),
	all_in.LN_PURCH_DT.alias('LN_PURCH_DT'),
	all_in.LN_PURCH_TYP_DESC.alias('LN_PURCH_TYP_DESC'),
	all_in.PREDECESSOR_LN_NBR.alias('PREDECESSOR_LN_NBR'),
	all_in.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	all_in.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	all_in.AGREE_APPL_SYS_NAME.alias('AGREE_APPL_SYS_NAME'),
	all_in.AGREE_APPL_NATL_KEY.alias('AGREE_APPL_NATL_KEY'),
	all_in.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME.alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME'),
	all_in.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	all_in.HFI_HFS_CD.alias('HFI_HFS_CD'),
	all_in.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	all_in.BB_AMT.alias('BB_AMT'),
	all_in.EFF_LMT_CD.alias('EFF_LMT_CD'),
	all_in.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	all_in.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	all_in.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	all_in.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node out_2, type MERGE
# COLUMN COUNT: 184
# Original node name mjr_mod_dt_2, link out_2

out_2 = out_1.join(evolv_ext, [evolv_ext.CLIENTINSTRUMENTID == out_1.SRC_ACCT_NBR], 'LEFT_OUTER').select(
	out_1.ACCT_ID.alias('ACCT_ID'),
	out_1.AS_OF_DT.alias('AS_OF_DT'),
	out_1.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	out_1.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	out_1.CUR_LN_AMT.alias('CUR_LN_AMT'),
	out_1.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	out_1.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	out_1.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	out_1.NON_ACCR_IND.alias('NON_ACCR_IND'),
	out_1.NON_ACCR_DT.alias('NON_ACCR_DT'),
	out_1.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	out_1.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	out_1.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	out_1.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	out_1.SOLD_PCT.alias('SOLD_PCT'),
	out_1.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	out_1.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	out_1.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	out_1.REVOLVING_IND.alias('REVOLVING_IND'),
	out_1.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	out_1.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	out_1.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	out_1.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	out_1.FORECLS_IND.alias('FORECLS_IND'),
	out_1.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	out_1.FNL_PMT_DT.alias('FNL_PMT_DT'),
	out_1.LIFE_INS_CD.alias('LIFE_INS_CD'),
	out_1.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	out_1.PLEDGE_CD.alias('PLEDGE_CD'),
	out_1.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	out_1.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	out_1.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	out_1.FEE_CAT_CD.alias('FEE_CAT_CD'),
	out_1.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	out_1.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	out_1.PMT_METH_CD.alias('PMT_METH_CD'),
	out_1.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	out_1.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	out_1.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	out_1.SRC_PROG_CD.alias('SRC_PROG_CD'),
	out_1.SRC_COLL_CD.alias('SRC_COLL_CD'),
	out_1.COLL_CD.alias('COLL_CD'),
	out_1.COLL_DESC.alias('COLL_DESC'),
	out_1.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	out_1.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	out_1.LIEN_PSTN.alias('LIEN_PSTN'),
	out_1.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	out_1.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	out_1.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	out_1.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	out_1.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	out_1.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	out_1.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	out_1.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	out_1.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	out_1.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	out_1.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	out_1.DLR_CD.alias('DLR_CD'),
	out_1.DLR_NBR.alias('DLR_NBR'),
	out_1.DLR_RATE.alias('DLR_RATE'),
	out_1.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	out_1.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	out_1.PARENT_REC_IND.alias('PARENT_REC_IND'),
	out_1.CHLD_REC_IND.alias('CHLD_REC_IND'),
	out_1.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	out_1.SRC_DIV_CD.alias('SRC_DIV_CD'),
	out_1.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	out_1.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	out_1.ENTRY_DT.alias('ENTRY_DT'),
	out_1.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	out_1.LN_PROG_CD.alias('LN_PROG_CD'),
	out_1.SYNDICATED_IND.alias('SYNDICATED_IND'),
	out_1.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_lengthD_CD'),
	out_1.TAX_FREE_IND.alias('TAX_FREE_IND'),
	out_1.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	out_1.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	out_1.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	out_1.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	out_1.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	out_1.LN_REC_CD.alias('LN_REC_CD'),
	out_1.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	out_1.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	out_1.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	out_1.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	out_1.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	out_1.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	out_1.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	out_1.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	out_1.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	out_1.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	out_1.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	out_1.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	out_1.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	out_1.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	out_1.DISC_AMT.alias('DISC_AMT'),
	out_1.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	out_1.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	out_1.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	out_1.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	out_1.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	out_1.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	out_1.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	out_1.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	out_1.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	out_1.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	out_1.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	out_1.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	out_1.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	out_1.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	out_1.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	out_1.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	out_1.CRA_LN_TYP.alias('CRA_LN_TYP'),
	out_1.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	out_1.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	out_1.APPR_BY_APPL_ONLY_IND.alias('APPR_BY_APPL_ONLY_IND'),
	out_1.LN_PROG_DESC.alias('LN_PROG_DESC'),
	out_1.SBA_LN_NBR.alias('SBA_LN_NBR'),
	out_1.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	out_1.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	out_1.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	out_1.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	out_1.BKRPT_IND.alias('BKRPT_IND'),
	out_1.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	out_1.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	out_1.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	out_1.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	out_1.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	out_1.PROMO_CD.alias('PROMO_CD'),
	out_1.TDR_DT.alias('TDR_DT'),
	out_1.TDR_IND.alias('TDR_IND'),
	out_1.ENERGY_CD.alias('ENERGY_CD'),
	out_1.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	out_1.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	out_1.SRC_OREO_IND.alias('SRC_OREO_IND'),
	out_1.DISP_CD.alias('DISP_CD'),
	out_1.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	out_1.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	out_1.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	out_1.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	out_1.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	out_1.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	out_1.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	out_1.RE_COLL_IND.alias('RE_COLL_IND'),
	out_1.NTNL_RE_IND.alias('NTNL_RE_IND'),
	out_1.BKRPT_DT.alias('BKRPT_DT'),
	out_1.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	out_1.REG_W_CD.alias('REG_W_CD'),
	out_1.CUPA_ID.alias('CUPA_ID'),
	out_1.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	out_1.QRM_SEG_CD.alias('QRM_SEG_CD'),
	out_1.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	out_1.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	out_1.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	out_1.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	out_1.lengthD_ARRANGEMENT_CD.alias('lengthD_ARRANGEMENT_CD'),
	out_1.lengthD_ARRANGEMENT_DESC.alias('lengthD_ARRANGEMENT_DESC'),
	out_1.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	out_1.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	out_1.PR_APPL_CD.alias('PR_APPL_CD'),
	out_1.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	out_1.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	out_1.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	out_1.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	out_1.BUILDER_NAME.alias('BUILDER_NAME'),
	evolv_ext.MAJORMODDATE.alias('MJR_MOD_DT'),
	out_1.SRC_ACCT_NBR.alias('SRC_ACCT_NBR'),
	out_1.LN_PURCH_TYP_CD.alias('LN_PURCH_TYP_CD'),
	out_1.LN_PURCH_DT.alias('LN_PURCH_DT'),
	out_1.LN_PURCH_TYP_DESC.alias('LN_PURCH_TYP_DESC'),
	out_1.PREDECESSOR_LN_NBR.alias('PREDECESSOR_LN_NBR'),
	out_1.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	out_1.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	out_1.AGREE_APPL_SYS_NAME.alias('AGREE_APPL_SYS_NAME'),
	out_1.AGREE_APPL_NATL_KEY.alias('AGREE_APPL_NATL_KEY'),
	out_1.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME.alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME'),
	out_1.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	out_1.HFI_HFS_CD.alias('HFI_HFS_CD'),
	out_1.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	out_1.BB_AMT.alias('BB_AMT'),
	out_1.EFF_LMT_CD.alias('EFF_LMT_CD'),
	out_1.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	out_1.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	out_1.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	out_1.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node out_3, type TRANSFORMATION
# COLUMN COUNT: 183
# Original node name transformer_dt, link out_3

out_3 = out_2.select(
	out_2.ACCT_ID.alias('ACCT_ID'),
	out_2.AS_OF_DT.alias('AS_OF_DT'),
	out_2.CREDIT_FCLTY_TYP.alias('CREDIT_FCLTY_TYP'),
	out_2.ORIG_LN_AMT.alias('ORIG_LN_AMT'),
	out_2.CUR_LN_AMT.alias('CUR_LN_AMT'),
	out_2.TOT_PART_SOLD_AMT.alias('TOT_PART_SOLD_AMT'),
	out_2.LIFE_INS_AMT.alias('LIFE_INS_AMT'),
	out_2.SRC_ACCR_STAT_CD.alias('SRC_ACCR_STAT_CD'),
	out_2.NON_ACCR_IND.alias('NON_ACCR_IND'),
	out_2.NON_ACCR_DT.alias('NON_ACCR_DT'),
	out_2.MIN_LATE_CHRG_AMT.alias('MIN_LATE_CHRG_AMT'),
	out_2.MAX_LATE_CHRG_AMT.alias('MAX_LATE_CHRG_AMT'),
	out_2.LATE_CHRG_PCT.alias('LATE_CHRG_PCT'),
	out_2.LATE_CHRG_IND.alias('LATE_CHRG_IND'),
	out_2.SOLD_PCT.alias('SOLD_PCT'),
	out_2.LATE_CHRG_GRC_DAY_CNT.alias('LATE_CHRG_GRC_DAY_CNT'),
	out_2.RNWL_PRCS_THIS_MTH_IND.alias('RNWL_PRCS_THIS_MTH_IND'),
	out_2.PREPMT_PNLTY_CD.alias('PREPMT_PNLTY_CD'),
	out_2.REVOLVING_IND.alias('REVOLVING_IND'),
	out_2.LAST_INT_BEG_DT.alias('LAST_INT_BEG_DT'),
	out_2.DRCT_OR_INDIR_LN_IND.alias('DRCT_OR_INDIR_LN_IND'),
	out_2.INTRO_RATE_IND.alias('INTRO_RATE_IND'),
	out_2.INTRO_RATE_END_DT.alias('INTRO_RATE_END_DT'),
	out_2.FORECLS_IND.alias('FORECLS_IND'),
	out_2.FORECLS_STAT_CD.alias('FORECLS_STAT_CD'),
	out_2.FNL_PMT_DT.alias('FNL_PMT_DT'),
	out_2.LIFE_INS_CD.alias('LIFE_INS_CD'),
	out_2.LIFE_INS_EXP_DT.alias('LIFE_INS_EXP_DT'),
	out_2.PLEDGE_CD.alias('PLEDGE_CD'),
	out_2.SRC_BKRPT_STAT_CD.alias('SRC_BKRPT_STAT_CD'),
	out_2.SEND_NO_BILL_CD.alias('SEND_NO_BILL_CD'),
	out_2.OWNR_OCCUPIED_CD.alias('OWNR_OCCUPIED_CD'),
	out_2.FEE_CAT_CD.alias('FEE_CAT_CD'),
	out_2.LATE_CHRG_CALC_METH_CD.alias('LATE_CHRG_CALC_METH_CD'),
	out_2.PRIN_OR_INT_ONLY_CD.alias('PRIN_OR_INT_ONLY_CD'),
	out_2.PMT_METH_CD.alias('PMT_METH_CD'),
	out_2.SRC_RENEGOTIATION_CD.alias('SRC_RENEGOTIATION_CD'),
	out_2.RENEGOTIATION_CD.alias('RENEGOTIATION_CD'),
	out_2.RENEGOTIATION_DESC.alias('RENEGOTIATION_DESC'),
	out_2.SRC_PROG_CD.alias('SRC_PROG_CD'),
	out_2.SRC_COLL_CD.alias('SRC_COLL_CD'),
	out_2.COLL_CD.alias('COLL_CD'),
	out_2.COLL_DESC.alias('COLL_DESC'),
	out_2.SRC_LIEN_PSTN_CD.alias('SRC_LIEN_PSTN_CD'),
	out_2.SRC_INT_PMT_FREQ_CD.alias('SRC_INT_PMT_FREQ_CD'),
	out_2.LIEN_PSTN.alias('LIEN_PSTN'),
	out_2.INT_PMT_FREQ_CD.alias('INT_PMT_FREQ_CD'),
	out_2.INT_PMT_FREQ_DESC.alias('INT_PMT_FREQ_DESC'),
	out_2.SRC_PRIN_PMT_FREQ_CD.alias('SRC_PRIN_PMT_FREQ_CD'),
	out_2.PRIN_PMT_FREQ_CD.alias('PRIN_PMT_FREQ_CD'),
	out_2.PRIN_PMT_FREQ_DESC.alias('PRIN_PMT_FREQ_DESC'),
	out_2.INT_RATE_CLNG_LIFE_OF_LN_PCT.alias('INT_RATE_CLNG_LIFE_OF_LN_PCT'),
	out_2.INT_RATE_FLR_LIFE_OF_LN_PCT.alias('INT_RATE_FLR_LIFE_OF_LN_PCT'),
	out_2.INT_RATE_CLNG_CUR_PRD_PCT.alias('INT_RATE_CLNG_CUR_PRD_PCT'),
	out_2.INT_RATE_FLR_CUR_PRD_PCT.alias('INT_RATE_FLR_CUR_PRD_PCT'),
	out_2.INVSTR_POOL_NBR.alias('INVSTR_POOL_NBR'),
	out_2.TIERED_RATE_IND.alias('TIERED_RATE_IND'),
	out_2.DLR_CD.alias('DLR_CD'),
	out_2.DLR_NBR.alias('DLR_NBR'),
	out_2.DLR_RATE.alias('DLR_RATE'),
	out_2.CMMT_LVL_CD.alias('CMMT_LVL_CD'),
	out_2.ULT_PARENT_ACCT_NBR.alias('ULT_PARENT_ACCT_NBR'),
	out_2.PARENT_REC_IND.alias('PARENT_REC_IND'),
	out_2.CHLD_REC_IND.alias('CHLD_REC_IND'),
	out_2.COMMUNITY_DVLPMT_IND.alias('COMMUNITY_DVLPMT_IND'),
	out_2.SRC_DIV_CD.alias('SRC_DIV_CD'),
	out_2.SRC_PRPSE_CD.alias('SRC_PRPSE_CD'),
	out_2.SRC_PRPSE_DESC.alias('SRC_PRPSE_DESC'),
	out_2.ENTRY_DT.alias('ENTRY_DT'),
	out_2.SHRD_NTNL_CREDIT_IND.alias('SHRD_NTNL_CREDIT_IND'),
	out_2.LN_PROG_CD.alias('LN_PROG_CD'),
	out_2.SYNDICATED_IND.alias('SYNDICATED_IND'),
	out_2.ENTPRS_LEVERAGE_lengthD_CD.alias('ENTPRS_LEVERAGE_LEND_CD'),
	out_2.TAX_FREE_IND.alias('TAX_FREE_IND'),
	out_2.CMMT_DRAW_IND.alias('CMMT_DRAW_IND'),
	out_2.CMMT_OWN_PCT.alias('CMMT_OWN_PCT'),
	out_2.CMMT_LEAD_PART_IND.alias('CMMT_LEAD_PART_IND'),
	out_2.DLQNY_METH_CD.alias('DLQNY_METH_CD'),
	out_2.SRC_LN_FED_CALL_RPT_CD.alias('SRC_LN_FED_CALL_RPT_CD'),
	out_2.LN_REC_CD.alias('LN_REC_CD'),
	out_2.AVAIL_RLUP_IND.alias('AVAIL_RLUP_IND'),
	out_2.AGNT_BANK_NAME.alias('AGNT_BANK_NAME'),
	out_2.SRC_DLQNY_CD.alias('SRC_DLQNY_CD'),
	out_2.SUPERVISORY_LTV_PCT.alias('SUPERVISORY_LTV_PCT'),
	out_2.SUPERVISORY_LTV_CAT_DESC.alias('SUPERVISORY_LTV_CAT_DESC'),
	out_2.SRC_AGNT_BANK_NBR.alias('SRC_AGNT_BANK_NBR'),
	out_2.SRC_UNDERWRITING_OFCR_CD.alias('SRC_UNDERWRITING_OFCR_CD'),
	out_2.PERMT_FINCG_ENTITY_NAME.alias('PERMT_FINCG_ENTITY_NAME'),
	out_2.PERMT_FINCG_CD.alias('PERMT_FINCG_CD'),
	out_2.FXD_FEE_BEG_DT.alias('FXD_FEE_BEG_DT'),
	out_2.FXD_FEE_AMT_CD.alias('FXD_FEE_AMT_CD'),
	out_2.FXD_FEE_CALC_CD.alias('FXD_FEE_CALC_CD'),
	out_2.FXD_FEE_DUE_DT.alias('FXD_FEE_DUE_DT'),
	out_2.FXD_FEE_EARN_CD.alias('FXD_FEE_EARN_CD'),
	out_2.DISC_AMT.alias('DISC_AMT'),
	out_2.SERV_GRP_OR_DEPT.alias('SERV_GRP_OR_DEPT'),
	out_2.ENTPRS_EXIT_DT.alias('ENTPRS_EXIT_DT'),
	out_2.CL_MODE_X_CD.alias('CL_MODE_X_CD'),
	out_2.CL_TYP_X_CD.alias('CL_TYP_X_CD'),
	out_2.LEVERAGE_EXIT_DT.alias('LEVERAGE_EXIT_DT'),
	out_2.LN_ORIG_SYS_ACCT_NBR.alias('LN_ORIG_SYS_ACCT_NBR'),
	out_2.LN_ORIG_SYS_CD.alias('LN_ORIG_SYS_CD'),
	out_2.SRC_UNDERWRITING_CC_NBR.alias('SRC_UNDERWRITING_CC_NBR'),
	out_2.SRC_FORECLS_STAT_CD.alias('SRC_FORECLS_STAT_CD'),
	out_2.SRC_MDM_FCLTY_ID.alias('SRC_MDM_FCLTY_ID'),
	out_2.BOOKED_THIS_MTH_IND.alias('BOOKED_THIS_MTH_IND'),
	out_2.SRC_PMT_APPL_CD.alias('SRC_PMT_APPL_CD'),
	out_2.PART_PURCH_PCT.alias('PART_PURCH_PCT'),
	out_2.PART_PURCH_TOT_CMMT_AMT.alias('PART_PURCH_TOT_CMMT_AMT'),
	out_2.PART_PURCH_FROM_BANK_NBR.alias('PART_PURCH_FROM_BANK_NBR'),
	out_2.PART_PURCH_FROM_BANK_NAME.alias('PART_PURCH_FROM_BANK_NAME'),
	out_2.CRA_LN_TYP.alias('CRA_LN_TYP'),
	out_2.CRA_LN_TYP_DESC.alias('CRA_LN_TYP_DESC'),
	out_2.BKRPT_STAT_CD.alias('BKRPT_STAT_CD'),
	out_2.APPR_BY_APPL_ONLY_IND.alias('APPR_BY_APPL_ONLY_IND'),
	out_2.LN_PROG_DESC.alias('LN_PROG_DESC'),
	out_2.SBA_LN_NBR.alias('SBA_LN_NBR'),
	out_2.SRC_SHDW_SAG_OFCR_CD.alias('SRC_SHDW_SAG_OFCR_CD'),
	out_2.SRC_SAG_OFCR_CD.alias('SRC_SAG_OFCR_CD'),
	out_2.CENTRALLY_PRCS_IND.alias('CENTRALLY_PRCS_IND'),
	out_2.FDIC_SPPRTD_LN_IND.alias('FDIC_SPPRTD_LN_IND'),
	out_2.BKRPT_IND.alias('BKRPT_IND'),
	out_2.BKRPT_STAT_DESC.alias('BKRPT_STAT_DESC'),
	out_2.BKRPT_TYP_CD.alias('BKRPT_TYP_CD'),
	out_2.BKRPT_TYP_DESC.alias('BKRPT_TYP_DESC'),
	out_2.FORECLS_STAT_DESC.alias('FORECLS_STAT_DESC'),
	out_2.LN_ORIG_CHNL_CD.alias('LN_ORIG_CHNL_CD'),
	out_2.PROMO_CD.alias('PROMO_CD'),
	out_2.TDR_DT.alias('TDR_DT'),
	out_2.TDR_IND.alias('TDR_IND'),
	out_2.ENERGY_CD.alias('ENERGY_CD'),
	out_2.ENERGY_CD_DESC.alias('ENERGY_CD_DESC'),
	out_2.SRC_FULLY_CHOF_IND.alias('SRC_FULLY_CHOF_IND'),
	out_2.SRC_OREO_IND.alias('SRC_OREO_IND'),
	out_2.DISP_CD.alias('DISP_CD'),
	out_2.CNSMR_CREDIT_CNSLNG_IND.alias('CNSMR_CREDIT_CNSLNG_IND'),
	out_2.PORTFOLIO_MGMT_CD.alias('PORTFOLIO_MGMT_CD'),
	out_2.PORTFOLIO_MGMT_DESC.alias('PORTFOLIO_MGMT_DESC'),
	out_2.MOODYS_PROD_CD.alias('MOODYS_PROD_CD'),
	out_2.TBI_CAT_DESC.alias('TBI_CAT_DESC'),
	out_2.PPR_PROP_TYP_DESC.alias('PPR_PROP_TYP_DESC'),
	out_2.COMML_RE_COLL_IND.alias('COMML_RE_COLL_IND'),
	out_2.RE_COLL_IND.alias('RE_COLL_IND'),
	out_2.NTNL_RE_IND.alias('NTNL_RE_IND'),
	out_2.BKRPT_DT.alias('BKRPT_DT'),
	out_2.PART_SNC_RPT_IND.alias('PART_SNC_RPT_IND'),
	out_2.REG_W_CD.alias('REG_W_CD'),
	out_2.CUPA_ID.alias('CUPA_ID'),
	out_2.FRY14_CAT_CD.alias('FRY14_CAT_CD'),
	out_2.QRM_SEG_CD.alias('QRM_SEG_CD'),
	out_2.QRM_SEG_DESC.alias('QRM_SEG_DESC'),
	out_2.REG_AT_RISK_IND.alias('REG_AT_RISK_IND'),
	out_2.INT_RATE_CLNG_INITL_PRD_PCT.alias('INT_RATE_CLNG_INITL_PRD_PCT'),
	out_2.LN_UNUSD_AMT_FEE_RATE.alias('LN_UNUSD_AMT_FEE_RATE'),
	out_2.lengthD_ARRANGEMENT_CD.alias('LEND_ARRANGEMENT_CD'),
	out_2.lengthD_ARRANGEMENT_DESC.alias('LEND_ARRANGEMENT_DESC'),
	out_2.LEASE_RISK_MGMT_CC_NBR.alias('LEASE_RISK_MGMT_CC_NBR'),
	out_2.MUNI_RISK_WT_PCT.alias('MUNI_RISK_WT_PCT'),
	out_2.PR_APPL_CD.alias('PR_APPL_CD'),
	out_2.PR_APPL_CD_DESC.alias('PR_APPL_CD_DESC'),
	out_2.LEASE_ACCT_DIST_CD.alias('LEASE_ACCT_DIST_CD'),
	out_2.NON_ACCR_END_DT.alias('NON_ACCR_END_DT'),
	out_2.PAR_VAL_LN_AMT.alias('PAR_VAL_LN_AMT'),
	out_2.BUILDER_NAME.alias('BUILDER_NAME'),
	(when((out_2.MJR_MOD_DT IS NOT None ),(out_2.MJR_MOD_DT )).otherwise(None)).alias('MJR_MOD_DT'),
	out_2.LN_PURCH_TYP_CD.alias('LN_PURCH_TYP_CD'),
	out_2.LN_PURCH_DT.alias('LN_PURCH_DT'),
	out_2.LN_PURCH_TYP_DESC.alias('LN_PURCH_TYP_DESC'),
	out_2.PREDECESSOR_LN_NBR.alias('PREDECESSOR_LN_NBR'),
	out_2.COLL_MONITOR_RESP_CD.alias('COLL_MONITOR_RESP_CD'),
	out_2.COLL_MONITOR_RESP_DESC.alias('COLL_MONITOR_RESP_DESC'),
	out_2.AGREE_APPL_SYS_NAME.alias('AGREE_APPL_SYS_NAME'),
	out_2.AGREE_APPL_NATL_KEY.alias('AGREE_APPL_NATL_KEY'),
	out_2.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME.alias('CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME'),
	out_2.CREDIT_LMT_EFF_AMT.alias('CREDIT_LMT_EFF_AMT'),
	out_2.HFI_HFS_CD.alias('HFI_HFS_CD'),
	out_2.HFI_HFS_DESC.alias('HFI_HFS_DESC'),
	out_2.BB_AMT.alias('BB_AMT'),
	out_2.EFF_LMT_CD.alias('EFF_LMT_CD'),
	out_2.EFF_LMT_DESC.alias('EFF_LMT_DESC'),
	out_2.BUS_BANKG_DECSN_CD.alias('BUS_BANKG_DECSN_CD'),
	out_2.BUS_BANKG_DECSN_DESC.alias('BUS_BANKG_DECSN_DESC'),
	out_2.FRB_FHLB_ELIG_PLEDGE_CD.alias('FRB_FHLB_ELIG_PLEDGE_CD')
)

# Processing node SEQ_OUT1_CONV2, type REPLICATE
# COLUMN COUNT: 183
# Original node name CP_CREDIT_FCLTY_BANCS, link SEQ_OUT1_CONV2

SEQ_OUT1_CONV2 = out_3.select(
	out_3.ACCT_ID,
	out_3.AS_OF_DT,
	out_3.CREDIT_FCLTY_TYP,
	out_3.ORIG_LN_AMT,
	out_3.CUR_LN_AMT,
	out_3.TOT_PART_SOLD_AMT,
	out_3.LIFE_INS_AMT,
	out_3.SRC_ACCR_STAT_CD,
	out_3.NON_ACCR_IND,
	out_3.NON_ACCR_DT,
	out_3.MIN_LATE_CHRG_AMT,
	out_3.MAX_LATE_CHRG_AMT,
	out_3.LATE_CHRG_PCT,
	out_3.LATE_CHRG_IND,
	out_3.SOLD_PCT,
	out_3.LATE_CHRG_GRC_DAY_CNT,
	out_3.RNWL_PRCS_THIS_MTH_IND,
	out_3.PREPMT_PNLTY_CD,
	out_3.REVOLVING_IND,
	out_3.LAST_INT_BEG_DT,
	out_3.DRCT_OR_INDIR_LN_IND,
	out_3.INTRO_RATE_IND,
	out_3.INTRO_RATE_END_DT,
	out_3.FORECLS_IND,
	out_3.FORECLS_STAT_CD,
	out_3.FNL_PMT_DT,
	out_3.LIFE_INS_CD,
	out_3.LIFE_INS_EXP_DT,
	out_3.PLEDGE_CD,
	out_3.SRC_BKRPT_STAT_CD,
	out_3.SEND_NO_BILL_CD,
	out_3.OWNR_OCCUPIED_CD,
	out_3.FEE_CAT_CD,
	out_3.LATE_CHRG_CALC_METH_CD,
	out_3.PRIN_OR_INT_ONLY_CD,
	out_3.PMT_METH_CD,
	out_3.SRC_RENEGOTIATION_CD,
	out_3.RENEGOTIATION_CD,
	out_3.RENEGOTIATION_DESC,
	out_3.SRC_PROG_CD,
	out_3.SRC_COLL_CD,
	out_3.COLL_CD,
	out_3.COLL_DESC,
	out_3.SRC_LIEN_PSTN_CD,
	out_3.SRC_INT_PMT_FREQ_CD,
	out_3.LIEN_PSTN,
	out_3.INT_PMT_FREQ_CD,
	out_3.INT_PMT_FREQ_DESC,
	out_3.SRC_PRIN_PMT_FREQ_CD,
	out_3.PRIN_PMT_FREQ_CD,
	out_3.PRIN_PMT_FREQ_DESC,
	out_3.INT_RATE_CLNG_LIFE_OF_LN_PCT,
	out_3.INT_RATE_FLR_LIFE_OF_LN_PCT,
	out_3.INT_RATE_CLNG_CUR_PRD_PCT,
	out_3.INT_RATE_FLR_CUR_PRD_PCT,
	out_3.INVSTR_POOL_NBR,
	out_3.TIERED_RATE_IND,
	out_3.DLR_CD,
	out_3.DLR_NBR,
	out_3.DLR_RATE,
	out_3.CMMT_LVL_CD,
	out_3.ULT_PARENT_ACCT_NBR,
	out_3.PARENT_REC_IND,
	out_3.CHLD_REC_IND,
	out_3.COMMUNITY_DVLPMT_IND,
	out_3.SRC_DIV_CD,
	out_3.SRC_PRPSE_CD,
	out_3.SRC_PRPSE_DESC,
	out_3.ENTRY_DT,
	out_3.SHRD_NTNL_CREDIT_IND,
	out_3.LN_PROG_CD,
	out_3.SYNDICATED_IND,
	out_3.ENTPRS_LEVERAGE_LEND_CD,
	out_3.TAX_FREE_IND,
	out_3.CMMT_DRAW_IND,
	out_3.CMMT_OWN_PCT,
	out_3.CMMT_LEAD_PART_IND,
	out_3.DLQNY_METH_CD,
	out_3.SRC_LN_FED_CALL_RPT_CD,
	out_3.LN_REC_CD,
	out_3.AVAIL_RLUP_IND,
	out_3.AGNT_BANK_NAME,
	out_3.SRC_DLQNY_CD,
	out_3.SUPERVISORY_LTV_PCT,
	out_3.SUPERVISORY_LTV_CAT_DESC,
	out_3.SRC_AGNT_BANK_NBR,
	out_3.SRC_UNDERWRITING_OFCR_CD,
	out_3.PERMT_FINCG_ENTITY_NAME,
	out_3.PERMT_FINCG_CD,
	out_3.FXD_FEE_BEG_DT,
	out_3.FXD_FEE_AMT_CD,
	out_3.FXD_FEE_CALC_CD,
	out_3.FXD_FEE_DUE_DT,
	out_3.FXD_FEE_EARN_CD,
	out_3.DISC_AMT,
	out_3.SERV_GRP_OR_DEPT,
	out_3.ENTPRS_EXIT_DT,
	out_3.CL_MODE_X_CD,
	out_3.CL_TYP_X_CD,
	out_3.LEVERAGE_EXIT_DT,
	out_3.LN_ORIG_SYS_ACCT_NBR,
	out_3.LN_ORIG_SYS_CD,
	out_3.SRC_UNDERWRITING_CC_NBR,
	out_3.SRC_FORECLS_STAT_CD,
	out_3.SRC_MDM_FCLTY_ID,
	out_3.BOOKED_THIS_MTH_IND,
	out_3.SRC_PMT_APPL_CD,
	out_3.PART_PURCH_PCT,
	out_3.PART_PURCH_TOT_CMMT_AMT,
	out_3.PART_PURCH_FROM_BANK_NBR,
	out_3.PART_PURCH_FROM_BANK_NAME,
	out_3.CRA_LN_TYP,
	out_3.CRA_LN_TYP_DESC,
	out_3.BKRPT_STAT_CD,
	out_3.APPR_BY_APPL_ONLY_IND,
	out_3.LN_PROG_DESC,
	out_3.SBA_LN_NBR,
	out_3.SRC_SHDW_SAG_OFCR_CD,
	out_3.SRC_SAG_OFCR_CD,
	out_3.CENTRALLY_PRCS_IND,
	out_3.FDIC_SPPRTD_LN_IND,
	out_3.BKRPT_IND,
	out_3.BKRPT_STAT_DESC,
	out_3.BKRPT_TYP_CD,
	out_3.BKRPT_TYP_DESC,
	out_3.FORECLS_STAT_DESC,
	out_3.LN_ORIG_CHNL_CD,
	out_3.PROMO_CD,
	out_3.TDR_DT,
	out_3.TDR_IND,
	out_3.ENERGY_CD,
	out_3.ENERGY_CD_DESC,
	out_3.SRC_FULLY_CHOF_IND,
	out_3.SRC_OREO_IND,
	out_3.DISP_CD,
	out_3.CNSMR_CREDIT_CNSLNG_IND,
	out_3.PORTFOLIO_MGMT_CD,
	out_3.PORTFOLIO_MGMT_DESC,
	out_3.MOODYS_PROD_CD,
	out_3.TBI_CAT_DESC,
	out_3.PPR_PROP_TYP_DESC,
	out_3.COMML_RE_COLL_IND,
	out_3.RE_COLL_IND,
	out_3.NTNL_RE_IND,
	out_3.BKRPT_DT,
	out_3.PART_SNC_RPT_IND,
	out_3.REG_W_CD,
	out_3.CUPA_ID,
	out_3.FRY14_CAT_CD,
	out_3.QRM_SEG_CD,
	out_3.QRM_SEG_DESC,
	out_3.REG_AT_RISK_IND,
	out_3.INT_RATE_CLNG_INITL_PRD_PCT,
	out_3.LN_UNUSD_AMT_FEE_RATE,
	out_3.LEND_ARRANGEMENT_CD,
	out_3.LEND_ARRANGEMENT_DESC,
	out_3.LEASE_RISK_MGMT_CC_NBR,
	out_3.MUNI_RISK_WT_PCT,
	out_3.PR_APPL_CD,
	out_3.PR_APPL_CD_DESC,
	out_3.LEASE_ACCT_DIST_CD,
	out_3.NON_ACCR_END_DT,
	out_3.PAR_VAL_LN_AMT,
	out_3.BUILDER_NAME,
	out_3.MJR_MOD_DT,
	out_3.LN_PURCH_TYP_CD,
	out_3.LN_PURCH_DT,
	out_3.LN_PURCH_TYP_DESC,
	out_3.PREDECESSOR_LN_NBR,
	out_3.COLL_MONITOR_RESP_CD,
	out_3.COLL_MONITOR_RESP_DESC,
	out_3.AGREE_APPL_SYS_NAME,
	out_3.AGREE_APPL_NATL_KEY,
	out_3.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME,
	out_3.CREDIT_LMT_EFF_AMT,
	out_3.HFI_HFS_CD,
	out_3.HFI_HFS_DESC,
	out_3.BB_AMT,
	out_3.EFF_LMT_CD,
	out_3.EFF_LMT_DESC,
	out_3.BUS_BANKG_DECSN_CD,
	out_3.BUS_BANKG_DECSN_DESC,
	out_3.FRB_FHLB_ELIG_PLEDGE_CD
)

# Processing node SEQ_OUT2_CONV4, type REPLICATE
# COLUMN COUNT: 183
# Original node name CP_CREDIT_FCLTY_BANCS, link SEQ_OUT2_CONV4

SEQ_OUT2_CONV4 = out_3.select(
	out_3.ACCT_ID,
	out_3.AS_OF_DT,
	out_3.CREDIT_FCLTY_TYP,
	out_3.ORIG_LN_AMT,
	out_3.CUR_LN_AMT,
	out_3.TOT_PART_SOLD_AMT,
	out_3.LIFE_INS_AMT,
	out_3.SRC_ACCR_STAT_CD,
	out_3.NON_ACCR_IND,
	out_3.NON_ACCR_DT,
	out_3.MIN_LATE_CHRG_AMT,
	out_3.MAX_LATE_CHRG_AMT,
	out_3.LATE_CHRG_PCT,
	out_3.LATE_CHRG_IND,
	out_3.SOLD_PCT,
	out_3.LATE_CHRG_GRC_DAY_CNT,
	out_3.RNWL_PRCS_THIS_MTH_IND,
	out_3.PREPMT_PNLTY_CD,
	out_3.REVOLVING_IND,
	out_3.LAST_INT_BEG_DT,
	out_3.DRCT_OR_INDIR_LN_IND,
	out_3.INTRO_RATE_IND,
	out_3.INTRO_RATE_END_DT,
	out_3.FORECLS_IND,
	out_3.FORECLS_STAT_CD,
	out_3.FNL_PMT_DT,
	out_3.LIFE_INS_CD,
	out_3.LIFE_INS_EXP_DT,
	out_3.PLEDGE_CD,
	out_3.SRC_BKRPT_STAT_CD,
	out_3.SEND_NO_BILL_CD,
	out_3.OWNR_OCCUPIED_CD,
	out_3.FEE_CAT_CD,
	out_3.LATE_CHRG_CALC_METH_CD,
	out_3.PRIN_OR_INT_ONLY_CD,
	out_3.PMT_METH_CD,
	out_3.SRC_RENEGOTIATION_CD,
	out_3.RENEGOTIATION_CD,
	out_3.RENEGOTIATION_DESC,
	out_3.SRC_PROG_CD,
	out_3.SRC_COLL_CD,
	out_3.COLL_CD,
	out_3.COLL_DESC,
	out_3.SRC_LIEN_PSTN_CD,
	out_3.SRC_INT_PMT_FREQ_CD,
	out_3.LIEN_PSTN,
	out_3.INT_PMT_FREQ_CD,
	out_3.INT_PMT_FREQ_DESC,
	out_3.SRC_PRIN_PMT_FREQ_CD,
	out_3.PRIN_PMT_FREQ_CD,
	out_3.PRIN_PMT_FREQ_DESC,
	out_3.INT_RATE_CLNG_LIFE_OF_LN_PCT,
	out_3.INT_RATE_FLR_LIFE_OF_LN_PCT,
	out_3.INT_RATE_CLNG_CUR_PRD_PCT,
	out_3.INT_RATE_FLR_CUR_PRD_PCT,
	out_3.INVSTR_POOL_NBR,
	out_3.TIERED_RATE_IND,
	out_3.DLR_CD,
	out_3.DLR_NBR,
	out_3.DLR_RATE,
	out_3.CMMT_LVL_CD,
	out_3.ULT_PARENT_ACCT_NBR,
	out_3.PARENT_REC_IND,
	out_3.CHLD_REC_IND,
	out_3.COMMUNITY_DVLPMT_IND,
	out_3.SRC_DIV_CD,
	out_3.SRC_PRPSE_CD,
	out_3.SRC_PRPSE_DESC,
	out_3.ENTRY_DT,
	out_3.SHRD_NTNL_CREDIT_IND,
	out_3.LN_PROG_CD,
	out_3.SYNDICATED_IND,
	out_3.ENTPRS_LEVERAGE_LEND_CD,
	out_3.TAX_FREE_IND,
	out_3.CMMT_DRAW_IND,
	out_3.CMMT_OWN_PCT,
	out_3.CMMT_LEAD_PART_IND,
	out_3.DLQNY_METH_CD,
	out_3.SRC_LN_FED_CALL_RPT_CD,
	out_3.LN_REC_CD,
	out_3.AVAIL_RLUP_IND,
	out_3.AGNT_BANK_NAME,
	out_3.SRC_DLQNY_CD,
	out_3.SUPERVISORY_LTV_PCT,
	out_3.SUPERVISORY_LTV_CAT_DESC,
	out_3.SRC_AGNT_BANK_NBR,
	out_3.SRC_UNDERWRITING_OFCR_CD,
	out_3.PERMT_FINCG_ENTITY_NAME,
	out_3.PERMT_FINCG_CD,
	out_3.FXD_FEE_BEG_DT,
	out_3.FXD_FEE_AMT_CD,
	out_3.FXD_FEE_CALC_CD,
	out_3.FXD_FEE_DUE_DT,
	out_3.FXD_FEE_EARN_CD,
	out_3.DISC_AMT,
	out_3.SERV_GRP_OR_DEPT,
	out_3.ENTPRS_EXIT_DT,
	out_3.CL_MODE_X_CD,
	out_3.CL_TYP_X_CD,
	out_3.LEVERAGE_EXIT_DT,
	out_3.LN_ORIG_SYS_ACCT_NBR,
	out_3.LN_ORIG_SYS_CD,
	out_3.SRC_UNDERWRITING_CC_NBR,
	out_3.SRC_FORECLS_STAT_CD,
	out_3.SRC_MDM_FCLTY_ID,
	out_3.BOOKED_THIS_MTH_IND,
	out_3.SRC_PMT_APPL_CD,
	out_3.PART_PURCH_PCT,
	out_3.PART_PURCH_TOT_CMMT_AMT,
	out_3.PART_PURCH_FROM_BANK_NBR,
	out_3.PART_PURCH_FROM_BANK_NAME,
	out_3.CRA_LN_TYP,
	out_3.CRA_LN_TYP_DESC,
	out_3.BKRPT_STAT_CD,
	out_3.APPR_BY_APPL_ONLY_IND,
	out_3.LN_PROG_DESC,
	out_3.SBA_LN_NBR,
	out_3.SRC_SHDW_SAG_OFCR_CD,
	out_3.SRC_SAG_OFCR_CD,
	out_3.CENTRALLY_PRCS_IND,
	out_3.FDIC_SPPRTD_LN_IND,
	out_3.BKRPT_IND,
	out_3.BKRPT_STAT_DESC,
	out_3.BKRPT_TYP_CD,
	out_3.BKRPT_TYP_DESC,
	out_3.FORECLS_STAT_DESC,
	out_3.LN_ORIG_CHNL_CD,
	out_3.PROMO_CD,
	out_3.TDR_DT,
	out_3.TDR_IND,
	out_3.ENERGY_CD,
	out_3.ENERGY_CD_DESC,
	out_3.SRC_FULLY_CHOF_IND,
	out_3.SRC_OREO_IND,
	out_3.DISP_CD,
	out_3.CNSMR_CREDIT_CNSLNG_IND,
	out_3.PORTFOLIO_MGMT_CD,
	out_3.PORTFOLIO_MGMT_DESC,
	out_3.MOODYS_PROD_CD,
	out_3.TBI_CAT_DESC,
	out_3.PPR_PROP_TYP_DESC,
	out_3.COMML_RE_COLL_IND,
	out_3.RE_COLL_IND,
	out_3.NTNL_RE_IND,
	out_3.BKRPT_DT,
	out_3.PART_SNC_RPT_IND,
	out_3.REG_W_CD,
	out_3.CUPA_ID,
	out_3.FRY14_CAT_CD,
	out_3.QRM_SEG_CD,
	out_3.QRM_SEG_DESC,
	out_3.REG_AT_RISK_IND,
	out_3.INT_RATE_CLNG_INITL_PRD_PCT,
	out_3.LN_UNUSD_AMT_FEE_RATE,
	out_3.LEND_ARRANGEMENT_CD,
	out_3.LEND_ARRANGEMENT_DESC,
	out_3.LEASE_RISK_MGMT_CC_NBR,
	out_3.MUNI_RISK_WT_PCT,
	out_3.PR_APPL_CD,
	out_3.PR_APPL_CD_DESC,
	out_3.LEASE_ACCT_DIST_CD,
	out_3.NON_ACCR_END_DT,
	out_3.PAR_VAL_LN_AMT,
	out_3.BUILDER_NAME,
	out_3.MJR_MOD_DT,
	out_3.LN_PURCH_TYP_CD,
	out_3.LN_PURCH_DT,
	out_3.LN_PURCH_TYP_DESC,
	out_3.PREDECESSOR_LN_NBR,
	out_3.COLL_MONITOR_RESP_CD,
	out_3.COLL_MONITOR_RESP_DESC,
	out_3.AGREE_APPL_SYS_NAME,
	out_3.AGREE_APPL_NATL_KEY,
	out_3.CREDIT_DECSN_OVERRIDE_AUTH_LVL_NAME,
	out_3.CREDIT_LMT_EFF_AMT,
	out_3.HFI_HFS_CD,
	out_3.HFI_HFS_DESC,
	out_3.BB_AMT,
	out_3.EFF_LMT_CD,
	out_3.EFF_LMT_DESC,
	out_3.BUS_BANKG_DECSN_CD,
	out_3.BUS_BANKG_DECSN_DESC,
	out_3.FRB_FHLB_ELIG_PLEDGE_CD
)

# Processing node CREDIT_FCLTY_BANCS_STG, type TARGET
# COLUMN COUNT: 183

CREDIT_FCLTY_BANCS_STG = SEQ_OUT2_CONV4.select('*')
CREDIT_FCLTY_BANCS_STG.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('STG_DIR')}/bancs/credit_fclty_BANCS_{getArgument('DATA_DATE')}_{getArgument('APPL_CD')}.stg')

# Processing node CREDIT_FCLTY_BANCS_DS, type TARGET
# COLUMN COUNT: 183

CREDIT_FCLTY_BANCS_DS = SEQ_OUT1_CONV2.select('*')
CREDIT_FCLTY_BANCS_DS.write.format('csv').option('header','false').mode('overwrite').option('sep',',').csv('{getArgument('DS_DIR')}/bancs/credit_fclty_bancs_stg_{getArgument('APPL_CD')}.ds')